<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Orange Sun - programming</title><link href="https://potyarkin.ml/" rel="alternate"></link><link href="https://potyarkin.ml/feeds/programming.atom.xml" rel="self"></link><id>https://potyarkin.ml/</id><updated>2023-05-03T00:00:00+03:00</updated><subtitle>Unsorted ramblings, sometimes related to programming</subtitle><entry><title>A pull request 10 years in the making</title><link href="https://potyarkin.ml/posts/2023/10-year-pull-request/" rel="alternate"></link><published>2023-05-03T00:00:00+03:00</published><updated>2023-05-03T00:00:00+03:00</updated><author><name>Vitaly Potyarkin</name></author><id>tag:potyarkin.ml,2023-05-03:/posts/2023/10-year-pull-request/</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;Once upon a time there was a bug in a free software project that annoyed me
for long enough that I've learned C to fix it. And it felt good.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now that we've got a TL;DR out of the way, here is the story.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://potyarkin.ml/resources/pr893_timeline.svg"&gt;&lt;img alt="story timeline" src="https://potyarkin.ml/resources/pr893_timeline.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There is a good torrent …&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;Once upon a time there was a bug in a free software project that annoyed me
for long enough that I've learned C to fix it. And it felt good.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now that we've got a TL;DR out of the way, here is the story.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://potyarkin.ml/resources/pr893_timeline.svg"&gt;&lt;img alt="story timeline" src="https://potyarkin.ml/resources/pr893_timeline.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There is a good torrent client called &lt;a href="https://transmissionbt.com/"&gt;Transmission&lt;/a&gt;. It's lightweight, fast
and reliable. I have compared it against alternatives several times and
Transmission had always come out on top.&lt;/p&gt;
&lt;p&gt;In 2011 I've found out that Transmission had open file limit essentially
hardcoded to a value of 1024. Given that in Unix-like systems this limit
is also spent on open network sockets the number seemed extremely low.&lt;/p&gt;
&lt;p&gt;Back then FOSS culture was still very foreign to me, so I did what any
consumer would naturally do: I contacted support. Helpful visitors of
Transmission forums told me that open file limit is indeed hardcoded and
pointed me to a &lt;a href="https://trac.transmissionbt.com/ticket/4164"&gt;bug tracker ticket&lt;/a&gt; which discussed this issue and
which was closed several months prior without any real fix.&lt;/p&gt;
&lt;p&gt;Bug tracker discussion pointed out that there was a good reason for setting
such limit, a decades old limitation in glibc - important enough to be
featured first in BUGS section of &lt;a href="https://manpages.debian.org/bullseye/manpages-dev/select.2.en.html#BUGS"&gt;&lt;code&gt;man 2 select&lt;/code&gt;&lt;/a&gt;. Since Transmission
had hit this limitation via intermediate library (libcurl) there wasn't
much else for Transmission developers to do at the time besides to hardcode a
safe low value. Facebook had contributed an alternative libcurl API to work
around that bug only &lt;a href="https://daniel.haxx.se/blog/2012/09/03/introducing-curl_multi_wait/"&gt;a year later&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I did not handle the news well. In fact I did not understand most of it at the
time, only that developers were aware of a problem and that they were not
going to do anything about it. I switched to another torrent client and went
on to moan on local forums about how silly Transmission is and how it's useful
only for toy workloads. For several years every time someone mentioned
Transmission in IRC/XMPP chats I would snarkily introduce them to this bug.
Not my finest hour, I know.&lt;/p&gt;
&lt;p&gt;In the mean time I was hitting the limitations of other torrent clients and
remembered Transmission mostly fondly (if not for that one bug). Some time
later I even returned to Transmission and was sharding workloads between
multiple instances to avoid exhausting open files limit. I reviewed the
alternatives from time to time and have not found any other client to be better enough
to switch to.&lt;/p&gt;
&lt;p&gt;As time went on other people got burned by the same bug. Some of them started
badmouthing Transmission like I did. Forums posts and bug tracker tickets
piled on, but no forward progress was made.&lt;/p&gt;
&lt;p&gt;Unrelated to Transmission, I got introduced to FOSS scene. I've acquired a
habit of checking if I could understand the source code upon encountering a
nasty bug in a piece of software. I submitted a few small PRs to other
projects I used, shared a few projects of my own and experienced being on the
receiving end of an issue/PR. After many years I decided to look at that
Transmission issue again.&lt;/p&gt;
&lt;p&gt;Turned out that thanks to all commenters on Trac and on GitHub, the issue has
been investigated to its root already. Libcurl was the culprit. Quick web
search had introduced me to &lt;code&gt;curl_multi_wait&lt;/code&gt; API, and after some introductory C
tutorials I was able to replace all &lt;code&gt;select()&lt;/code&gt; calls with the new API.&lt;/p&gt;
&lt;p&gt;I submitted the &lt;a href="https://github.com/transmission/transmission/pull/893"&gt;pull request&lt;/a&gt; in April 2019 and the rest is history:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;My PR got merged into Transmission in July 2020, providing closure to more
  than a dozen of bug reports&lt;/li&gt;
&lt;li&gt;The first stable version of Transmission featuring my fix (v4.0.0) has
  become available in 2023&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It felt good to finally remove this thorn instead of complaining about it.
I probably should have done that much sooner.&lt;/p&gt;</content><category term="posts"></category><category term="opensource"></category><category term="programming"></category></entry><entry><title>Advent of Code 2022 was fun!</title><link href="https://potyarkin.ml/posts/2023/aoc2022/" rel="alternate"></link><published>2023-03-09T00:00:00+03:00</published><updated>2023-03-09T00:00:00+03:00</updated><author><name>Vitaly Potyarkin</name></author><id>tag:potyarkin.ml,2023-03-09:/posts/2023/aoc2022/</id><summary type="html">&lt;p&gt;This was the first year I participated in &lt;a href="https://adventofcode.com"&gt;Advent of Code&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/sio/advent-of-code/tree/master/aoc2022"&gt;&lt;img alt="" src="https://potyarkin.ml/resources/aoc2022.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In case you're not familiar with it, AoC is a Christmas themed programming
competition consisting of 25 challenges published daily (from December 1st to
December 25th). The web site produces personalized puzzle inputs for each user
and expects only …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This was the first year I participated in &lt;a href="https://adventofcode.com"&gt;Advent of Code&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/sio/advent-of-code/tree/master/aoc2022"&gt;&lt;img alt="" src="https://potyarkin.ml/resources/aoc2022.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In case you're not familiar with it, AoC is a Christmas themed programming
competition consisting of 25 challenges published daily (from December 1st to
December 25th). The web site produces personalized puzzle inputs for each user
and expects only the results to be submitted for validation, not full
algorithms. Participants may use any programming language they like.&lt;/p&gt;
&lt;p&gt;I did not compete for global or community &lt;a href="https://adventofcode.com/2022/leaderboard"&gt;leaderboards&lt;/a&gt; - that would be too
high of a pressure to remain fun. Instead I took a self paced approach and
solved puzzles whenever I felt like it - though I've never skipped ahead to
start the next challenge until I was done with the current one.
&lt;a href="https://github.com/sio/advent-of-code/tree/master/aoc2022"&gt;I completed&lt;/a&gt; the first 18 puzzles in December 2022 and finished the
remaining ones in 2023.&lt;/p&gt;
&lt;p&gt;It was very fun!&lt;/p&gt;
&lt;p&gt;For me Advent of Code turned out to be the best computer game I played in
years (though I'm not much of a gamer). Like many games it requires the player
to develop and hone some arbitrary skills but in this case the skills are not
useless outside of the game. In addition to programming (obviously) AoC
tickled parts of my brain responsible for spatial thinking, math and
creativity. I was reminded of how much I enjoyed similarly spirited
math and physics puzzles when I was at school - it's a shame these experiences are
so rare in adult life.&lt;/p&gt;
&lt;p&gt;Roughly since Day 10 I've started taking notes about each puzzle and my
thought process during solving it. I've intended to include them into this
blog post, but I decided against it. There are enough AoC walkthroughs &lt;a href="https://www.google.com/search?q=%22advent+of+code%22+%222022%22+walkthrough"&gt;out
there&lt;/a&gt; already. Here is a condensed list of bullet points from
my notes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Advent of Code is fun! Grid puzzles and mazes are very fun, especially 3D
  ones! Tetris... Yummy! Maze on the surface of a cube... Brilliant!&lt;/li&gt;
&lt;li&gt;At some point I've grown tired. It was beginning to feel more like work and
  less like fun. Taking a (long) break here and there has helped to bring 
  the joy back&lt;/li&gt;
&lt;li&gt;Sometimes I got stuck. There is a large online community around Advent of
  Code, so there are a lot of ways to unblock oneself. I did not actively
  engage with any user group in particular, but on one occasion reading Reddit
  comments has helped to push me in the right direction, and on another one
  I've benefited from GitHub's social networking side.&lt;/li&gt;
&lt;li&gt;AoC is a computer game you can continue playing while away from keyboard. A lot of
  good solution ideas have come to me while I was in shower or in a traffic
  jam.&lt;/li&gt;
&lt;li&gt;A couple of times I felt very clever when I solved Part 2 of the puzzle
  before seeing the prompt.&lt;/li&gt;
&lt;li&gt;Off-by-one errors are truly the bane of programmer's existence :-)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I solved all 2022's puzzles using Go language. I've picked it up less than a
month before the start of Advent of Code, so I went in expecting to learn a
lot and I was not disappointed. I've grown to appreciate the breadth of Golang
standard library and to love type redefining. All of &lt;a href="https://github.com/sio/advent-of-code/tree/master/aoc2022"&gt;my solutions&lt;/a&gt; use only
the standard library - this happened organically, I did not impose any
restrictions in this regard.&lt;/p&gt;
&lt;p&gt;All in all, Go turned out to be exactly what it has promised: a nice language
with a fast compiler and strict type system. From now on I will choose it over
Python for personal projects.&lt;/p&gt;
&lt;p&gt;Working on these 25 puzzles I've gotten used to always having an extra thread of
thought in background, completely unrelated to personal or work life. Even
though I miss it now, I'm not yet sure if I should dive into AoC puzzles
from previous years. Do they introduce enough variety to tickle my mind in
some new ways or are they just more of the same thing? If I ever decide to
try, I've heard that AoC 2019 IntCode puzzles are good - I'll probably start
with those.&lt;/p&gt;</content><category term="posts"></category><category term="programming"></category><category term="go"></category></entry></feed>