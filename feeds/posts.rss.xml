<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Orange Sun - posts</title><link>https://potyarkin.ml/</link><description>Unsorted ramblings, sometimes related to programming</description><lastBuildDate>Sun, 01 Apr 2018 12:00:00 +0300</lastBuildDate><item><title>Unit testing in Power Query M Language</title><link>https://potyarkin.ml/posts/2018/unit-testing-in-power-query-m-language/</link><description>&lt;p&gt;As your code base gets bigger,
&lt;a href="https://en.wikipedia.org/wiki/Test_automation"&gt;test automation&lt;/a&gt; becomes more
and more important. This applies to any development platform, including Power
Query / PowerBI. If you reuse your code and improve some low level function
later, test automation allows you to make sure your changes did not break
anything that depends …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vitaly Potyarkin</dc:creator><pubDate>Sun, 01 Apr 2018 12:00:00 +0300</pubDate><guid isPermaLink="false">tag:potyarkin.ml,2018-04-01:/posts/2018/unit-testing-in-power-query-m-language/</guid><category>m</category><category>power-query</category><category>LibPQ</category></item><item><title>Getting started with LibPQ</title><link>https://potyarkin.ml/posts/2018/getting-started-with-libpq/</link><description>&lt;p&gt;This is a step by step guide to getting started with &lt;a href="https://potyarkin.ml/posts/2018/expanding-power-query-standard-library-introducing-libpq/"&gt;LibPQ&lt;/a&gt;, an illustrated
version of &lt;a href="https://github.com/sio/LibPQ/blob/master/README.md#installation-and-usage"&gt;"Installation and usage"&lt;/a&gt; section of the official
documentation.&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;h3&gt;LibPQ source code&lt;/h3&gt;
&lt;p&gt;The source code of the library has to be present in each workbook that uses it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a new blank query: &lt;code&gt;Data …&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vitaly Potyarkin</dc:creator><pubDate>Sun, 01 Apr 2018 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:potyarkin.ml,2018-04-01:/posts/2018/getting-started-with-libpq/</guid><category>m</category><category>power-query</category><category>LibPQ</category></item><item><title>Roads and Bridges - sustaining modern digital infrastructure</title><link>https://potyarkin.ml/posts/2018/roads-and-bridges-sustaining-modern-digital-infrastructure/</link><description>&lt;p&gt;This week I have stumbled upon a very thorough review of existing problems and
hidden costs of sustaining modern (open source) digital infrastructure. Here it
is: &lt;a href="https://www.fordfoundation.org/library/reports-and-studies/roads-and-bridges-the-unseen-labor-behind-our-digital-infrastructure/"&gt;Roads and Bridges - The Unseen Labor Behind Our Digital
Infrastructure&lt;/a&gt; by &lt;em&gt;Nadia Eghbal&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The essay was created with support from the Ford Foundation and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vitaly Potyarkin</dc:creator><pubDate>Fri, 23 Feb 2018 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:potyarkin.ml,2018-02-23:/posts/2018/roads-and-bridges-sustaining-modern-digital-infrastructure/</guid><category>bookmarks</category><category>opensource</category></item><item><title>Expanding Power Query standard library - introducing LibPQ</title><link>https://potyarkin.ml/posts/2018/expanding-power-query-standard-library-introducing-libpq/</link><description>&lt;p&gt;Power Query formula language (also known as M language) is a very capable yet
not very flexible tool. It lacks some features taken for granted by developers
who are used to other programming languages such as compatibility with version
control systems, extensibility by third-party libraries, etc.&lt;/p&gt;
&lt;p&gt;That is why I …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vitaly Potyarkin</dc:creator><pubDate>Wed, 03 Jan 2018 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:potyarkin.ml,2018-01-03:/posts/2018/expanding-power-query-standard-library-introducing-libpq/</guid><category>m</category><category>excel</category><category>power-query</category><category>LibPQ</category></item><item><title>Loops in Power Query M language</title><link>https://potyarkin.ml/posts/2017/loops-in-power-query-m-language/</link><description>&lt;p&gt;Power Query Formula Language (also known as M language) is sometimes difficult
to get your head around. This article explains how someone familiar with loops
in other programming languages can approach the same concept in M language.&lt;/p&gt;
&lt;p&gt;First of all let's look at the &lt;a href="https://msdn.microsoft.com/en-us/library/mt211003.aspx"&gt;definition&lt;/a&gt; given by Microsoft:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Power …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vitaly Potyarkin</dc:creator><pubDate>Tue, 31 Oct 2017 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:potyarkin.ml,2017-10-31:/posts/2017/loops-in-power-query-m-language/</guid><category>m</category><category>excel</category><category>power-query</category></item><item><title>Temporary virtual environment for Python</title><link>https://potyarkin.ml/posts/2017/temporary-virtual-environment-for-python/</link><description>&lt;p&gt;Using Python on Windows does not come as naturally as on Unix-like systems, so
any help is appreciated.&lt;/p&gt;
&lt;p&gt;I wrote a batch script to automate creation, setup and deletion of Python virtual
environment. This can come in handy when you want to test something in a clean env,
or to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vitaly Potyarkin</dc:creator><pubDate>Thu, 05 Oct 2017 16:50:00 +0300</pubDate><guid isPermaLink="false">tag:potyarkin.ml,2017-10-05:/posts/2017/temporary-virtual-environment-for-python/</guid><category>windows</category><category>script</category><category>gist</category></item><item><title>Execute the same git subcommand in all local repositories</title><link>https://potyarkin.ml/posts/2017/execute-the-same-git-subcommand-in-all-local-repositories/</link><description>&lt;p&gt;If you work with more than one git project simultaneously, you often need to
do the same maintenance tasks in each cloned repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;check if there are some changes waiting to be pushed,&lt;/li&gt;
&lt;li&gt;check remote URLs for all repos (e.g. when considering to switch from HTTPS
  authentication with GitHub …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vitaly Potyarkin</dc:creator><pubDate>Thu, 05 Oct 2017 15:40:00 +0300</pubDate><guid isPermaLink="false">tag:potyarkin.ml,2017-10-05:/posts/2017/execute-the-same-git-subcommand-in-all-local-repositories/</guid><category>bash</category><category>script</category><category>gist</category></item><item><title>Portable development setup for Python on Windows</title><link>https://potyarkin.ml/posts/2017/portable-development-setup-for-python-on-windows/</link><description>&lt;h2&gt;WinPython&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://winpython.github.io/"&gt;https://winpython.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;All-in-one distribution which comes with many difficult-to-build packages
preinstalled. And their ...-Zero version is great for thumb drives!&lt;/p&gt;
&lt;p&gt;Pip works just fine, but installing packages that require C compiler is
always a pain on Windows. May be I should look into conda and see if …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Vitaly Potyarkin</dc:creator><pubDate>Wed, 20 Sep 2017 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:potyarkin.ml,2017-09-20:/posts/2017/portable-development-setup-for-python-on-windows/</guid><category>python</category><category>windows</category><category>bookmarks</category></item></channel></rss>