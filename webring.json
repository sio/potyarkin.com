[
  {
    "blog": {
      "title": "Wandering Thoughts",
      "by": "Chris Siebenmann at University of Toronto",
      "url": "https://utcc.utoronto.ca/~cks/space/blog/",
      "feed": "https://utcc.utoronto.ca/~cks/space/blog/?atom",
      "description": "Fifteen years of almost daily articles on Unix/Linux and Python. Very\ninteresting findings on Unix history from a person who had experienced\nmost of it firsthand. Some less important news, scripts and\nphilosophical musings on the role of software in our lives.\n\nThe author hosts his blog at employer's hosting and domain name, so I\nwouldn't be surprised if the blog would go offline one day. Let's hope\nthe Web Archive runs its spiders regularly.",
      "section": "Linux"
    },
    "entry": {
      "id": "tag:cspace@cks.mef.org,2009-03-24:/blog/tech/OneIsEasierThanMore",
      "guidislink": true,
      "link": "https://utcc.utoronto.ca/~cks/space/blog/tech/OneIsEasierThanMore",
      "links": [
        {
          "rel": "alternate",
          "type": "text/html",
          "href": "https://utcc.utoronto.ca/~cks/space/blog/tech/OneIsEasierThanMore"
        }
      ],
      "authors": [
        {
          "name": "cks"
        }
      ],
      "author_detail": {
        "name": "cks"
      },
      "author": "cks",
      "content": [
        {
          "type": "text/html",
          "language": null,
          "base": "https://utcc.utoronto.ca/~cks/space/blog/?atom",
          "value": "<div class=\"wikitext\"><p>Recently, I was sort of asked why we didn't just have multiple\nPrometheus servers (and <a href=\"https://utcc.utoronto.ca/~cks/space/blog/tech/HDDsNowSomewhatBetter\">were instead using mirrored 20TB HDs</a>). There are specific answers for the case\nof Prometheus, but in general <strong>one is the easiest number of things\nto have</strong>. The moment you have more than one of something, you get\na bunch of extra problems. At a minimum, you have to worry about\nconsistency between your N things, coordination between your N\nthings, and choosing which of your N things you're going to interact\nwith. These are all hard problems, and you don't have them if you\nonly have one thing.</p>\n\n<p>The problem of choosing between your N things is often considered\nsufficiently hard for people to deal with that systems go well out of\ntheir way in order to turn N things back into one as far as you're\nconcerned. For example, HTTP load balancers turn N web servers back into\none from an outside perspective, and RAID mirrors turn N disks back into\none as far as everything above them is concerned.</p>\n\n<p>In both cases (and many others) the illusion that you're dealing with\nonly a single thing can falter. An underlying web server or physical\ndisk that has different answers than all of the others will cause you\nheartburn and break the illusion of a single thing (well, a single\nnon-flaky thing). Still, these illusions tend to work well enough that\nwe readily use them and usually prefer them to the alternatives.</p>\n\n<p>(One reason they work so well is that vast amounts of engineering\nresources have been devoted to making them that way.)</p>\n\n<p>As a system design issue, the real question is not why you only\nhave one of something, it's whether you absolutely have to have\nmore than one. Even if having more than one works just as well as\nhaving only one, it'll almost certainly be more complicated and\nhave more peculiar failure modes. \"Do the simplest thing that works\"\nis a good idea in general, and much of the time this means 'one' is\nthe number you want.</p>\n\n<p>A corollary to this is that any 'more than one' system that wants to be\nused should pay a lot of attention to making itself work reliably and\nsmoothly. We pretty much universally use software mirrored disks on our\nLinux systems, and certainly one bit reason for that is that the Linux\nsoftware RAID people have spent a lot of effort creating a system that\njust works, minimizing the disadvantages of having two (or more) while\nmaximizing the advantages.</p>\n\n<p>(This observation is in no way new. I just feel like writing it down\ntoday.)</p>\n</div>"
        }
      ],
      "summary": "<div class=\"wikitext\"><p>Recently, I was sort of asked why we didn't just have multiple\nPrometheus servers (and <a href=\"https://utcc.utoronto.ca/~cks/space/blog/tech/HDDsNowSomewhatBetter\">were instead using mirrored 20TB HDs</a>). There are specific answers for the case\nof Prometheus, but in general <strong>one is the easiest number of things\nto have</strong>. The moment you have more than one of something, you get\na bunch of extra problems. At a minimum, you have to worry about\nconsistency between your N things, coordination between your N\nthings, and choosing which of your N things you're going to interact\nwith. These are all hard problems, and you don't have them if you\nonly have one thing.</p>\n\n<p>The problem of choosing between your N things is often considered\nsufficiently hard for people to deal with that systems go well out of\ntheir way in order to turn N things back into one as far as you're\nconcerned. For example, HTTP load balancers turn N web servers back into\none from an outside perspective, and RAID mirrors turn N disks back into\none as far as everything above them is concerned.</p>\n\n<p>In both cases (and many others) the illusion that you're dealing with\nonly a single thing can falter. An underlying web server or physical\ndisk that has different answers than all of the others will cause you\nheartburn and break the illusion of a single thing (well, a single\nnon-flaky thing). Still, these illusions tend to work well enough that\nwe readily use them and usually prefer them to the alternatives.</p>\n\n<p>(One reason they work so well is that vast amounts of engineering\nresources have been devoted to making them that way.)</p>\n\n<p>As a system design issue, the real question is not why you only\nhave one of something, it's whether you absolutely have to have\nmore than one. Even if having more than one works just as well as\nhaving only one, it'll almost certainly be more complicated and\nhave more peculiar failure modes. \"Do the simplest thing that works\"\nis a good idea in general, and much of the time this means 'one' is\nthe number you want.</p>\n\n<p>A corollary to this is that any 'more than one' system that wants to be\nused should pay a lot of attention to making itself work reliably and\nsmoothly. We pretty much universally use software mirrored disks on our\nLinux systems, and certainly one bit reason for that is that the Linux\nsoftware RAID people have spent a lot of effort creating a system that\njust works, minimizing the disadvantages of having two (or more) while\nmaximizing the advantages.</p>\n\n<p>(This observation is in no way new. I just feel like writing it down\ntoday.)</p>\n</div>",
      "title": "Having one is often much easier than having more than one",
      "title_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://utcc.utoronto.ca/~cks/space/blog/?atom",
        "value": "Having one is often much easier than having more than one"
      },
      "tags": [
        {
          "term": "tech",
          "scheme": null,
          "label": null
        }
      ],
      "updated": "2022-07-01T02:27:34Z",
      "updated_parsed": [
        2022,
        7,
        1,
        2,
        27,
        34,
        4,
        182,
        0
      ],
      "published": "2022-07-01T02:26:33Z",
      "published_parsed": [
        2022,
        7,
        1,
        2,
        26,
        33,
        4,
        182,
        0
      ]
    }
  },
  {
    "blog": {
      "title": "Drew DeVault's Blog",
      "url": "https://drewdevault.com/",
      "feed": "https://drewdevault.com/blog/index.xml",
      "description": "Personal tech blog from the creator of Sourcehut, a more transparent\nalternative to GitHub.  Drew writes about being an entrepreneur in the\nFOSS world, about sustainability of Open Source projects and about\ntricky problems he uses Unix and Python knowledge to solve.",
      "section": "Linux"
    },
    "entry": {
      "title": "GitHub Copilot and open source laundering",
      "title_detail": {
        "type": "text/plain",
        "language": null,
        "base": "https://drewdevault.com/blog/index.xml",
        "value": "GitHub Copilot and open source laundering"
      },
      "links": [
        {
          "rel": "alternate",
          "type": "text/html",
          "href": "https://drewdevault.com/2022/06/23/Copilot-GPL-washing.html"
        }
      ],
      "link": "https://drewdevault.com/2022/06/23/Copilot-GPL-washing.html",
      "published": "Thu, 23 Jun 2022 00:00:00 +0000",
      "published_parsed": [
        2022,
        6,
        23,
        0,
        0,
        0,
        3,
        174,
        0
      ],
      "id": "https://drewdevault.com/2022/06/23/Copilot-GPL-washing.html",
      "guidislink": false,
      "summary": "<p><em>Disclaimer: I am the founder of a company which competes with GitHub. I am also\na long-time advocate for and developer of free and open source software, with a\nbroad understanding of free and open source software licensing and philosophy. I\nwill not name my company in this post to reduce the scope of my conflict of\ninterest.</em></p>\n<p>We have seen an explosion in machine learning in the past decade, alongside an\nexplosion in the popularity of free software. At the same time as FOSS has come\nto dominate software and found its place in almost all new software products,\nmachine learning has increased dramatically in sophistication, facilitating more\nnatural interactions between humans and computers. However, despite their\nparallel rise in computing, these two domains remain philosophically distant.</p>\n<p>Though some audaciously-named companies might suggest otherwise, the machine\nlearning space has enjoyed almost none of the freedoms forwarded by the free and\nopen source software movement. Much of the actual code related to machine\nlearning is publicly available, and there are many public access research\npapers available for anyone to read. However, the key to machine learning is\naccess to a high-quality dataset and heaps of computing power to process that\ndata, and these two resources are still kept under lock and key by almost all\nparticipants in the space.<sup id=\"fnref:1\"><a class=\"footnote-ref\" href=\"https://drewdevault.com/blog/index.xml#fn:1\">1</a></sup></p>\n<p>The essential barrier to entry for machine learning projects is overcoming these\ntwo problems, which are often very costly to secure. A high-quality, well tagged\ndata set generally requires thousands of hours of labor to produce,<sup id=\"fnref:2\"><a class=\"footnote-ref\" href=\"https://drewdevault.com/blog/index.xml#fn:2\">2</a></sup> a task\nwhich can potentially cost millions of dollars. Any approach which lowers this\nfigure is thus very desirable, even if the cost is making ethical compromises.\nWith Amazon, it takes the form of gig economy exploitation. With GitHub, it\ntakes the form of disregarding the terms of free software licenses. In the\nprocess, they built a tool which facilitates the large-scale laundering of free\nsoftware into non-free software by their customers, who GitHub offers plausible\ndeniability through an inscrutable algorithm.</p>\n<p>Free software is not an unqualified gift. There are terms for its use and\nre-use. Even so-called &ldquo;liberal&rdquo; software licenses impose requirements on\nre-use, such as attribution. To quote the MIT license:</p>\n<blockquote>\n<p>Permission is hereby granted [&hellip;] subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.</p>\n</blockquote>\n<p>Or the equally &ldquo;liberal&rdquo; BSD license:</p>\n<blockquote>\n<p>Redistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:</p>\n<p>Redistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.</p>\n</blockquote>\n<p>On the other end of the spectrum, copyleft licenses such as GNU General Public\nLicense or Mozilla Public License go further, demanding not only attribution for\nderivative works, but that such derived works are <em>also released</em> with the same\nlicense. Quoting GPL:</p>\n<blockquote>\n<p>You may convey a work based on the Program, or the modifications to produce it\nfrom the Program, in the form of source code under the terms of section 4,\nprovided that you also meet all of these conditions:</p>\n<p>[&hellip;]</p>\n<p>You must license the entire work, as a whole, under this License to anyone who\ncomes into possession of a copy.</p>\n</blockquote>\n<p>And MPL:</p>\n<blockquote>\n<p>All distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under the\nterms of this License. You must inform recipients that the Source Code Form of\nthe Covered Software is governed by the terms of this License, and how they\ncan obtain a copy of this License. You may not attempt to alter or restrict\nthe recipients' rights in the Source Code Form.</p>\n</blockquote>\n<p>Free software licenses impose obligations on the user through terms governing\nattribution, sublicensing, distribution, patents, trademarks, and relationships\nwith laws like the Digital Millennium Copyright Act. The free software community\nis no stranger to the difficulties in enforcing compliance with these\nobligations, which some groups view as too onerous. But as onerous as one may\nview these obligations to be, one is nevertheless required to comply with them.\nIf you believe that the force of copyright should protect your proprietary\nsoftware, then you must agree that it equally protects open source works,\ndespite the inconvenience or cost associated with this truth.</p>\n<p>GitHub&rsquo;s Copilot is trained on software governed by these terms, and it fails to\nuphold them, and enables customers to accidentally fail to uphold these terms\nthemselves. Some argue about the risks of a &ldquo;copyleft surprise&rdquo;, wherein someone\nincorporates a GPL licensed work into their product and is surprised to find\nthat they are obligated to release their product under the terms of the GPL as\nwell. Copilot institutionalizes this risk and any user who wishes to use it to\ndevelop non-free software would be well-advised not to do so, else they may find\nthemselves legally liable to uphold these terms, perhaps ultimately being\nrequired to release their works under the terms of a license which is\nundesirable for their goals.</p>\n<p>Essentially, the argument comes down to whether or not the model constitutes a\nderivative work of its inputs. Microsoft argues that it does not. However, these\nlicenses are not specific regarding the means of derivation; the classic\napproach of copying and pasting from one project to another need not be the only\nmeans for these terms to apply. The model exists as the result of applying an\nalgorithm to these inputs, and thus the model itself is a derivative work of its\ninputs. The model, then used to create new programs, forwards its obligations to\nthose works.</p>\n<p>All of this assumes the best interpretation of Microsoft&rsquo;s argument, with a\nheavy reliance on the fact that the model becomes a general purpose programmer,\nhaving meaningfully learned from its inputs and applying this knowledge to\nproduce original work. Should a human programmer take the same approach,\nstudying free software and applying those lessons, but not the code itself, to\noriginal projects, I would agree that their applied knowledge is not creating\nderivative works. However, that is not how machine learning works. Machine\nlearning is essentially a glorified pattern recognition and reproduction engine,\nand does not represent a genuine generalization of the learning process. It is\nperhaps capable of a limited amount of originality, but is also capable of\ndegrading to the simple case of copy and paste. Here is an example of Copilot\nreproducing, verbatim, a function which is governed by the GPL, and would thus\nbe governed by its terms:</p>\n<p><video controls=\"controls\" src=\"https://mirror.drewdevault.com/copilot-squareroot.mp4\"></video></p>\n<div class=\"text-center\">\n  <small>\n    Source: <a href=\"https://twitter.com/mitsuhiko/status/1410886329924194309\">\n    Armin Ronacher</a> via Twitter\n  </small>\n</div>\n<p>The license reproduced by Copilot is not correct, neither in form nor function.\nThis code was not written by V. Petkov and the GPL imposes much stronger\nobligations than those suggested by the comment. This small example was\ndeliberately provoked with a suggestive prompt (this famous function is known as\nthe &ldquo;<a href=\"https://en.wikipedia.org/wiki/Fast_inverse_square_root\">fast inverse square root</a>&quot;) and the &ldquo;float Q_&rdquo;, but it&rsquo;s not a stretch to\nassume someone can accidentally do something similar with any particularly\nunlucky English-language description of their goal.</p>\n<p>Of course, the use of a suggestive prompt to convince Copilot to print GPL\nlicensed code suggests another use: deliberately laundering FOSS source code. If\nMicrosoft&rsquo;s argument holds, then indeed the only thing which is necessary to\nlegally circumvent a free software license is to teach a machine learning\nalgorithm to regurgitate a function you want to use.</p>\n<p>This is a problem. I have two suggestions to offer to two audiences: one for\nGitHub, and another for free software developers who are worried about Copilot.</p>\n<p>To GitHub: this is your Oracle v Google moment. You&rsquo;ve invested in building a\nplatform on top of which the open source revolution was built, and leveraging\nthis platform for this move is a deep betrayal of the community&rsquo;s trust. The law\napplies to you, and banking on the fact that the decentralized open source\ncommunity will not be able to mount an effective legal challenge to your $7.5B\nMicrosoft war chest does not change this. The open source community is\nastonished, and the astonishment is slowly but surely boiling over into rage as\nour concerns fall on deaf ears and you push forward with the Copilot release. I\nexpect that if the situation does not change, you will find a group motivated\nenough to challenge this. The legitimacy of the free software ecosystem may rest\non this problem, and there are many companies who are financially incentivized\nto see to it that this legitimacy stands. I am certainly prepared to join a\nclass action lawsuit as a maintainer, or alongside other companies with\ninterests in free software making use of our financial resources to facilitate a\nlawsuit.</p>\n<p>The tool can be improved, probably still in time to avoid the most harmful\neffects (harmful to your business, that is) of Copilot. I offer the following\nspecific suggestions:</p>\n<ol>\n<li>Allow GitHub users and repositories to opt-out of being incorporated into the\nmodel. Better, allow them to opt-in. Do not tie this flag into unrelated\nprojects like Software Heritage and the Internet Archive.</li>\n<li>Track the software licenses which are incorporated into the model and inform\nusers of their obligations with respect to those licenses.</li>\n<li>Remove copyleft code from the model entirely, unless you want to make the\nmodel and its support code free software as well.</li>\n<li>Consider compensating the copyright owners of free software projects\nincorporated into the model with a margin from the Copilot usage fees, in\nexchange for a license permitting this use.</li>\n</ol>\n<p>Your current model probably needs to be thrown out. The GPL code incorporated\ninto it entitles anyone who uses it to receive a GPL&rsquo;d copy of the model for\ntheir own use. It entitles these people to commercial use, to build a competing\nproduct with it. But, it presumably also includes works under incompatible\nlicenses, such as the CDDL, which is&hellip; problematic. The whole thing is a legal\nmess.</p>\n<p>I cannot speak for the rest of the community that have been hurt by this\nproject, but for my part, I would be okay with not pursuing the answers to any\nof these questions with you in court if you agreed to resolve these problems\nnow.</p>\n<p>And, my advice to free software maintainers who are pissed that their licenses\nare being ignored. First, don&rsquo;t use GitHub and your code will not make it into\nthe model (for now). <a href=\"https://drewdevault.com/2022/03/29/free-software-free-infrastructure.html\">I&rsquo;ve written before</a> about why it&rsquo;s generally important\nfor free software projects to use free software infrastructure, and this only\nre-enforces that fact. Furthermore, the old &ldquo;vote with your wallet&rdquo; approach is\na good way to show your disfavor. That said, if it occurs to you that you\n<em>don&rsquo;t</em> actually pay for GitHub, then you may want to take a moment to consider\nif the incentives created by that relationship explain this development and may\nlead to more unfavorable outcomes for you in the future.</p>\n<p>You may also be tempted to solve this problem by changing your software licenses\nto prohibit this behavior. I&rsquo;ll say upfront that according to Microsoft&rsquo;s\ninterpretation of the situation (invoking fair use), it doesn&rsquo;t matter to them\nwhich license you use: they&rsquo;ll use your code regardless. In fact, <a href=\"https://twitter.com/ChrisGr93091552/status/1539731632931803137\">some\nproprietary code</a> was found to have been incorporated into the model. However, I\nstill support your efforts to address this in your software licenses, as it\nprovides an even stronger legal foundation upon which we can reject Copilot.</p>\n<p>I will caution you that the way you approach that clause of your license is\nimportant. Whenever writing or changing a free and open source software license,\nyou should consider whether or not it will still qualify as free or open source\nafter your changes. To be specific, a clause which outright forbids the use of\nyour code for training a machine learning model will make your software\n<em>non-free</em>, and I do not recommend this approach. Instead, I would update your\nlicenses to clarify that incorporating the code into a machine learning model is\nconsidered a form of derived work, and that your license terms apply to the\nmodel and any works produced with that model.</p>\n<p>To summarize, I think that GitHub Copilot is a bad idea as designed. It\nrepresents a flagrant disregard of FOSS licensing in of itself, and it enables\nsimilar disregard — deliberate or otherwise — among its users. I\nhope they will heed my suggestions, and I hope that my words to the free\nsoftware community offer some concrete ways to move forward with this problem.</p>\n<section class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn:1\">\n<p>Shout-out to Mozilla Common Voice, one of the few exceptions to this rule,\nwhich is an excellent project that has produced a high-quality, freely\navailable dataset of voice samples, and used it to develop free models and\nsoftware for text-to-speech and speech recognition. <a class=\"footnote-backref\" href=\"https://drewdevault.com/blog/index.xml#fnref:1\">&#x21a9;&#xfe0e;</a></p>\n</li>\n<li id=\"fn:2\">\n<p>Typically exploitative labor from low-development countries which the tech\nindustry often pretends isn&rsquo;t a hair&rsquo;s breadth away from slavery. <a class=\"footnote-backref\" href=\"https://drewdevault.com/blog/index.xml#fnref:2\">&#x21a9;&#xfe0e;</a></p>\n</li>\n</ol>\n</section>",
      "summary_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://drewdevault.com/blog/index.xml",
        "value": "<p><em>Disclaimer: I am the founder of a company which competes with GitHub. I am also\na long-time advocate for and developer of free and open source software, with a\nbroad understanding of free and open source software licensing and philosophy. I\nwill not name my company in this post to reduce the scope of my conflict of\ninterest.</em></p>\n<p>We have seen an explosion in machine learning in the past decade, alongside an\nexplosion in the popularity of free software. At the same time as FOSS has come\nto dominate software and found its place in almost all new software products,\nmachine learning has increased dramatically in sophistication, facilitating more\nnatural interactions between humans and computers. However, despite their\nparallel rise in computing, these two domains remain philosophically distant.</p>\n<p>Though some audaciously-named companies might suggest otherwise, the machine\nlearning space has enjoyed almost none of the freedoms forwarded by the free and\nopen source software movement. Much of the actual code related to machine\nlearning is publicly available, and there are many public access research\npapers available for anyone to read. However, the key to machine learning is\naccess to a high-quality dataset and heaps of computing power to process that\ndata, and these two resources are still kept under lock and key by almost all\nparticipants in the space.<sup id=\"fnref:1\"><a class=\"footnote-ref\" href=\"https://drewdevault.com/blog/index.xml#fn:1\">1</a></sup></p>\n<p>The essential barrier to entry for machine learning projects is overcoming these\ntwo problems, which are often very costly to secure. A high-quality, well tagged\ndata set generally requires thousands of hours of labor to produce,<sup id=\"fnref:2\"><a class=\"footnote-ref\" href=\"https://drewdevault.com/blog/index.xml#fn:2\">2</a></sup> a task\nwhich can potentially cost millions of dollars. Any approach which lowers this\nfigure is thus very desirable, even if the cost is making ethical compromises.\nWith Amazon, it takes the form of gig economy exploitation. With GitHub, it\ntakes the form of disregarding the terms of free software licenses. In the\nprocess, they built a tool which facilitates the large-scale laundering of free\nsoftware into non-free software by their customers, who GitHub offers plausible\ndeniability through an inscrutable algorithm.</p>\n<p>Free software is not an unqualified gift. There are terms for its use and\nre-use. Even so-called &ldquo;liberal&rdquo; software licenses impose requirements on\nre-use, such as attribution. To quote the MIT license:</p>\n<blockquote>\n<p>Permission is hereby granted [&hellip;] subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.</p>\n</blockquote>\n<p>Or the equally &ldquo;liberal&rdquo; BSD license:</p>\n<blockquote>\n<p>Redistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:</p>\n<p>Redistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.</p>\n</blockquote>\n<p>On the other end of the spectrum, copyleft licenses such as GNU General Public\nLicense or Mozilla Public License go further, demanding not only attribution for\nderivative works, but that such derived works are <em>also released</em> with the same\nlicense. Quoting GPL:</p>\n<blockquote>\n<p>You may convey a work based on the Program, or the modifications to produce it\nfrom the Program, in the form of source code under the terms of section 4,\nprovided that you also meet all of these conditions:</p>\n<p>[&hellip;]</p>\n<p>You must license the entire work, as a whole, under this License to anyone who\ncomes into possession of a copy.</p>\n</blockquote>\n<p>And MPL:</p>\n<blockquote>\n<p>All distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under the\nterms of this License. You must inform recipients that the Source Code Form of\nthe Covered Software is governed by the terms of this License, and how they\ncan obtain a copy of this License. You may not attempt to alter or restrict\nthe recipients' rights in the Source Code Form.</p>\n</blockquote>\n<p>Free software licenses impose obligations on the user through terms governing\nattribution, sublicensing, distribution, patents, trademarks, and relationships\nwith laws like the Digital Millennium Copyright Act. The free software community\nis no stranger to the difficulties in enforcing compliance with these\nobligations, which some groups view as too onerous. But as onerous as one may\nview these obligations to be, one is nevertheless required to comply with them.\nIf you believe that the force of copyright should protect your proprietary\nsoftware, then you must agree that it equally protects open source works,\ndespite the inconvenience or cost associated with this truth.</p>\n<p>GitHub&rsquo;s Copilot is trained on software governed by these terms, and it fails to\nuphold them, and enables customers to accidentally fail to uphold these terms\nthemselves. Some argue about the risks of a &ldquo;copyleft surprise&rdquo;, wherein someone\nincorporates a GPL licensed work into their product and is surprised to find\nthat they are obligated to release their product under the terms of the GPL as\nwell. Copilot institutionalizes this risk and any user who wishes to use it to\ndevelop non-free software would be well-advised not to do so, else they may find\nthemselves legally liable to uphold these terms, perhaps ultimately being\nrequired to release their works under the terms of a license which is\nundesirable for their goals.</p>\n<p>Essentially, the argument comes down to whether or not the model constitutes a\nderivative work of its inputs. Microsoft argues that it does not. However, these\nlicenses are not specific regarding the means of derivation; the classic\napproach of copying and pasting from one project to another need not be the only\nmeans for these terms to apply. The model exists as the result of applying an\nalgorithm to these inputs, and thus the model itself is a derivative work of its\ninputs. The model, then used to create new programs, forwards its obligations to\nthose works.</p>\n<p>All of this assumes the best interpretation of Microsoft&rsquo;s argument, with a\nheavy reliance on the fact that the model becomes a general purpose programmer,\nhaving meaningfully learned from its inputs and applying this knowledge to\nproduce original work. Should a human programmer take the same approach,\nstudying free software and applying those lessons, but not the code itself, to\noriginal projects, I would agree that their applied knowledge is not creating\nderivative works. However, that is not how machine learning works. Machine\nlearning is essentially a glorified pattern recognition and reproduction engine,\nand does not represent a genuine generalization of the learning process. It is\nperhaps capable of a limited amount of originality, but is also capable of\ndegrading to the simple case of copy and paste. Here is an example of Copilot\nreproducing, verbatim, a function which is governed by the GPL, and would thus\nbe governed by its terms:</p>\n<p><video controls=\"controls\" src=\"https://mirror.drewdevault.com/copilot-squareroot.mp4\"></video></p>\n<div class=\"text-center\">\n  <small>\n    Source: <a href=\"https://twitter.com/mitsuhiko/status/1410886329924194309\">\n    Armin Ronacher</a> via Twitter\n  </small>\n</div>\n<p>The license reproduced by Copilot is not correct, neither in form nor function.\nThis code was not written by V. Petkov and the GPL imposes much stronger\nobligations than those suggested by the comment. This small example was\ndeliberately provoked with a suggestive prompt (this famous function is known as\nthe &ldquo;<a href=\"https://en.wikipedia.org/wiki/Fast_inverse_square_root\">fast inverse square root</a>&quot;) and the &ldquo;float Q_&rdquo;, but it&rsquo;s not a stretch to\nassume someone can accidentally do something similar with any particularly\nunlucky English-language description of their goal.</p>\n<p>Of course, the use of a suggestive prompt to convince Copilot to print GPL\nlicensed code suggests another use: deliberately laundering FOSS source code. If\nMicrosoft&rsquo;s argument holds, then indeed the only thing which is necessary to\nlegally circumvent a free software license is to teach a machine learning\nalgorithm to regurgitate a function you want to use.</p>\n<p>This is a problem. I have two suggestions to offer to two audiences: one for\nGitHub, and another for free software developers who are worried about Copilot.</p>\n<p>To GitHub: this is your Oracle v Google moment. You&rsquo;ve invested in building a\nplatform on top of which the open source revolution was built, and leveraging\nthis platform for this move is a deep betrayal of the community&rsquo;s trust. The law\napplies to you, and banking on the fact that the decentralized open source\ncommunity will not be able to mount an effective legal challenge to your $7.5B\nMicrosoft war chest does not change this. The open source community is\nastonished, and the astonishment is slowly but surely boiling over into rage as\nour concerns fall on deaf ears and you push forward with the Copilot release. I\nexpect that if the situation does not change, you will find a group motivated\nenough to challenge this. The legitimacy of the free software ecosystem may rest\non this problem, and there are many companies who are financially incentivized\nto see to it that this legitimacy stands. I am certainly prepared to join a\nclass action lawsuit as a maintainer, or alongside other companies with\ninterests in free software making use of our financial resources to facilitate a\nlawsuit.</p>\n<p>The tool can be improved, probably still in time to avoid the most harmful\neffects (harmful to your business, that is) of Copilot. I offer the following\nspecific suggestions:</p>\n<ol>\n<li>Allow GitHub users and repositories to opt-out of being incorporated into the\nmodel. Better, allow them to opt-in. Do not tie this flag into unrelated\nprojects like Software Heritage and the Internet Archive.</li>\n<li>Track the software licenses which are incorporated into the model and inform\nusers of their obligations with respect to those licenses.</li>\n<li>Remove copyleft code from the model entirely, unless you want to make the\nmodel and its support code free software as well.</li>\n<li>Consider compensating the copyright owners of free software projects\nincorporated into the model with a margin from the Copilot usage fees, in\nexchange for a license permitting this use.</li>\n</ol>\n<p>Your current model probably needs to be thrown out. The GPL code incorporated\ninto it entitles anyone who uses it to receive a GPL&rsquo;d copy of the model for\ntheir own use. It entitles these people to commercial use, to build a competing\nproduct with it. But, it presumably also includes works under incompatible\nlicenses, such as the CDDL, which is&hellip; problematic. The whole thing is a legal\nmess.</p>\n<p>I cannot speak for the rest of the community that have been hurt by this\nproject, but for my part, I would be okay with not pursuing the answers to any\nof these questions with you in court if you agreed to resolve these problems\nnow.</p>\n<p>And, my advice to free software maintainers who are pissed that their licenses\nare being ignored. First, don&rsquo;t use GitHub and your code will not make it into\nthe model (for now). <a href=\"https://drewdevault.com/2022/03/29/free-software-free-infrastructure.html\">I&rsquo;ve written before</a> about why it&rsquo;s generally important\nfor free software projects to use free software infrastructure, and this only\nre-enforces that fact. Furthermore, the old &ldquo;vote with your wallet&rdquo; approach is\na good way to show your disfavor. That said, if it occurs to you that you\n<em>don&rsquo;t</em> actually pay for GitHub, then you may want to take a moment to consider\nif the incentives created by that relationship explain this development and may\nlead to more unfavorable outcomes for you in the future.</p>\n<p>You may also be tempted to solve this problem by changing your software licenses\nto prohibit this behavior. I&rsquo;ll say upfront that according to Microsoft&rsquo;s\ninterpretation of the situation (invoking fair use), it doesn&rsquo;t matter to them\nwhich license you use: they&rsquo;ll use your code regardless. In fact, <a href=\"https://twitter.com/ChrisGr93091552/status/1539731632931803137\">some\nproprietary code</a> was found to have been incorporated into the model. However, I\nstill support your efforts to address this in your software licenses, as it\nprovides an even stronger legal foundation upon which we can reject Copilot.</p>\n<p>I will caution you that the way you approach that clause of your license is\nimportant. Whenever writing or changing a free and open source software license,\nyou should consider whether or not it will still qualify as free or open source\nafter your changes. To be specific, a clause which outright forbids the use of\nyour code for training a machine learning model will make your software\n<em>non-free</em>, and I do not recommend this approach. Instead, I would update your\nlicenses to clarify that incorporating the code into a machine learning model is\nconsidered a form of derived work, and that your license terms apply to the\nmodel and any works produced with that model.</p>\n<p>To summarize, I think that GitHub Copilot is a bad idea as designed. It\nrepresents a flagrant disregard of FOSS licensing in of itself, and it enables\nsimilar disregard — deliberate or otherwise — among its users. I\nhope they will heed my suggestions, and I hope that my words to the free\nsoftware community offer some concrete ways to move forward with this problem.</p>\n<section class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn:1\">\n<p>Shout-out to Mozilla Common Voice, one of the few exceptions to this rule,\nwhich is an excellent project that has produced a high-quality, freely\navailable dataset of voice samples, and used it to develop free models and\nsoftware for text-to-speech and speech recognition. <a class=\"footnote-backref\" href=\"https://drewdevault.com/blog/index.xml#fnref:1\">&#x21a9;&#xfe0e;</a></p>\n</li>\n<li id=\"fn:2\">\n<p>Typically exploitative labor from low-development countries which the tech\nindustry often pretends isn&rsquo;t a hair&rsquo;s breadth away from slavery. <a class=\"footnote-backref\" href=\"https://drewdevault.com/blog/index.xml#fnref:2\">&#x21a9;&#xfe0e;</a></p>\n</li>\n</ol>\n</section>"
      }
    }
  },
  {
    "blog": {
      "title": "unixsheikh.com",
      "url": "http://unixsheikh.com/",
      "feed": "https://unixsheikh.com/feed.rss",
      "description": "Personal blog of old school Unix sysadmin. Pretty opinionated and\nanti-establishment. Many good articles on OpenBSD,\nnetworking/firewalling, ZFS vs other storage solutions, etc.",
      "section": "Linux"
    },
    "entry": {
      "published": "Mon, 11 Apr 2022 00:00:00 GMT",
      "published_parsed": [
        2022,
        4,
        11,
        0,
        0,
        0,
        0,
        101,
        0
      ],
      "title": "The flaws of distro hopping and asking other people about their OS of choice",
      "title_detail": {
        "type": "text/plain",
        "language": null,
        "base": "https://unixsheikh.com/feed.rss",
        "value": "The flaws of distro hopping and asking other people about their OS of choice"
      },
      "links": [
        {
          "rel": "alternate",
          "type": "text/html",
          "href": "https://unixsheikh.com/articles/the-flaws-of-distro-hopping-and-asking-other-people-about-their-os-of-choice.html"
        }
      ],
      "link": "https://unixsheikh.com/articles/the-flaws-of-distro-hopping-and-asking-other-people-about-their-os-of-choice.html",
      "id": "3cb208d5758be2eca85ce7f336082175a48f849f",
      "guidislink": false,
      "summary": "Distro hopping is a term that refers to the activity of computer users constantly installing and trying out different Linux distributions and/or BSD variants, either on bare metal or in a virtual environment, having a real difficult time choosing what to use. Some people believe that distro hopping is a result of boredom, or because of a lack of satisfaction with current choice, or that it's simply a matter of trying out multiple options, but that is not the case. Rather, it's a kind of psychological problem that arise because of a wrong approach being used in the process of determination.",
      "summary_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://unixsheikh.com/feed.rss",
        "value": "Distro hopping is a term that refers to the activity of computer users constantly installing and trying out different Linux distributions and/or BSD variants, either on bare metal or in a virtual environment, having a real difficult time choosing what to use. Some people believe that distro hopping is a result of boredom, or because of a lack of satisfaction with current choice, or that it's simply a matter of trying out multiple options, but that is not the case. Rather, it's a kind of psychological problem that arise because of a wrong approach being used in the process of determination."
      }
    }
  },
  {
    "blog": {
      "title": "Kushal Das' Blog",
      "url": "https://kushaldas.in/",
      "feed": "https://kushaldas.in/rss.xml",
      "description": "Tech blog from a Red Hat employee, Python contributor and Fedora developer.\nGood articles on India FOSS scene, managing a LUG, privacy and security.",
      "section": "Linux"
    },
    "entry": {
      "title": "Tor 0.4.7.8 is ready",
      "title_detail": {
        "type": "text/plain",
        "language": null,
        "base": "https://kushaldas.in/rss.xml",
        "value": "Tor 0.4.7.8 is ready"
      },
      "links": [
        {
          "rel": "alternate",
          "type": "text/html",
          "href": "https://kushaldas.in/posts/tor-0-4-7-8-is-ready.html"
        }
      ],
      "link": "https://kushaldas.in/posts/tor-0-4-7-8-is-ready.html",
      "summary": "<!--\n.. title: Tor 0.4.7.8 is ready\n.. slug: tor-0-4-7-8-is-ready\n.. date: 2022-06-18T09:16:56+02:00\n.. tags: Tor, Network, Security, Python, Fedora, CentOS, Almalinux, RPM\n.. link:\n.. description:\n.. type: text\n-->\n<p><img alt=\"\" src=\"https://kushaldas.in/images/tor_logo.png\" /></p>\n<p>Last night I built and pushed the Tor RPM(s) for 0.4.7.8. This is a security update, so please\nmake sure that you upgrade your relays and bridges.</p>\n<p>You can know more about the Tor's RPM respository at https://support.torproject.org/rpm/</p>\n<p>If you have any queries, feel free to find us over #tor channel on OFTC.</p>",
      "summary_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://kushaldas.in/rss.xml",
        "value": "<!--\n.. title: Tor 0.4.7.8 is ready\n.. slug: tor-0-4-7-8-is-ready\n.. date: 2022-06-18T09:16:56+02:00\n.. tags: Tor, Network, Security, Python, Fedora, CentOS, Almalinux, RPM\n.. link:\n.. description:\n.. type: text\n-->\n<p><img alt=\"\" src=\"https://kushaldas.in/images/tor_logo.png\" /></p>\n<p>Last night I built and pushed the Tor RPM(s) for 0.4.7.8. This is a security update, so please\nmake sure that you upgrade your relays and bridges.</p>\n<p>You can know more about the Tor's RPM respository at https://support.torproject.org/rpm/</p>\n<p>If you have any queries, feel free to find us over #tor channel on OFTC.</p>"
      },
      "id": "https://kushaldas.in/posts/tor-0-4-7-8-is-ready.html",
      "guidislink": false,
      "published": "Sat, 18 Jun 2022 09:16:56 +0200",
      "published_parsed": [
        2022,
        6,
        18,
        7,
        16,
        56,
        5,
        169,
        0
      ]
    }
  },
  {
    "blog": {
      "title": "Xe Iaso (Christine Dodrill)",
      "url": "https://xeiaso.net/blog",
      "feed": "https://xeiaso.net/blog.rss",
      "description": "NixOS and k8s in a homelab. Some deployment walkthroughs, some high-level\noverviews of tech concepts - all in a monospace font with anime characters\nin sidebars.",
      "section": "Linux"
    },
    "entry": {
      "id": "https://xeiaso.net/blog/doing-a-writing",
      "guidislink": true,
      "link": "https://xeiaso.net/blog/doing-a-writing",
      "title": "Writing Coherently At Scale",
      "title_detail": {
        "type": "text/plain",
        "language": null,
        "base": "https://xeiaso.net/blog.rss",
        "value": "Writing Coherently At Scale"
      },
      "links": [
        {
          "rel": "alternate",
          "type": "text/html",
          "href": "https://xeiaso.net/blog/doing-a-writing"
        }
      ],
      "summary": "<p>As someone who does a lot of writing, I have been asked how to write about\nthings. I have been asked about it enough that I am documenting this here so you\ncan all understand my process. This is not a prescriptive system that you must\ndo in order to make Quality Content™️, this is what I do.</p>\n<p>\n<div class=\"conversation\">\n    <div class=\"conversation-picture conversation-smol\">\n        \n            <source type=\"image/avif\" />\n            <source type=\"image/webp\" />\n            <img alt=\"Cadey is coffee\" src=\"https://cdn.xeiaso.net/file/christine-static/stickers/cadey/coffee.png\" />\n        \n    </div>\n    <div class=\"conversation-chat\">&lt;<b>Cadey</b>&gt; I honestly have no idea if this is a\n&quot;correct&quot; way of doing things, but it seems to work well enough. Especially so\nif you are reading this.</div></div></p>\n<p><figure class=\"hero\" style=\"margin: 0;\"><source type=\"image/avif\" /><source type=\"image/webp\" /><img alt=\"hero image great-wave-cyberpunk\" src=\"https://cdn.xeiaso.net/file/christine-static/hero/great-wave-cyberpunk-smol.png\" style=\"padding: 0;\" /><figcaption>Image generated by MidJourney -- the great wave off of kanagawa, cyberpunk, hanzi inscription</figcaption></figure></p>\n<h2>The Planning Phase</h2>\n<p>To start out the process of writing about something, I usually like to start\nwith the end goal in mind. If I am writing about an event or technology thing,\nI'll start out with a goal that looks something like this:</p>\n<blockquote>\n<p>Explain a split DNS setup and its advantages and weaknesses so that people can\nmake more informed decisions about their technical setups.</p>\n</blockquote>\n<p>It doesn't have to be very complicated or intricate. Most of the complexity\ncomes up naturally during the process of writing the intermediate steps. Think\nabout the end goal or what you want people to gain from reading the article.</p>\n<p>I've also found it helps to think about the target audience and assumed skills\nof the reader. I'll usually list out the kind of person that would benefit from\nthis the most and how it will help them. Here's an example:</p>\n<blockquote>\n<p>The reader is assumed to have some context about what DNS is and wants to help\nmake their production environment more secure, but isn't totally clear on how\nit helps and what tradeoffs are made.</p>\n</blockquote>\n<p>State what the reader is to you and how the post benefits them. Underthink it.\nIt's tempting to overthink this, but really don't. You can overthink the\nexplanations later.</p>\n<h3>The Outline</h3>\n<p>Once I have an end goal and the target audience in mind, then I make an outline\nof what I want the post to contain. This outline will have top level items for\ngeneric parts of the article or major concepts/steps and then I will go in and\nadd more detail inside each top level item. Here is an example set of top level\nitems for that split DNS post:</p>\n<pre style=\"background-color: #3b3228;\"><code class=\"language-markdown\">\n<span style=\"color: #cb6077;\">- Introduction\n</span><span style=\"color: #cb6077;\">- Define split DNS\n</span><span style=\"color: #cb6077;\">- How split DNS is different\n</span><span style=\"color: #cb6077;\">- Where you can use split DNS\n</span><span style=\"color: #cb6077;\">- Advantages of split DNS\n</span><span style=\"color: #cb6077;\">- Tradeoffs of split DNS\n</span><span style=\"color: #cb6077;\">- Conclusion\n</span>\n</code></pre>\n<p>Each step should build on the last and help you reach towards the end goal.</p>\n<p>After I write the top level outline, I start drilling down into more detail. As\nI drill down into more detail about a thing, the bullet points get nested\ndeeper, but when topics change then I go down a line. Here's an example:</p>\n<pre style=\"background-color: #3b3228;\"><code class=\"language-markdown\">\n<span style=\"color: #cb6077;\">- Introduction\n</span><span style=\"color: #cb6077;\">  - What is DNS?\n</span><span style=\"color: #cb6077;\">    - Domain Name Service\n</span><span style=\"color: #cb6077;\">    - Maps names to IP addresses\n</span><span style=\"color: #cb6077;\">      - Sometimes it does other things, but we're not worrying about that today\n</span><span style=\"color: #cb6077;\">    - Distributed system\n</span><span style=\"color: #cb6077;\">      - Intended to have the same data everywhere in the world\n</span><span style=\"color: #cb6077;\">      - It can take time for records to be usable from everywhere\n</span>\n</code></pre>\n<p>Then I will go in and start filling in the bullet tree with links and references\nto each major concept or other opinions that people have had about the topic.\nFor example:</p>\n<pre style=\"background-color: #3b3228;\"><code class=\"language-markdown\">\n<span style=\"color: #cb6077;\">- Introduction\n</span><span style=\"color: #cb6077;\">  - What is DNS?\n</span><span style=\"color: #cb6077;\">    - Domain Name Service\n</span><span style=\"color: #cb6077;\">      - https://datatracker.ietf.org/doc/html/rfc1035\n</span><span style=\"color: #cb6077;\">    - Maps names to IP addresses\n</span><span style=\"color: #cb6077;\">      - Sometimes it does other things, but we're not worrying about that today\n</span><span style=\"color: #cb6077;\">    - Distributed system\n</span><span style=\"color: #cb6077;\">      - Intended to have the same data everywhere in the world\n</span><span style=\"color: #cb6077;\">      - It can take time for records to be usable from everywhere\n</span><span style=\"color: #cb6077;\">        - https://jvns.ca/blog/2021/12/06/dns-doesn-t-propagate/\n</span>\n</code></pre>\n<p>These help me write about the topic and give me links to add to the post so that\npeople can understand more if they want to. You should spend most of your time\nwriting the outline. The rest is really just restating the outline in sentences.</p>\n<h2>Writing The Post</h2>\n<p>After each top level item is fleshed out enough, I usually pick somewhere to\nstart and add some space after a top level item. Then I just start writing. Each\ntop level item usually maps to a few paragraphs / a section of the post. I\nusually like to have each section have its own little goal / context to it so\nthat readers start out from not understanding something and end up understanding\nit better. Here's an example:</p>\n<blockquote>\n<p>If you have used a computer in the last few decades or so, you have probably\nused the Domain Name Service (DNS). DNS maps human-readable names (like\n<code>google.com</code>) to machine-readable IP addresses (like <code>182.48.247.12</code>). Because\nof this, DNS is one of the bedrock protocols of the modern internet and it\nusually is the cause of most failures in big companies.</p>\n<p>DNS is a globally distributed system without any authentication or way to\nensure that only authorized parties can query IP addresses for specific domain\nnames. As a consequence of this, this means that anyone can get the IP address\nof a given server if they have the DNS name for it. This also means that\nupdating a DNS record can take a nontrivial amount of time to be visible from\neverywhere in the world.</p>\n<p>Instead of using public DNS records for internal services, you can set up a\nsplit DNS configuration so that you run an internal DNS server that has your\ninternal service IP addresses obscured away from the public internet. This\nmeans that attackers can't get their hands on the IP addresses of your\nservices so that they are harder to attack. In this article, I'm going to\nspell out how this works, the advantages of this setup, the tradeoffs made in\nthe process and how you can implement something like this for yourself.</p>\n</blockquote>\n<p>In the process of writing, I will find gaps in the outline and just fix it by\nwriting more words than the outline suggested. This is okay, and somewhat\nnormal. Go with the flow.</p>\n<p>I expand each major thing into its component paragraphs and will break things up\ninto sections with markdown headers if there is a huge change in topics. Adding\nsection breaks can also help people stay engaged with the post. Giant walls of\ntext are hard to read and can make people lose focus easily.</p>\n<p>Another trick I use to avoid my posts being giant walls of text is what I call\n&quot;conversation snippets&quot;. These look like this:</p>\n<p>\n<div class=\"conversation\">\n    <div class=\"conversation-picture conversation-smol\">\n        \n            <source type=\"image/avif\" />\n            <source type=\"image/webp\" />\n            <img alt=\"Mara is hacker\" src=\"https://cdn.xeiaso.net/file/christine-static/stickers/mara/hacker.png\" />\n        \n    </div>\n    <div class=\"conversation-chat\">&lt;<b>Mara</b>&gt; These are words and I am saying\nthem!</div></div></p>\n<p>I use them for both creating <a href=\"https://en.wikipedia.org/wiki/Socratic_dialogue\">Socratic\ndialogue</a> and to add prose\nflair to my writing. I am more of a prose writer <a href=\"https://xeiaso.net/blog/the-oasis\">by\nnature</a>, and I find that this mix allows me\nto keep both technical and artistic writing up to snuff.</p>\n<p>\n<div class=\"conversation\">\n    <div class=\"conversation-picture conversation-smol\">\n        \n            <source type=\"image/avif\" />\n            <source type=\"image/webp\" />\n            <img alt=\"Cadey is enby\" src=\"https://cdn.xeiaso.net/file/christine-static/stickers/cadey/enby.png\" />\n        \n    </div>\n    <div class=\"conversation-chat\">&lt;<b>Cadey</b>&gt; Amusingly, I get asked if the characters\nin my blog are separate people all giving their input into things. They are\ncharacters, nothing more. If you ever got an impression otherwise, then I have\ndone my job as a writer <em>incredibly well</em>.</div></div></p>\n<p>Just flesh things out and progressively delete parts of the outline as you go.\nIt gets easier.</p>\n<h3>Writing The Conclusion</h3>\n<p>I have to admit, I really suck at writing conclusions. They are annoying for me\nto write because I usually don't know what to put there. Sometimes I won't even\nwrite a conclusion at all and just end the article there. This doesn't always\nwork though.</p>\n<p>A lot of the time when I am describing how to do things I will end the article\nwith a &quot;call to action&quot;. This is a few sentences that encourages the reader to\ntry the thing that I've been writing about out for themselves. If I was turning\nthat split DNS article from earlier into a full article, the conclusion\ncould look something like this:</p>\n<blockquote>\n<hr />\n<p>If you want an easy way to try out a split DNS configuration, install\n<a href=\"https://tailscale.com/\">Tailscale</a> on a couple virtual machines and enable\n<a href=\"https://tailscale.com/kb/1081/magicdns/\">MagicDNS</a>. This will set up a split\nDNS configuration with a domain that won't resolve globally, such as\n<code>hostname.example.com.beta.tailscale.net</code>, or just <code>hostname</code> for short.</p>\n<p>I use this in my own infrastructure constantly. It has gotten to the point\nwhere I regularly forget that Tailscale is involved at all, and become\nsurprised when I can't just access machines by name.</p>\n<p>A split DNS setup isn't a security feature (if anything, it's more of an\nobscurity feature), but you can use it to help administrate your systems by\nmaking your life easier. You can update records on your own schedule and you\ndon't have to worry about outside attackers getting the IP addresses of your\nservices.</p>\n</blockquote>\n<p>I don't like giving the conclusion a heading, so I'll usually use a <a href=\"https://www.coffeecup.com/help/articles/what-is-a-horizontal-rule/\">horizontal\nrule (<code>---</code> or <code>&lt;hr /&gt;</code>)</a> to\nbreak it off.</p>\n<hr />\n<p>This is how I write about things. Do you have a topic in mind that you have\nwanted to write about for a while? Try this system out! If you get something\nthat you like and want feedback on how to make it shine, email me at\n<code>iwroteanarticle at xeserv dot us</code> with either a link to it or the draft\nsomehow. I'll be sure to read it and reply back with both what I liked and some\nadvice on how to make it even better.</p>",
      "summary_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://xeiaso.net/blog.rss",
        "value": "<p>As someone who does a lot of writing, I have been asked how to write about\nthings. I have been asked about it enough that I am documenting this here so you\ncan all understand my process. This is not a prescriptive system that you must\ndo in order to make Quality Content™️, this is what I do.</p>\n<p>\n<div class=\"conversation\">\n    <div class=\"conversation-picture conversation-smol\">\n        \n            <source type=\"image/avif\" />\n            <source type=\"image/webp\" />\n            <img alt=\"Cadey is coffee\" src=\"https://cdn.xeiaso.net/file/christine-static/stickers/cadey/coffee.png\" />\n        \n    </div>\n    <div class=\"conversation-chat\">&lt;<b>Cadey</b>&gt; I honestly have no idea if this is a\n&quot;correct&quot; way of doing things, but it seems to work well enough. Especially so\nif you are reading this.</div></div></p>\n<p><figure class=\"hero\" style=\"margin: 0;\"><source type=\"image/avif\" /><source type=\"image/webp\" /><img alt=\"hero image great-wave-cyberpunk\" src=\"https://cdn.xeiaso.net/file/christine-static/hero/great-wave-cyberpunk-smol.png\" style=\"padding: 0;\" /><figcaption>Image generated by MidJourney -- the great wave off of kanagawa, cyberpunk, hanzi inscription</figcaption></figure></p>\n<h2>The Planning Phase</h2>\n<p>To start out the process of writing about something, I usually like to start\nwith the end goal in mind. If I am writing about an event or technology thing,\nI'll start out with a goal that looks something like this:</p>\n<blockquote>\n<p>Explain a split DNS setup and its advantages and weaknesses so that people can\nmake more informed decisions about their technical setups.</p>\n</blockquote>\n<p>It doesn't have to be very complicated or intricate. Most of the complexity\ncomes up naturally during the process of writing the intermediate steps. Think\nabout the end goal or what you want people to gain from reading the article.</p>\n<p>I've also found it helps to think about the target audience and assumed skills\nof the reader. I'll usually list out the kind of person that would benefit from\nthis the most and how it will help them. Here's an example:</p>\n<blockquote>\n<p>The reader is assumed to have some context about what DNS is and wants to help\nmake their production environment more secure, but isn't totally clear on how\nit helps and what tradeoffs are made.</p>\n</blockquote>\n<p>State what the reader is to you and how the post benefits them. Underthink it.\nIt's tempting to overthink this, but really don't. You can overthink the\nexplanations later.</p>\n<h3>The Outline</h3>\n<p>Once I have an end goal and the target audience in mind, then I make an outline\nof what I want the post to contain. This outline will have top level items for\ngeneric parts of the article or major concepts/steps and then I will go in and\nadd more detail inside each top level item. Here is an example set of top level\nitems for that split DNS post:</p>\n<pre style=\"background-color: #3b3228;\"><code class=\"language-markdown\">\n<span style=\"color: #cb6077;\">- Introduction\n</span><span style=\"color: #cb6077;\">- Define split DNS\n</span><span style=\"color: #cb6077;\">- How split DNS is different\n</span><span style=\"color: #cb6077;\">- Where you can use split DNS\n</span><span style=\"color: #cb6077;\">- Advantages of split DNS\n</span><span style=\"color: #cb6077;\">- Tradeoffs of split DNS\n</span><span style=\"color: #cb6077;\">- Conclusion\n</span>\n</code></pre>\n<p>Each step should build on the last and help you reach towards the end goal.</p>\n<p>After I write the top level outline, I start drilling down into more detail. As\nI drill down into more detail about a thing, the bullet points get nested\ndeeper, but when topics change then I go down a line. Here's an example:</p>\n<pre style=\"background-color: #3b3228;\"><code class=\"language-markdown\">\n<span style=\"color: #cb6077;\">- Introduction\n</span><span style=\"color: #cb6077;\">  - What is DNS?\n</span><span style=\"color: #cb6077;\">    - Domain Name Service\n</span><span style=\"color: #cb6077;\">    - Maps names to IP addresses\n</span><span style=\"color: #cb6077;\">      - Sometimes it does other things, but we're not worrying about that today\n</span><span style=\"color: #cb6077;\">    - Distributed system\n</span><span style=\"color: #cb6077;\">      - Intended to have the same data everywhere in the world\n</span><span style=\"color: #cb6077;\">      - It can take time for records to be usable from everywhere\n</span>\n</code></pre>\n<p>Then I will go in and start filling in the bullet tree with links and references\nto each major concept or other opinions that people have had about the topic.\nFor example:</p>\n<pre style=\"background-color: #3b3228;\"><code class=\"language-markdown\">\n<span style=\"color: #cb6077;\">- Introduction\n</span><span style=\"color: #cb6077;\">  - What is DNS?\n</span><span style=\"color: #cb6077;\">    - Domain Name Service\n</span><span style=\"color: #cb6077;\">      - https://datatracker.ietf.org/doc/html/rfc1035\n</span><span style=\"color: #cb6077;\">    - Maps names to IP addresses\n</span><span style=\"color: #cb6077;\">      - Sometimes it does other things, but we're not worrying about that today\n</span><span style=\"color: #cb6077;\">    - Distributed system\n</span><span style=\"color: #cb6077;\">      - Intended to have the same data everywhere in the world\n</span><span style=\"color: #cb6077;\">      - It can take time for records to be usable from everywhere\n</span><span style=\"color: #cb6077;\">        - https://jvns.ca/blog/2021/12/06/dns-doesn-t-propagate/\n</span>\n</code></pre>\n<p>These help me write about the topic and give me links to add to the post so that\npeople can understand more if they want to. You should spend most of your time\nwriting the outline. The rest is really just restating the outline in sentences.</p>\n<h2>Writing The Post</h2>\n<p>After each top level item is fleshed out enough, I usually pick somewhere to\nstart and add some space after a top level item. Then I just start writing. Each\ntop level item usually maps to a few paragraphs / a section of the post. I\nusually like to have each section have its own little goal / context to it so\nthat readers start out from not understanding something and end up understanding\nit better. Here's an example:</p>\n<blockquote>\n<p>If you have used a computer in the last few decades or so, you have probably\nused the Domain Name Service (DNS). DNS maps human-readable names (like\n<code>google.com</code>) to machine-readable IP addresses (like <code>182.48.247.12</code>). Because\nof this, DNS is one of the bedrock protocols of the modern internet and it\nusually is the cause of most failures in big companies.</p>\n<p>DNS is a globally distributed system without any authentication or way to\nensure that only authorized parties can query IP addresses for specific domain\nnames. As a consequence of this, this means that anyone can get the IP address\nof a given server if they have the DNS name for it. This also means that\nupdating a DNS record can take a nontrivial amount of time to be visible from\neverywhere in the world.</p>\n<p>Instead of using public DNS records for internal services, you can set up a\nsplit DNS configuration so that you run an internal DNS server that has your\ninternal service IP addresses obscured away from the public internet. This\nmeans that attackers can't get their hands on the IP addresses of your\nservices so that they are harder to attack. In this article, I'm going to\nspell out how this works, the advantages of this setup, the tradeoffs made in\nthe process and how you can implement something like this for yourself.</p>\n</blockquote>\n<p>In the process of writing, I will find gaps in the outline and just fix it by\nwriting more words than the outline suggested. This is okay, and somewhat\nnormal. Go with the flow.</p>\n<p>I expand each major thing into its component paragraphs and will break things up\ninto sections with markdown headers if there is a huge change in topics. Adding\nsection breaks can also help people stay engaged with the post. Giant walls of\ntext are hard to read and can make people lose focus easily.</p>\n<p>Another trick I use to avoid my posts being giant walls of text is what I call\n&quot;conversation snippets&quot;. These look like this:</p>\n<p>\n<div class=\"conversation\">\n    <div class=\"conversation-picture conversation-smol\">\n        \n            <source type=\"image/avif\" />\n            <source type=\"image/webp\" />\n            <img alt=\"Mara is hacker\" src=\"https://cdn.xeiaso.net/file/christine-static/stickers/mara/hacker.png\" />\n        \n    </div>\n    <div class=\"conversation-chat\">&lt;<b>Mara</b>&gt; These are words and I am saying\nthem!</div></div></p>\n<p>I use them for both creating <a href=\"https://en.wikipedia.org/wiki/Socratic_dialogue\">Socratic\ndialogue</a> and to add prose\nflair to my writing. I am more of a prose writer <a href=\"https://xeiaso.net/blog/the-oasis\">by\nnature</a>, and I find that this mix allows me\nto keep both technical and artistic writing up to snuff.</p>\n<p>\n<div class=\"conversation\">\n    <div class=\"conversation-picture conversation-smol\">\n        \n            <source type=\"image/avif\" />\n            <source type=\"image/webp\" />\n            <img alt=\"Cadey is enby\" src=\"https://cdn.xeiaso.net/file/christine-static/stickers/cadey/enby.png\" />\n        \n    </div>\n    <div class=\"conversation-chat\">&lt;<b>Cadey</b>&gt; Amusingly, I get asked if the characters\nin my blog are separate people all giving their input into things. They are\ncharacters, nothing more. If you ever got an impression otherwise, then I have\ndone my job as a writer <em>incredibly well</em>.</div></div></p>\n<p>Just flesh things out and progressively delete parts of the outline as you go.\nIt gets easier.</p>\n<h3>Writing The Conclusion</h3>\n<p>I have to admit, I really suck at writing conclusions. They are annoying for me\nto write because I usually don't know what to put there. Sometimes I won't even\nwrite a conclusion at all and just end the article there. This doesn't always\nwork though.</p>\n<p>A lot of the time when I am describing how to do things I will end the article\nwith a &quot;call to action&quot;. This is a few sentences that encourages the reader to\ntry the thing that I've been writing about out for themselves. If I was turning\nthat split DNS article from earlier into a full article, the conclusion\ncould look something like this:</p>\n<blockquote>\n<hr />\n<p>If you want an easy way to try out a split DNS configuration, install\n<a href=\"https://tailscale.com/\">Tailscale</a> on a couple virtual machines and enable\n<a href=\"https://tailscale.com/kb/1081/magicdns/\">MagicDNS</a>. This will set up a split\nDNS configuration with a domain that won't resolve globally, such as\n<code>hostname.example.com.beta.tailscale.net</code>, or just <code>hostname</code> for short.</p>\n<p>I use this in my own infrastructure constantly. It has gotten to the point\nwhere I regularly forget that Tailscale is involved at all, and become\nsurprised when I can't just access machines by name.</p>\n<p>A split DNS setup isn't a security feature (if anything, it's more of an\nobscurity feature), but you can use it to help administrate your systems by\nmaking your life easier. You can update records on your own schedule and you\ndon't have to worry about outside attackers getting the IP addresses of your\nservices.</p>\n</blockquote>\n<p>I don't like giving the conclusion a heading, so I'll usually use a <a href=\"https://www.coffeecup.com/help/articles/what-is-a-horizontal-rule/\">horizontal\nrule (<code>---</code> or <code>&lt;hr /&gt;</code>)</a> to\nbreak it off.</p>\n<hr />\n<p>This is how I write about things. Do you have a topic in mind that you have\nwanted to write about for a while? Try this system out! If you get something\nthat you like and want feedback on how to make it shine, email me at\n<code>iwroteanarticle at xeserv dot us</code> with either a link to it or the draft\nsomehow. I'll be sure to read it and reply back with both what I liked and some\nadvice on how to make it even better.</p>"
      },
      "published": "Wed, 29 Jun 2022 00:00:00 +0000",
      "published_parsed": [
        2022,
        6,
        29,
        0,
        0,
        0,
        2,
        180,
        0
      ]
    }
  },
  {
    "blog": {
      "title": "blog.kroy.io",
      "url": "https://blog.kroy.io/",
      "feed": "https://blog.kroy.io/feed/",
      "description": "Homelab enthusiast with a lot of informative writeups on hypervisors,\nautomation and routing. Lots of routing! BGP, VyOS, router benchmarks - the\nfun stuff!",
      "section": "Homelab"
    },
    "entry": {
      "title": "VyOS and Mikrotik – VLAN-a-rama",
      "title_detail": {
        "type": "text/plain",
        "language": null,
        "base": "https://blog.kroy.io/feed/",
        "value": "VyOS and Mikrotik – VLAN-a-rama"
      },
      "links": [
        {
          "rel": "alternate",
          "type": "text/html",
          "href": "https://blog.kroy.io/2021/06/29/vyos-and-mikrotik-vlan-a-rama/?utm_source=rss&utm_medium=rss&utm_campaign=vyos-and-mikrotik-vlan-a-rama"
        }
      ],
      "link": "https://blog.kroy.io/2021/06/29/vyos-and-mikrotik-vlan-a-rama/?utm_source=rss&utm_medium=rss&utm_campaign=vyos-and-mikrotik-vlan-a-rama",
      "authors": [
        {
          "name": "Kroy"
        }
      ],
      "author": "Kroy",
      "author_detail": {
        "name": "Kroy"
      },
      "published": "Tue, 29 Jun 2021 19:12:19 +0000",
      "published_parsed": [
        2021,
        6,
        29,
        19,
        12,
        19,
        1,
        180,
        0
      ],
      "tags": [
        {
          "term": "mikrotik",
          "scheme": null,
          "label": null
        },
        {
          "term": "Networking",
          "scheme": null,
          "label": null
        },
        {
          "term": "VyOS",
          "scheme": null,
          "label": null
        },
        {
          "term": "VLAN",
          "scheme": null,
          "label": null
        }
      ],
      "id": "https://blog.kroy.io/?p=1169",
      "guidislink": false,
      "summary": "For the novice networker, VLANs are easily one of the most misunderstood concepts. In this post, I&#8217;ll go over some basics and demonstrate how to make the jump from separate&#8230;",
      "summary_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://blog.kroy.io/feed/",
        "value": "For the novice networker, VLANs are easily one of the most misunderstood concepts. In this post, I&#8217;ll go over some basics and demonstrate how to make the jump from separate&#8230;"
      },
      "content": [
        {
          "type": "text/html",
          "language": null,
          "base": "https://blog.kroy.io/feed/",
          "value": "<p>For the novice networker, VLANs are easily one of the most misunderstood concepts.  In this post, I&#8217;ll go over some basics and demonstrate how to make the jump from separate interfaces and switches to VLANs. </p>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<h2>Introduction</h2>\n\n\n\n<p>Virtual LANs, or VLANs, are one of the most useful features in all of networking.  To put it simply, they allow a logical separation of broadcast domains.  In layperson&#8217;s terms, &#8220;I took a switch and put it in your switch!&#8221;.  </p>\n\n\n\n<p>I think it&#8217;s best to start with a traditional physical setup that would represent how most people start their networking adventures.</p>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<h2>Physical Setup</h2>\n\n\n\n<p>For this adventure, I&#8217;ll be using be using:</p>\n\n\n\n<ul><li>The <a href=\"https://blog.kroy.io/2020/01/17/the-baby-wyse-the-dell-3040/\" rel=\"noreferrer noopener\" target=\"_blank\">WYSE 3040</a> from a previous blog post.</li><li>An array of small Mikrotiks (<a href=\"https://amzn.to/35XStKu\" rel=\"noreferrer noopener\" target=\"_blank\">hex</a>, <a href=\"https://amzn.to/3AefB5h\">hap</a>, <a href=\"https://amzn.to/2UR3I5h\" rel=\"noreferrer noopener\" target=\"_blank\">hex lite</a>) since they are painfully easy to set up as both simple switches and managed switches supporting VLANs.</li><li>A few Virtual Machines to act as end devices, also from a<a href=\"https://blog.kroy.io/2021/06/23/vyos-from-scratch-routing-and-vps-edition/\"> prior blog post.</a></li></ul>\n\n\n\n<p>Let&#8217;s start with this simple network diagram.  </p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img alt=\"\" class=\"wp-image-1221\" height=\"902\" src=\"https://blog.kroy.io/wp-content/uploads/2021/06/vlanaram1-1.png\" width=\"651\" /><figcaption>physical layout</figcaption></figure></div>\n\n\n\n<p>and how does this setup look when it&#8217;s all wired up?</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img alt=\"\" class=\"wp-image-1232\" height=\"768\" src=\"https://blog.kroy.io/wp-content/uploads/2021/06/IMG_0491-1024x768.jpg\" width=\"1024\" /><figcaption>messy</figcaption></figure></div>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<h3>Networking Config</h3>\n\n\n\n<p>This is the basic config for all three of the switches.  I don&#8217;t want to get too bogged down with the Mikrotik config, but I should explain some of it.</p>\n\n\n\n<p>In the Linux world, and subsequently in Mikrotik-land, a switch would be called a &#8220;bridge&#8221;.  So in this case, I&#8217;ve created a bridge and added all the ports to it.  And then I&#8217;ve told the switches to pull an IP address from the bridge for management.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&#091;admin@MikroTik] &gt; /export \n# jun/28/2021 21:03:30 by RouterOS 6.48.3\n# software id = IMPN-EEMU\n#\n# model = RB750Gr3\n\n/interface bridge\nadd admin-mac=B8:69:F4:AB:2E:7A auto-mac=no comment=defconf name=bridgeLocal\n/interface bridge port\nadd bridge=bridgeLocal comment=defconf interface=ether1\nadd bridge=bridgeLocal comment=defconf interface=ether2\nadd bridge=bridgeLocal comment=defconf interface=ether3\nadd bridge=bridgeLocal comment=defconf interface=ether4\nadd bridge=bridgeLocal comment=defconf interface=ether5\n/ip dhcp-client\nadd comment=defconf disabled=no interface=bridgeLocal\n</code></pre>\n\n\n\n<p>This configuration essentially turns these Mikrotik devices into a dumb switch, with an IP address to manage them.  They are also plugged into my existing network:</p>\n\n\n\n<ul><li>HEX into my &#8220;WAN&#8221; network (random VLAN on my existing network that has internet access)</li><li>HAP into a VLAN connected to the &#8220;enduser1&#8221; VM </li><li>HEX LITE into a VLAN connected to the &#8220;enduser2&#8221; VM.</li></ul>\n\n\n\n<p> </p>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<h3>VyOS Config</h3>\n\n\n\n<p>The VyOS config here on the WYSE 3040 is very simple:</p>\n\n\n\n<ul><li>Onboard NIC is eth0, connected to WAN/HEX switch, pulling an IP from my existing infrastructure.</li><li>USB NIC1 is eth1, connected to HAP switch</li><li>USB NIC2 is eth2, connected to HEX switch</li><li>Some NAT, so my test clients can get on the Internet</li><li>Some DHCP, so my test clients can auto-configure themselves</li></ul>\n\n\n\n<pre class=\"wp-block-code\"><code>interfaces {\n    ethernet eth0 {\n        address dhcp\n        description WAN\n        hw-id 8c:ec:4b:6d:dc:d6\n    }\n    ethernet eth1 {\n        address 172.21.39.1/24\n        description HAPLAN\n        hw-id 8c:ae:4c:f5:e5:8f\n    }\n    ethernet eth2 {\n        address 192.168.39.1/24\n        description HEXLITELAN\n        hw-id 8c:ae:4c:f5:e5:94\n    }\n    loopback lo {\n    }\n}\nnat {\n    source {\n        rule 10 {\n            outbound-interface eth0\n            source {\n                address 172.21.39.0/24\n            }\n            translation {\n                address masquerade\n            }\n        }\n        rule 11 {\n            outbound-interface eth0\n            source {\n                address 192.168.39.0/24\n            }\n            translation {\n                address masquerade\n            }\n        }\n    }\n}\nservice {\n    dhcp-server {\n        shared-network-name HAPDHCP {\n            subnet 172.21.39.0/24 {\n                default-router 172.21.39.1\n                dns-server 10.53.53.53\n                range 0 {\n                    start 172.21.39.100\n                    stop 172.21.39.200\n                }\n            }\n        }\n        shared-network-name HEXLITEDHCP {\n            subnet 192.168.39.0/24 {\n                default-router 192.168.39.1\n                dns-server 10.53.53.53\n                range 0 {\n                    start 192.168.39.100\n                    stop 192.168.39.200\n                }\n            }\n        }\n    }\n    ssh {\n        port 22\n    }\n}</code></pre>\n\n\n\n<p>And once it&#8217;s all set up, the two &#8220;enduser&#8221; VMs both have appropriate IP addresses and Internet access as served out by the VyOS-3040:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-1216\" height=\"328\" src=\"https://blog.kroy.io/wp-content/uploads/2021/06/image-47-1024x328.png\" width=\"1024\" /><figcaption>VMs working</figcaption></figure>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<h2>VLANs</h2>\n\n\n\n<p>Of course we aren&#8217;t here to just make a simple multi-network setup.  We want some VLANs.  So let&#8217;s rewrite some things, and eliminate two of the switches. </p>\n\n\n\n<p>First off, let&#8217;s talk about the physical setup we had before.  Before, each of the different switches were connected to &#8220;raw&#8221; ports connecting to existing VLANs on my network:</p>\n\n\n\n<ul><li>HEX: VAN9.  This is an existing client network in my homelab.  You plug something in here, it gets a 10.9.1.0/24 address, and instantly has Internet access. This is what the &#8220;WAN&#8221; port of VyOS connects to.</li><li>HAP: VLAN41.  This was a new VLAN I created to connect between eth1 on VyOS and the &#8220;enduser1&#8221; VM.</li><li>HEX LITE: VLAN42. Similarly, a new VLAN I created to connect between eth2 on VyOS and the &#8220;enduser2&#8221; VM.</li></ul>\n\n\n\n<p>Physically, this is how the new setup will look:</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img alt=\"\" class=\"wp-image-1234\" height=\"1024\" src=\"https://blog.kroy.io/wp-content/uploads/2021/06/IMG_0494-768x1024.jpg\" width=\"768\" /><figcaption>getting cleaner</figcaption></figure></div>\n\n\n\n<p>In most networking circles, a &#8220;trunk&#8221; just means a port carrying multiple VLANs.  Since we removed two switches, the remaining switch, the HEX, will need to have its uplink port changed into a trunk:</p>\n\n\n\n<ul><li>Remove HAP and HEX LITE switches</li><li>On the HEX, change the port that was previously connected to a raw VLAN9 port on my existing network to a trunk.</li><li>Plug eth1 from VyOS into port 4 on HEX, change the VLAN of that port to 41</li><li>Plug eth2 from VyOS into port 3 on HEX, change the VLAN of the port to 42</li><li>Change the VLAN on port 5 on the HEX to 9.  This will change the PVID, or the raw VLAN that&#8217;s use when whatever is plugged in on the other end isn&#8217;t speaking VLANs.</li><li>Due to the prior step, the nothing on VyOS will change</li></ul>\n\n\n\n<p>The characteristics of our trunk ports will be simple:</p>\n\n\n\n<ul><li>VLAN1 == PVID/untagged.  This is the VLAN traffic will land on if the traffic has no VLAN tags</li><li>VLAN9 == Tagged. </li><li>VLAN41 == Tagged</li><li>VLAN42 == Tagged</li></ul>\n\n\n\n<p>I&#8217;ve highlighted the important changes on the remaining switch below:</p>\n\n\n\n<ol><li>Add an Switched Virtual Interface or SVI.  This is saying &#8220;Give this switch an interface on this VLAN&#8221;.  This is important because VLAN9 is no longer the default &#8220;untagged&#8221; for the uplink port (ether1)</li><li>Change the PVIDs/default VLANs of the appropriate ports on the bridge.  We are doing this to make the VyOS-3040 think nothing has changed in our physical setup.</li><li>Handle VLAN filtering.  This is going to control what VLANs are allowed on these ports. This is how you create a trunk port in Mikrotik <ol><li><code>ether1</code> is the Trunk to the rest of the network.  It is untagged on VLAN1 (which is a throwaway VLAN for security).  It is tagged on the other two VLANs we are using, 41 and 42.</li><li><code>bridgeLocal</code> is Mikrotik itself. It is untagged on VLAN1 for similar reasons as above.  It it tagged on VLAN9 as this is what allows our newly created <code>VLAN9_SVI</code> so we can create a management address for it.</li><li><code>ether3/4/5</code> are all untagged on the VLANs that match the PVIDs.</li></ol></li><li>Finally, we tell the Mikrotik to pull its address via DHCP on the newly created <code>VLAN9_SVI</code></li></ol>\n\n\n\n<pre class=\"wp-block-code\"><code># jun/29/2021 10:27:41 by RouterOS 6.48.3\n# software id = IMPN-EEMU\n#\n# model = RB750Gr3\n\n/interface bridge\nadd admin-mac=B8:69:F4:AB:2E:7A auto-mac=no comment=defconf name=bridgeLocal vlan-filtering=yes\n<strong>/interface vlan\nadd interface=bridgeLocal name=VLAN9_SVI vlan-id=9</strong>\n/interface bridge port\nadd bridge=bridgeLocal comment=defconf interface=ether1\nadd bridge=bridgeLocal comment=defconf interface=ether2\n<strong>add bridge=bridgeLocal comment=defconf interface=ether3 pvid=42\nadd bridge=bridgeLocal comment=defconf interface=ether4 pvid=41\nadd bridge=bridgeLocal comment=defconf interface=ether5 pvid=9</strong>\n/interface bridge vlan\n<strong>add bridge=bridgeLocal untagged=bridgeLocal,ether1 vlan-ids=1</strong>\n<strong>add bridge=bridgeLocal tagged=bridgeLocal,ether1 untagged=ether5 vlan-ids=9\nadd bridge=bridgeLocal tagged=ether1 untagged=ether4 vlan-ids=41\nadd bridge=bridgeLocal tagged=ether1 untagged=ether3 vlan-ids=42</strong>\n/ip dhcp-client\n<strong>add comment=defconf disabled=no interface=VLAN9_SVI</strong></code></pre>\n\n\n\n<p>As mentioned above, everything just works as before.  As far as the VyOS-3040 is concerned, it is still connected to three separate switches:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-1217\" height=\"327\" src=\"https://blog.kroy.io/wp-content/uploads/2021/06/image-48-1024x327.png\" width=\"1024\" /><figcaption>as before, working perfect</figcaption></figure>\n\n\n\n<h2>VLANs &#8211; Going Deeper</h2>\n\n\n\n<p>Of course, we haven&#8217;t even touched VLANs on VyOS yet, so let&#8217;s dig into that.  </p>\n\n\n\n<p>The basic goals will be:</p>\n\n\n\n<ul><li>Remove all the dongles</li><li>Move the cable that goes to VyOS-3040 from port 5 to port 2.</li><li>Trunk VLANs 41 and 42 into VyOS</li><li>Change the config in VyOS to use VLAN interfaces instead of physical interfaces.</li></ul>\n\n\n\n<p>Physically, this is starting to look super clean.  We only have two cables plugged into the switch, the trunk from the existing networking and the trunk to the VyOS-3040. </p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img alt=\"\" class=\"wp-image-1223\" height=\"1024\" src=\"https://blog.kroy.io/wp-content/uploads/2021/06/image-50-659x1024.png\" width=\"659\" /><figcaption>cleaner still</figcaption></figure></div>\n\n\n\n<p>I&#8217;ve highlighted the changes to the switch, but basically we are turning port 2 into another trunk, BUUUUT, a trunk with the PVID of 9:</p>\n\n\n\n<ul><li>Change the PVID of ether2 to 9.  This is to make it so VyOS-3040 still is &#8220;on&#8221; VLAN9 on its raw port</li><li>Add ether2 as untagged on VLAN9</li><li>Add ether2 as tagged on VLANs 41/42</li></ul>\n\n\n\n<pre class=\"wp-block-code\"><code># jun/29/2021 10:49:20 by RouterOS 6.48.3\n# software id = IMPN-EEMU\n#\n# model = RB750Gr3\n# serial number = 8AFF09A3F98D\n/interface bridge\nadd admin-mac=B8:69:F4:AB:2E:7A auto-mac=no comment=defconf name=bridgeLocal vlan-filtering=yes\n/interface vlan\nadd interface=bridgeLocal name=VLAN9_SVI vlan-id=9\n/interface bridge port\nadd bridge=bridgeLocal comment=defconf interface=ether1\n<strong>add bridge=bridgeLocal comment=defconf interface=ether2 pvid=9</strong>\nadd bridge=bridgeLocal comment=defconf interface=ether3 pvid=42\nadd bridge=bridgeLocal comment=defconf interface=ether4 pvid=41\nadd bridge=bridgeLocal comment=defconf interface=ether5 pvid=9\n/ip neighbor discovery-settings\nset discover-interface-list=!dynamic\n/interface bridge vlan\nadd bridge=bridgeLocal untagged=bridgeLocal,ether1 vlan-ids=1\n<strong>add bridge=bridgeLocal tagged=bridgeLocal,ether1 untagged=ether5,ether2 vlan-ids=9</strong>\n<strong>add bridge=bridgeLocal tagged=ether1,ether2 untagged=ether4 vlan-ids=41\nadd bridge=bridgeLocal tagged=ether1,ether2 untagged=ether3 vlan-ids=42</strong>\n/ip dhcp-client\nadd comment=defconf disabled=no interface=VLAN9_SVI</code></pre>\n\n\n\n<p>And in VyOS, the only change is removing eth1/eth2, and moving the config under the appropriate vif:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>interfaces {\n    ethernet eth0 {\n        address dhcp\n        description WAN\n        hw-id 8c:ec:4b:6d:dc:d6\n        <strong>vif 41 {\n            address 172.21.39.1/24\n            description HAPLAN\n        }\n        vif 42 {\n            address 192.168.39.1/24\n            description HEXLITELAN\n        }</strong>\n    }\n    loopback lo {\n    }\n}\n</code></pre>\n\n\n\n<p>which we can now access everywhere via <code>eth0.41</code>/<code>eth0.42</code>.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>vyos@vyos:~$ show interfaces \nCodes: S - State, L - Link, u - Up, D - Down, A - Admin Down\nInterface        IP Address                        S/L  Description\n---------        ----------                        ---  -----------\neth0             10.9.1.73/24                      u/u  WAN   \neth0.41          172.21.39.1/24                    u/u  HAPLAN\neth0.42          192.168.39.1/24                   u/u  HEXLITELAN\n</code></pre>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<h2>VLANs &#8211; Gotta Find the Bottom!</h2>\n\n\n\n<p>Of course, if you are like me, you turn everything into a trunk to routers.</p>\n\n\n\n<p>So we are going to remove VLAN as the PVID from our VyOS-3040 facing port, and just tag it:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&#091;admin@MikroTik] &gt; export           \n# jun/29/2021 10:52:50 by RouterOS 6.48.3\n# software id = IMPN-EEMU\n#\n# model = RB750Gr3\n/interface bridge\nadd admin-mac=B8:69:F4:AB:2E:7A auto-mac=no comment=defconf name=bridgeLocal vlan-filtering=yes\n/interface vlan\nadd interface=bridgeLocal name=VLAN9_SVI vlan-id=9\n/interface bridge port\nadd bridge=bridgeLocal comment=defconf interface=ether1\n<strong>add bridge=bridgeLocal comment=defconf interface=ether2</strong>\nadd bridge=bridgeLocal comment=defconf interface=ether3 pvid=42\nadd bridge=bridgeLocal comment=defconf interface=ether4 pvid=41\nadd bridge=bridgeLocal comment=defconf interface=ether5 pvid=9\n/interface bridge vlan\nadd bridge=bridgeLocal untagged=bridgeLocal,ether1,ether2 vlan-ids=1\n<strong>add bridge=bridgeLocal tagged=bridgeLocal,ether1,ether2 untagged=ether5 vlan-ids=9</strong>\nadd bridge=bridgeLocal tagged=ether1,ether2 untagged=ether4 vlan-ids=41\nadd bridge=bridgeLocal tagged=ether1,ether2 untagged=ether3 vlan-ids=42\n/ip dhcp-client\nadd comment=defconf disabled=no interface=VLAN9_SVI\n</code></pre>\n\n\n\n<p>and a few small changes to VyOS. We move the &#8220;WAN&#8221; dhcp to a VLAN, and change the outbound-interface for the NAT:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>vyos@vyos:~$ show configuration \ninterfaces {\n    ethernet eth0 {\n        hw-id 8c:ec:4b:6d:dc:d6\n       <strong> vif 9 {\n            address dhcp\n            description WAN\n        }</strong>\n        vif 41 {\n            address 172.21.39.1/24\n            description HAPLAN\n        }\n        vif 42 {\n            address 192.168.39.1/24\n            description HEXLITELAN\n        }\n    }\n    loopback lo {\n    }\n}\nnat {\n    source {\n        rule 10 {\n            <strong>outbound-interface eth0.9</strong>\n            source {\n                address 172.21.39.0/24\n            }\n            translation {\n                address masquerade\n            }\n        }\n        rule 11 {\n            <strong>outbound-interface eth0.9</strong>\n            source {\n                address 192.168.39.0/24\n            }\n            translation {\n                address masquerade\n            }\n        }\n    }\n}\nservice {\n    dhcp-server {\n        shared-network-name HAPDHCP {\n            subnet 172.21.39.0/24 {\n                default-router 172.21.39.1\n                dns-server 10.53.53.53\n                range 0 {\n                    start 172.21.39.100\n                    stop 172.21.39.200\n                }\n            }\n        }\n        shared-network-name HEXLITEDHCP {\n            subnet 192.168.39.0/24 {\n                default-router 192.168.39.1\n                dns-server 10.53.53.53\n                range 0 {\n                    start 192.168.39.100\n                    stop 192.168.39.200\n                }\n            }\n        }\n    }\n    ssh {\n        port 22\n    }\n}</code></pre>\n\n\n\n<p>And if we show our interfaces:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>vyos@vyos:~$ show interfaces \nCodes: S - State, L - Link, u - Up, D - Down, A - Admin Down\nInterface        IP Address                        S/L  Description\n---------        ----------                        ---  -----------\neth0             -                                 u/u  \neth0.9           10.9.1.73/24                      u/u  WAN\neth0.41          172.21.39.1/24                    u/u  HAPLAN\neth0.42          192.168.39.1/24                   u/u  HEXLITELAN\nlo               127.0.0.1/8                       u/u  \n                 ::1/128                                \n</code></pre>\n\n\n\n<hr class=\"wp-block-separator\" />\n\n\n\n<h2>Conclusion</h2>\n\n\n\n<p>That&#8217;s it!  I&#8217;ve walked through going from a traditional network with 3 separate interfaces to a single interface carrying the traffic of all three networks.</p>\n\n\n\n<p>On to the next!</p>"
        }
      ],
      "post-id": "1169"
    }
  },
  {
    "blog": {
      "title": "OXcrag.net",
      "url": "https://oxcrag.net/",
      "feed": "https://oxcrag.net/feed/",
      "description": "A homelabber with view similar to mine: prefers plain Ubuntu/KVM to Proxmox,\nuses Backblaze B2, builds routers from scratch with nftables...",
      "section": "Homelab"
    },
    "entry": {
      "title": "Imported my old blog",
      "title_detail": {
        "type": "text/plain",
        "language": null,
        "base": "https://oxcrag.net/feed/",
        "value": "Imported my old blog"
      },
      "links": [
        {
          "rel": "alternate",
          "type": "text/html",
          "href": "https://oxcrag.net/2022/06/01/imported-my-old-blog/"
        }
      ],
      "link": "https://oxcrag.net/2022/06/01/imported-my-old-blog/",
      "comments": "https://oxcrag.net/2022/06/01/imported-my-old-blog/#respond",
      "authors": [
        {
          "name": "Mikael Hansson"
        }
      ],
      "author": "Mikael Hansson",
      "author_detail": {
        "name": "Mikael Hansson"
      },
      "published": "Wed, 01 Jun 2022 19:49:11 +0000",
      "published_parsed": [
        2022,
        6,
        1,
        19,
        49,
        11,
        2,
        152,
        0
      ],
      "tags": [
        {
          "term": "Site-News",
          "scheme": null,
          "label": null
        }
      ],
      "id": "https://oxcrag.net/?p=1475",
      "guidislink": false,
      "summary": "A comment on an ancient post on my old blog reminded me of its existence. I&#8217;ve now imported the material from there to my own domain and so historic posts from way-back-when can be read here. The old site will stay online for the time being, to avoid breaking possible links.",
      "summary_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://oxcrag.net/feed/",
        "value": "A comment on an ancient post on my old blog reminded me of its existence. I&#8217;ve now imported the material from there to my own domain and so historic posts from way-back-when can be read here. The old site will stay online for the time being, to avoid breaking possible links."
      },
      "wfw_commentrss": "https://oxcrag.net/2022/06/01/imported-my-old-blog/feed/",
      "slash_comments": "0"
    }
  },
  {
    "blog": {
      "title": "Blogging to Nowhere",
      "by": "Rob Connoly",
      "url": "https://webworxshop.com/",
      "feed": "https://webworxshop.com/feed/",
      "description": "First-person view of selfhosted obsession. Ansible, GitLab CI, Docker... All\nthe good stuff.",
      "section": "Homelab"
    },
    "entry": {
      "title": "Quick Project: Splitting Docker Compose Projects",
      "title_detail": {
        "type": "text/plain",
        "language": null,
        "base": "https://webworxshop.com/feed/",
        "value": "Quick Project: Splitting Docker Compose Projects"
      },
      "links": [
        {
          "rel": "alternate",
          "type": "text/html",
          "href": "https://webworxshop.com/quick-project-splitting-docker-compose-projects/?pk_campaign=feed&pk_kwd=quick-project-splitting-docker-compose-projects"
        }
      ],
      "link": "https://webworxshop.com/quick-project-splitting-docker-compose-projects/?pk_campaign=feed&pk_kwd=quick-project-splitting-docker-compose-projects",
      "comments": "https://webworxshop.com/quick-project-splitting-docker-compose-projects/?pk_campaign=feed&pk_kwd=quick-project-splitting-docker-compose-projects#comments",
      "authors": [
        {
          "name": "Rob Connolly"
        }
      ],
      "author": "Rob Connolly",
      "author_detail": {
        "name": "Rob Connolly"
      },
      "published": "Tue, 17 Mar 2020 08:57:53 +0000",
      "published_parsed": [
        2020,
        3,
        17,
        8,
        57,
        53,
        1,
        77,
        0
      ],
      "tags": [
        {
          "term": "Projects",
          "scheme": null,
          "label": null
        },
        {
          "term": "docker",
          "scheme": null,
          "label": null
        },
        {
          "term": "quick project",
          "scheme": null,
          "label": null
        },
        {
          "term": "self-hosting",
          "scheme": null,
          "label": null
        },
        {
          "term": "traefik",
          "scheme": null,
          "label": null
        },
        {
          "term": "wordpress",
          "scheme": null,
          "label": null
        }
      ],
      "id": "https://webworxshop.com/?p=2056",
      "guidislink": false,
      "summary": "<p>Way back in the when I first started using Docker in earnest, I wrote about my web hosting stack. Recently, this has undergone an upgrade as I&#8217;m working on a new website which will be served from the same server. I took the opportunity to split the system up into multiple docker-compose projects, which makes [&#8230;]</p>\n<p>The post <a href=\"https://webworxshop.com/quick-project-splitting-docker-compose-projects/?pk_campaign=feed&#038;pk_kwd=quick-project-splitting-docker-compose-projects\" rel=\"nofollow\">Quick Project: Splitting Docker Compose Projects</a> appeared first on <a href=\"https://webworxshop.com\" rel=\"nofollow\">Blogging to Nowhere</a>.</p>\n<img alt=\"\" height=\"0\" src=\"https://analytics.webworxshop.com/piwik.php?idsite=1&amp;rec=1&amp;url=https%3A%2F%2Fwebworxshop.com%2Fquick-project-splitting-docker-compose-projects%2F%3Fpk_campaign%3Dfeed%26pk_kwd%3Dquick-project-splitting-docker-compose-projects&amp;action_name=Quick+Project%3A+Splitting+Docker+Compose+Projects&amp;urlref=https%3A%2F%2Fwebworxshop.com%2Ffeed%2F\" style=\"border: 0; width: 0; height: 0;\" width=\"0\" />",
      "summary_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://webworxshop.com/feed/",
        "value": "<p>Way back in the when I first started using Docker in earnest, I wrote about my web hosting stack. Recently, this has undergone an upgrade as I&#8217;m working on a new website which will be served from the same server. I took the opportunity to split the system up into multiple docker-compose projects, which makes [&#8230;]</p>\n<p>The post <a href=\"https://webworxshop.com/quick-project-splitting-docker-compose-projects/?pk_campaign=feed&#038;pk_kwd=quick-project-splitting-docker-compose-projects\" rel=\"nofollow\">Quick Project: Splitting Docker Compose Projects</a> appeared first on <a href=\"https://webworxshop.com\" rel=\"nofollow\">Blogging to Nowhere</a>.</p>\n<img alt=\"\" height=\"0\" src=\"https://analytics.webworxshop.com/piwik.php?idsite=1&amp;rec=1&amp;url=https%3A%2F%2Fwebworxshop.com%2Fquick-project-splitting-docker-compose-projects%2F%3Fpk_campaign%3Dfeed%26pk_kwd%3Dquick-project-splitting-docker-compose-projects&amp;action_name=Quick+Project%3A+Splitting+Docker+Compose+Projects&amp;urlref=https%3A%2F%2Fwebworxshop.com%2Ffeed%2F\" style=\"border: 0; width: 0; height: 0;\" width=\"0\" />"
      },
      "wfw_commentrss": "https://webworxshop.com/quick-project-splitting-docker-compose-projects/?pk_campaign=feed&pk_kwd=quick-project-splitting-docker-compose-projects/feed/",
      "slash_comments": "1"
    }
  },
  {
    "blog": {
      "title": "Defend the planet",
      "url": "https://defendtheplanet.net",
      "feed": "https://defendtheplanet.net/feed/",
      "description": "Tinkering with ARM single-board computers, learning to solder, designing\nrobots, building Docker swarms and repairing Volkswagen T4. Cool blog.",
      "section": "Homelab"
    },
    "entry": {
      "title": "Parsoid 0.9.0 update brings 406 Not Acceptable docserver error in VisualEditor REL_30 on Mediawiki 1.30",
      "title_detail": {
        "type": "text/plain",
        "language": null,
        "base": "https://defendtheplanet.net/feed/",
        "value": "Parsoid 0.9.0 update brings 406 Not Acceptable docserver error in VisualEditor REL_30 on Mediawiki 1.30"
      },
      "links": [
        {
          "rel": "alternate",
          "type": "text/html",
          "href": "https://defendtheplanet.net/2018/03/28/parsoid-0-9-0-update-brings-406-not-acceptable-docserver-error-in-visualeditor-rel_30-on-mediawiki-1-30/"
        }
      ],
      "link": "https://defendtheplanet.net/2018/03/28/parsoid-0-9-0-update-brings-406-not-acceptable-docserver-error-in-visualeditor-rel_30-on-mediawiki-1-30/",
      "authors": [
        {
          "name": "paul"
        }
      ],
      "author": "paul",
      "author_detail": {
        "name": "paul"
      },
      "published": "Wed, 28 Mar 2018 13:56:30 +0000",
      "published_parsed": [
        2018,
        3,
        28,
        13,
        56,
        30,
        2,
        87,
        0
      ],
      "tags": [
        {
          "term": "Uncategorized",
          "scheme": null,
          "label": null
        }
      ],
      "id": "https://defendtheplanet.net/?p=2074",
      "guidislink": false,
      "summary": "Some of my mediawiki instances broke when editing a page with VisualEditor on REL_30 today bringing HTTP 416 Errors related to Parsoid. Strangely this error only occured when editing  existing pages, simplyfied as curl below: curl \"http://NAME_OF_WIKI_HERE/api.php?action=visualeditor&#38;format=json&#38;paction=parse&#38;page=Main_Page&#38;uselang=en\" &#160; {\"error\":{\"code\":\"apierror-visualeditor-docserver-http\",\"info\":\"HTTP 406\",\"*\":\"See http://NAME_OF_WIKI_HERE/api.php for API usage. Subscribe to the mediawiki-api-announce mailing list at &#38;lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&#38;gt; for notice of [&#8230;]",
      "summary_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://defendtheplanet.net/feed/",
        "value": "Some of my mediawiki instances broke when editing a page with VisualEditor on REL_30 today bringing HTTP 416 Errors related to Parsoid. Strangely this error only occured when editing  existing pages, simplyfied as curl below: curl \"http://NAME_OF_WIKI_HERE/api.php?action=visualeditor&#38;format=json&#38;paction=parse&#38;page=Main_Page&#38;uselang=en\" &#160; {\"error\":{\"code\":\"apierror-visualeditor-docserver-http\",\"info\":\"HTTP 406\",\"*\":\"See http://NAME_OF_WIKI_HERE/api.php for API usage. Subscribe to the mediawiki-api-announce mailing list at &#38;lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&#38;gt; for notice of [&#8230;]"
      },
      "content": [
        {
          "type": "text/html",
          "language": null,
          "base": "https://defendtheplanet.net/feed/",
          "value": "<p>Some of my mediawiki instances broke when editing a page with VisualEditor on REL_30 today bringing HTTP 416 Errors related to Parsoid.</p>\n<p>Strangely this error only occured when editing  existing pages, simplyfied as curl below:</p>\n<pre class=\"lang:sh decode:true \">curl \"http://NAME_OF_WIKI_HERE/api.php?action=visualeditor&amp;format=json&amp;paction=parse&amp;page=Main_Page&amp;uselang=en\"</pre>\n<p>&nbsp;</p>\n<pre class=\"lang:js decode:true\">{\"error\":{\"code\":\"apierror-visualeditor-docserver-http\",\"info\":\"HTTP 406\",\"*\":\"See http://NAME_OF_WIKI_HERE/api.php for API usage. Subscribe to the mediawiki-api-announce mailing list at &amp;lt;https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce&amp;gt; for notice of API deprecations and breaking changes.\"}}%</pre>\n<p>After a while I found that parsoid announced the behavoiur on there <a href=\"https://github.com/wikimedia/parsoid/blob/b75a2239faaa39f49ca416392d208082822a1d21/HISTORY.md\">github</a> rep:</p>\n<p style=\"padding-left: 30px;\">This release requires clients (VE, etc.) to return a 1.6.0 and greater HTML version string in the header. If not, Parsoid will return a HTTP 406. This can be fixed by updating VE (or relevant clients) to a more recent version.</p>\n<p>Unfortunately I used their .deb repository  releases.wikipedia.org which didn&#8217;t provide the 0.8.0 package for reverting the update. And since I&#8217;ve already updated  -marking it on hold in apt was no longer an option.</p>\n<p>After reading a bit through the source code the solution I found until the next mediawiki stable versions arrives can be followed by editing the</p>\n<pre class=\"lang:default decode:true \">lib/config/ParsoidConfig.js</pre>\n<p>and switch this line:</p>\n<pre class=\"lang:default decode:true\">ParsoidConfig.prototype.strictAcceptCheck = true;\n</pre>\n<p>to that</p>\n<pre class=\"lang:default decode:true \">ParsoidConfig.prototype.strictAcceptCheck = false; //true;\n</pre>\n<p>It&#8217;s not pretty, but for now it solved my issues.</p>"
        }
      ]
    }
  },
  {
    "blog": {
      "title": "JankScale Datasystems",
      "url": "https://blog.jankscale.com/",
      "feed": "https://blog.jankscale.com/rss/",
      "description": "Personal datacenter in a metal container in a backyard. There will probably\nbe some interesting posts on IaC (implied by author's reddit flair)",
      "section": "Homelab"
    },
    "entry": {
      "title": "Coming soon",
      "title_detail": {
        "type": "text/plain",
        "language": null,
        "base": "https://blog.jankscale.com/rss/",
        "value": "Coming soon"
      },
      "summary": "<p>This is a brand new site that&apos;s just getting started. Things will be up and running here shortly, but you can <a href=\"https://blog.jankscale.com/rss/#/portal/\" rel=\"noopener noreferrer\">subscribe</a> in the meantime if you&apos;d like to stay up to date and receive emails when new content is published!</p>",
      "summary_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://blog.jankscale.com/rss/",
        "value": "<p>This is a brand new site that&apos;s just getting started. Things will be up and running here shortly, but you can <a href=\"https://blog.jankscale.com/rss/#/portal/\" rel=\"noopener noreferrer\">subscribe</a> in the meantime if you&apos;d like to stay up to date and receive emails when new content is published!</p>"
      },
      "links": [
        {
          "rel": "alternate",
          "type": "text/html",
          "href": "https://blog.jankscale.com/coming-soon/"
        }
      ],
      "link": "https://blog.jankscale.com/coming-soon/",
      "id": "628807a0591a200001a345f2",
      "guidislink": false,
      "tags": [
        {
          "term": "News",
          "scheme": null,
          "label": null
        }
      ],
      "authors": [
        {
          "name": "Ghost"
        }
      ],
      "author": "Ghost",
      "author_detail": {
        "name": "Ghost"
      },
      "published": "Fri, 20 May 2022 21:26:56 GMT",
      "published_parsed": [
        2022,
        5,
        20,
        21,
        26,
        56,
        4,
        140,
        0
      ],
      "media_content": [
        {
          "url": "https://static.ghost.org/v4.0.0/images/feature-image.jpg",
          "medium": "image"
        }
      ],
      "content": [
        {
          "type": "text/html",
          "language": null,
          "base": "https://blog.jankscale.com/rss/",
          "value": "<img alt=\"Coming soon\" src=\"https://static.ghost.org/v4.0.0/images/feature-image.jpg\" /><p>This is a brand new site that&apos;s just getting started. Things will be up and running here shortly, but you can <a href=\"https://blog.jankscale.com/rss/#/portal/\" rel=\"noopener noreferrer\">subscribe</a> in the meantime if you&apos;d like to stay up to date and receive emails when new content is published!</p>"
        }
      ]
    }
  },
  {
    "blog": {
      "title": "Just another Linux geek",
      "url": "https://blog.christophersmart.com",
      "feed": "https://blog.christophersmart.com/feed/",
      "description": "Maintaining automatable homelab with Ansible, libvirt/KVM and Fedora. Some\nOpenWRT sprinkled here and there.",
      "section": "Homelab"
    },
    "entry": {
      "title": "Using a dynamic libvirt inventory with Ansible",
      "title_detail": {
        "type": "text/plain",
        "language": null,
        "base": "https://blog.christophersmart.com/feed/",
        "value": "Using a dynamic libvirt inventory with Ansible"
      },
      "links": [
        {
          "rel": "alternate",
          "type": "text/html",
          "href": "https://blog.christophersmart.com/2022/04/03/using-a-dynamic-libvirt-inventory-with-ansible/"
        }
      ],
      "link": "https://blog.christophersmart.com/2022/04/03/using-a-dynamic-libvirt-inventory-with-ansible/",
      "comments": "https://blog.christophersmart.com/2022/04/03/using-a-dynamic-libvirt-inventory-with-ansible/#comments",
      "authors": [
        {
          "name": "Chris"
        }
      ],
      "author": "Chris",
      "author_detail": {
        "name": "Chris"
      },
      "published": "Sun, 03 Apr 2022 11:35:44 +0000",
      "published_parsed": [
        2022,
        4,
        3,
        11,
        35,
        44,
        6,
        93,
        0
      ],
      "tags": [
        {
          "term": "Ansible",
          "scheme": null,
          "label": null
        },
        {
          "term": "Fedora",
          "scheme": null,
          "label": null
        },
        {
          "term": "FOSS",
          "scheme": null,
          "label": null
        },
        {
          "term": "ansible",
          "scheme": null,
          "label": null
        },
        {
          "term": "kvm",
          "scheme": null,
          "label": null
        },
        {
          "term": "libvirt",
          "scheme": null,
          "label": null
        },
        {
          "term": "qemu",
          "scheme": null,
          "label": null
        }
      ],
      "id": "https://blog.christophersmart.com/?p=6748",
      "guidislink": false,
      "summary": "The Ansible community libvirt collection provides a method to interact with QEMU and LXC (if that interests you, please come and join us!). Along with support for libvirt tasks such [&#8230;]",
      "summary_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://blog.christophersmart.com/feed/",
        "value": "The Ansible community libvirt collection provides a method to interact with QEMU and LXC (if that interests you, please come and join us!). Along with support for libvirt tasks such [&#8230;]"
      },
      "content": [
        {
          "type": "text/html",
          "language": null,
          "base": "https://blog.christophersmart.com/feed/",
          "value": "<p>The Ansible <a href=\"https://docs.ansible.com/ansible/latest/collections/community/libvirt/index.html\">community libvirt collection</a> provides a method to interact with QEMU and LXC (if that interests you, please <a href=\"https://github.com/ansible-collections/community.libvirt\">come and join us</a>!). Along with support for libvirt tasks such as managing <a href=\"https://docs.ansible.com/ansible/latest/collections/community/libvirt/virt_module.html#ansible-collections-community-libvirt-virt-module\">guests</a>, <a href=\"https://docs.ansible.com/ansible/latest/collections/community/libvirt/virt_net_module.html#ansible-collections-community-libvirt-virt-net-module\">networks</a> and <a href=\"https://docs.ansible.com/ansible/latest/collections/community/libvirt/virt_pool_module.html#ansible-collections-community-libvirt-virt-pool-module\">storage</a>, it also <a href=\"https://docs.ansible.com/ansible/latest/collections/community/libvirt/libvirt_inventory.html\">provides a dynamic inventory</a>. This does not use SSH, but rather interacts directly with the VM over a virtual serial link using <code>qemu-guest-agent</code>, with commands executed as <code>root</code> inside the guest.</p>\n\n\n\n<p>The dynamic inventory has a couple of requirements. It does not (yet) support SELinux in enforcing mode inside the guest; it requires the <code>qemu-guest-agent</code> service to be running inside the guest; the host must be able to query <code>qemu-guest-agent</code> successfully; and <code>qemu-guest-agent</code> needs to support the following capabilities:</p>\n\n\n\n<ul><li>guest-exec</li><li>guest-file-close</li><li>guest-file-open</li><li>guest-file-read</li><li>guest-file-write</li></ul>\n\n\n\n<p>A number of distros will blacklist these in the guest&#8217;s qemu guest agent configuration, so this might need to be removed and the service restarted. In CentOS, this is configured with the <code>BLACKLIST_RPC</code> option in the <code>/etc/sysconfig/qemu-ga</code> file, so you would need to modify that and restart the <code>qemu-guest-agent</code> service.</p>\n\n\n\n<h4>Install the collection</h4>\n\n\n\n<p>To get started, we first need to install the collection.</p>\n\n\n\n<pre class=\"wp-block-code\"><code class=\"language-bash line-numbers\" lang=\"bash\">ansible-galaxy collection install community.libvirt</code></pre>\n\n\n\n<h4>Create an inventory file</h4>\n\n\n\n<p>Next, to use it as a dynamic inventory and talk to a working <code>libvirtd</code>, we need to create an inventory file which provides the connection details for our hypervisor. In this example, we&#8217;re creating a file called <code>kvm.yml</code> which provides the <code>uri</code> to talk to the local daemon supervising QEMU domains.</p>\n\n\n\n<pre class=\"wp-block-code\"><code class=\"language-yaml\" lang=\"yaml\">---\nplugin: community.libvirt.libvirt\nuri: 'qemu:///system'</code></pre>\n\n\n\n<p>Now that we have our inventory file, we can test it!</p>\n\n\n\n<pre class=\"wp-block-code\"><code class=\"language-bash line-numbers\" lang=\"bash\">ansible-inventory --inventory kvm.yml --list</code></pre>\n\n\n\n<span id=\"more-6748\"></span>\n\n\n\n<p>This should return JSON formatted data, which looks like this on a hypervisor with no guests.</p>\n\n\n\n<pre class=\"wp-block-code\"><code class=\"language-json\" lang=\"json\">{\n    \"_meta\": {\n        \"hostvars\": {}\n    },\n    \"all\": {\n        \"children\": [\n            \"ungrouped\"\n        ]\n    }\n}\n</code></pre>\n\n\n\n<h5>Inventory with a remote host</h5>\n\n\n\n<p>The cool thing is that it supports standard URI connection strings, so we can also talk to remote libvirt hosts over SSH with an inventory like this.</p>\n\n\n\n<pre class=\"wp-block-code\"><code class=\"language-yaml\" lang=\"yaml\">---\nplugin: community.libvirt.libvirt\nuri: 'qemu+ssh://user@server/system'</code></pre>\n\n\n\n<h4>Spin up VMs</h4>\n\n\n\n<p>OK! Spin up some test virtual machines and try listing the inventory again.</p>\n\n\n\n<p>If you need a hand creating some VMs, then we can do it with my <a href=\"https://github.com/csmart/virt-infra-ansible\">Ansible virtual infrastructure playbook</a>, which pulls in <a href=\"https://github.com/csmart/ansible-role-virt-infra\">my role</a> and includes a sample inventory. Running this will also automatically install and start everything on <code>localhost</code> that we need for <code>libvirtd</code>.</p>\n\n\n\n<pre class=\"wp-block-code\"><code class=\"language-bash line-numbers\" lang=\"bash\">git clone --recursive https://github.com/csmart/virt-infra-ansible.git\ncd virt-infra-ansible</code></pre>\n\n\n\n<p>Let&#8217;s grab the CentOS Stream 8 images and put them in place so that we can spin up the VMs.</p>\n\n\n\n<pre class=\"wp-block-code\"><code class=\"language-bash line-numbers\" lang=\"bash\">curl -O https://cloud.centos.org/centos/8-stream/x86_64/images/CentOS-Stream-GenericCloud-8-20210603.0.x86_64.qcow2\nsudo mkdir -p /var/lib/libvirt/images\nsudo mv -iv CentOS-Stream-GenericCloud-8-20210603.0.x86_64.qcow2 /var/lib/libvirt/images/</code></pre>\n\n\n\n<p>Next, let&#8217;s create some extra args so that the Ansible role can put SELinux into permissive mode and configure <code>qemu-guest-agent</code> capabilities for us automatically.</p>\n\n\n\n<pre class=\"wp-block-code\"><code class=\"language-bash line-numbers\" lang=\"bash\">cat &gt; /tmp/ansible-extra-args.json &lt;&lt; \\EOF\n{\n  \"virt_infra_disk_cmd\": [\n    \"sed -i s/^BLACKLIST_RPC=/\\\\#BLACKLIST_RPC=/ /etc/sysconfig/qemu-ga\",\n    \"sed -i s/^SELINUX=.*/SELINUX=permissive/ /etc/selinux/config\"\n  ]\n}\nEOF</code></pre>\n\n\n\n<p>OK! Now we can spin up two VMs, <code>simple-centos-8-1</code> and <code>example-centos-8</code> from the included sample inventory and test if we can see them using the dynamic inventory.</p>\n\n\n\n<pre class=\"wp-block-code\"><code class=\"language-bash line-numbers\" lang=\"bash\">./run.sh --limit kvmhost,simple-centos-8-1,example-centos-8 --extra-vars \"@/tmp/ansible-extra-args.json\"</code></pre>\n\n\n\n<p>This should successfully spin up those two machines, which we can remove cleanly in a later step. If you need to SSH into them for some reason, they should be configured with a local account that matches Linux username, with a password of <code>password</code> and be accessible with any of the SSH keys from your home directory.</p>\n\n\n\n<pre class=\"wp-block-code\"><code class=\"language-bash line-numbers\" lang=\"bash\">ssh example-centos-8 uptime</code></pre>\n\n\n\n<h4>Test the dynamic inventory</h4>\n\n\n\n<p>Let&#8217;s try the dynamic inventory again and see if we can find those new VMs.</p>\n\n\n\n<pre class=\"wp-block-code\"><code class=\"language-bash line-numbers\" lang=\"bash\">ansible-inventory --inventory kvm.yml --list</code></pre>\n\n\n\n<p>This time the returned JSON includes the VMs. Note that groups are automatically created for each host.</p>\n\n\n\n<pre class=\"wp-block-code\"><code class=\"language-json\" lang=\"json\">{\n    \"1c85f707-70bd-4449-9e74-0364329b2cae\": {\n        \"hosts\": [\n            \"simple-centos-8-1\"\n        ]\n    },\n    \"73d59360-33f9-44e6-8c71-0ac2f6530c43\": {\n        \"hosts\": [\n            \"example-centos-8\"\n        ]\n    },\n    \"_meta\": {\n        \"hostvars\": {\n            \"example-centos-8\": {\n                \"ansible_connection\": \"community.libvirt.libvirt_qemu\",\n                \"ansible_libvirt_uri\": \"qemu:///system\"\n            },\n            \"simple-centos-8-1\": {\n                \"ansible_connection\": \"community.libvirt.libvirt_qemu\",\n                \"ansible_libvirt_uri\": \"qemu:///system\"\n            }\n        }\n    },\n    \"all\": {\n        \"children\": [\n            \"1c85f707-70bd-4449-9e74-0364329b2cae\",\n            \"73d59360-33f9-44e6-8c71-0ac2f6530c43\",\n            \"ungrouped\"\n        ]\n    }\n}</code></pre>\n\n\n\n<h4>Test guest agent</h4>\n\n\n\n<p>We can use the <code>virsh</code> command line tool to test that the host is able to communicate with the guest agent running in the VM, and that it supports the capabilities that we need. Let&#8217;s do that now, against one of the example VMs.</p>\n\n\n\n<pre class=\"wp-block-code\"><code class=\"language-bash line-numbers\" lang=\"bash\">sudo virsh qemu-agent-command example-centos-8 '{\"execute\":\"guest-info\"}' --pretty</code></pre>\n\n\n\n<p>Firstly, this needs to work and secondly, it should return a list of supported commands where you can ensure the required capabilities are enabled and working.</p>\n\n\n\n<h4>Use the dynamic inventory with Ansible</h4>\n\n\n\n<p>Now that we have a working inventory and have confirmed the guest agent connection is working, we can use Ansible to dynamically generate an inventory and connect to the guests. Again, this doesn&#8217;t use SSH, but rather the <code>gemu-guest-agent</code> interface.</p>\n\n\n\n<p>Let&#8217;s test this using the standard Ansible <code>ping</code> module.</p>\n\n\n\n<pre class=\"wp-block-code\"><code class=\"language-bash line-numbers\" lang=\"bash\">ansible --inventory kvm.yml all -m ping</code></pre>\n\n\n\n<p>We should see a successful response!</p>\n\n\n\n<pre class=\"wp-block-code\"><code class=\"\">simple-centos-8-1 | SUCCESS =&gt; {\n    \"ansible_facts\": {\n        \"discovered_interpreter_python\": \"/usr/libexec/platform-python\"\n    },\n    \"changed\": false,\n    \"ping\": \"pong\"\n}\nexample-centos-8 | SUCCESS =&gt; {\n    \"ansible_facts\": {\n        \"discovered_interpreter_python\": \"/usr/libexec/platform-python\"\n    },\n    \"changed\": false,\n    \"ping\": \"pong\"\n}</code></pre>\n\n\n\n<p>And of course we can run real playbooks. Here&#8217;s an example playbook called <code>site.yml</code> to install critical packages <img alt=\"😉\" class=\"wp-smiley\" src=\"https://s.w.org/images/core/emoji/14.0.0/72x72/1f609.png\" style=\"height: 1em;\" /></p>\n\n\n\n<pre class=\"wp-block-code\"><code class=\"language-yaml\" lang=\"yaml\">---\n- hosts: all\n  tasks:\n    - name: Install packages\n      package:\n        name:\n          - git\n          - rsync\n          - tmux\n          - vim\n        state: present\n      become: true\n      register: result_package_install\n      retries: 10\n      delay: 5\n      until: result_package_install is succeeded</code></pre>\n\n\n\n<p>Let&#8217;s run it!</p>\n\n\n\n<pre class=\"wp-block-code\"><code class=\"language-bash line-numbers\" lang=\"bash\">ansible-playbook --inventory kvm.yml site.yml</code></pre>\n\n\n\n<p>And we should see that it happily executes the playbook.</p>\n\n\n\n<pre class=\"wp-block-code\"><code class=\"\">PLAY [all] ******************************************************************************************\n\nTASK [Gathering Facts] ******************************************************************************\nok: [simple-centos-8-1]\nok: [example-centos-8]\n\nTASK [Install packages] *****************************************************************************\nchanged: [example-centos-8]\nchanged: [simple-centos-8-1]\n\nPLAY RECAP ******************************************************************************************\nexample-centos-8     : ok=2  changed=1  unreachable=0  failed=0    skipped=0  rescued=0  ignored=0   \nsimple-centos-8-1    : ok=2  changed=1  unreachable=0  failed=0    skipped=0  rescued=0  ignored=0   </code></pre>\n\n\n\n<h5>Limiting the hosts with dynamic inventory</h5>\n\n\n\n<p>Now that you have a working dynamic inventory, you can use the standard Ansible <code>limit</code> option to restrict machines for your playbooks. This way you can have the flexibility of the dynamic inventory, but restrict which guests you execute Ansible against.</p>\n\n\n\n<pre class=\"wp-block-code\"><code class=\"language-bash line-numbers\" lang=\"bash\">ansible-playbook --inventory kvm.yml --limit example-centos-8 site.yml</code></pre>\n\n\n\n<h4>Remove test VMs</h4>\n\n\n\n<p>Finally, we can cleanly remove those test VMs using the same Ansible code, by setting their state to <code>undefined</code>.</p>\n\n\n\n<pre class=\"wp-block-code\"><code class=\"language-bash line-numbers\" lang=\"bash\">./run.sh --limit kvmhost,simple-centos-8-1,example-centos-8 -e virt_infra_state=undefined</code></pre>\n\n\n\n<p>And there you have it. Using the dynamic inventory with the libvirt plugin can be quite handy.</p>"
        }
      ],
      "wfw_commentrss": "https://blog.christophersmart.com/2022/04/03/using-a-dynamic-libvirt-inventory-with-ansible/feed/",
      "slash_comments": "1"
    }
  },
  {
    "blog": {
      "title": "YetiOps",
      "url": "https://yetiops.net/posts/",
      "feed": "https://yetiops.net/posts/index.xml",
      "description": "Homelab, Ansible, KVM, Terraform, Pulumi",
      "section": "Homelab"
    },
    "entry": {
      "title": "Home and Personal Infrastructure Overhaul: Part 7 - Using Drone with Terraform",
      "title_detail": {
        "type": "text/plain",
        "language": null,
        "base": "https://yetiops.net/posts/index.xml",
        "value": "Home and Personal Infrastructure Overhaul: Part 7 - Using Drone with Terraform"
      },
      "links": [
        {
          "rel": "alternate",
          "type": "text/html",
          "href": "https://yetiops.net/posts/home-infra-overhaul-part7-drone-terraform/"
        }
      ],
      "link": "https://yetiops.net/posts/home-infra-overhaul-part7-drone-terraform/",
      "published": "Sun, 05 Jun 2022 08:27:30 +0100",
      "published_parsed": [
        2022,
        6,
        5,
        7,
        27,
        30,
        6,
        156,
        0
      ],
      "id": "https://yetiops.net/posts/home-infra-overhaul-part7-drone-terraform/",
      "guidislink": false,
      "summary": "This post is the next in the series on how I overhauled my personal infrastructure to make it easier to manage, make changes and integrate new applications.\nPrevious posts in the series are: -\n Introduction Ansible Improvements SaltStack Improvements Introduction to Drone CI Using Drone with Ansible Using Drone with Salt  This post will cover using Drone to manage and deploy resources with Terraform.\nBackground When I first started using Drone, I wasn&rsquo;t using it with Terraform.",
      "summary_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://yetiops.net/posts/index.xml",
        "value": "This post is the next in the series on how I overhauled my personal infrastructure to make it easier to manage, make changes and integrate new applications.\nPrevious posts in the series are: -\n Introduction Ansible Improvements SaltStack Improvements Introduction to Drone CI Using Drone with Ansible Using Drone with Salt  This post will cover using Drone to manage and deploy resources with Terraform.\nBackground When I first started using Drone, I wasn&rsquo;t using it with Terraform."
      },
      "content": [
        {
          "type": "text/html",
          "language": null,
          "base": "https://yetiops.net/posts/index.xml",
          "value": "<p>This post is the next in the series on how I overhauled my personal infrastructure to make it easier to manage, make changes and integrate new applications.</p>\n<p>Previous posts in the series are: -</p>\n<ul>\n<li><a href=\"https://yetiops.net/posts/home-infra-overhaul-part1/\">Introduction</a></li>\n<li><a href=\"https://yetiops.net/posts/home-infra-overhaul-part2-ansible-improvements/\">Ansible Improvements</a></li>\n<li><a href=\"https://yetiops.net/posts/home-infra-overhaul-part3-salt-improvements/\">SaltStack Improvements</a></li>\n<li><a href=\"https://yetiops.net/posts/home-infra-overhaul-part4-drone-getting-started/\">Introduction to Drone CI</a></li>\n<li><a href=\"https://yetiops.net/posts/home-infra-overhaul-part5-drone-ansible/\">Using Drone with Ansible</a></li>\n<li><a href=\"https://yetiops.net/posts/home-infra-overhaul-part6-drone-salt/\">Using Drone with Salt</a></li>\n</ul>\n<p>This post will cover using Drone to manage and deploy resources with Terraform.</p>\n<h2 id=\"background\">Background</h2>\n<p>When I first started using Drone, I wasn&rsquo;t using it with Terraform. In fact very little of my infrastructure was managed by Terraform. Recently though, I decided to start moving most external services to it. In keeping with my theme of trying to automate my infrastructure and avoid manual changes, it made sense to finally start using Terraform for my personal usage of external services.</p>\n<p>Ansible and Salt still control what runs on my machines (including VPSs/instances on cloud providers), but managing external services makes a lot of sense with Terraform. While Ansible and Salt are good at making changes, they don&rsquo;t manage &ldquo;desired state&rdquo; very well, in the sense that Ansible can create a VPS on Hetzner, but it does not know that one may already exist.</p>\n<p>With Terraform, it knows what resources it manages (using State management), and whether they should already exist or not. Terraform may still be incorrect as to the state of a resource, but usually only if the resource changed since the last time Terraform ran. Something like Ansible will just try to make the same changes it did last time, which could lead to duplicate resources, or the Playbook failing because it can&rsquo;t create a resource (because it already exists and can&rsquo;t be created again).</p>\n<p>The following covers what I use: -</p>\n<ul>\n<li>Cloudflare for external DNS\n<ul>\n<li>This includes externally accessibly domains</li>\n<li>It also includes &ldquo;internal&rdquo; domains I use that I want valid Let&rsquo;s Encrypt certificates for</li>\n</ul>\n</li>\n<li>Digital Ocean and Hetzner for VPSs\n<ul>\n<li>My blog and other external services (RSS, Read-It-Later, Black Box Exporter for monitoring) are hosted on these</li>\n</ul>\n</li>\n<li>Google Cloud Platform and Oracle Cloud Infrastructure for the always-free virtual machines</li>\n<li>Lab/Proxmox for testing technologies</li>\n</ul>\n<p>For most of these, the steps are the same, with some minor differences in variable/secrets for each provider). In some cases, extra steps are required. I&rsquo;ll first show the most basic pipeline (the one used for Cloudflare DNS) and then show some of the extra steps in others.</p>\n<h2 id=\"full-drone-pipeline---cloudflare\">Full Drone Pipeline - Cloudflare</h2>\n<div class=\"highlight\"><pre><code class=\"language-yaml\"><span style=\"color: #66d9ef;\">kind</span>: pipeline\n<span style=\"color: #66d9ef;\">name</span>: default\n<span style=\"color: #66d9ef;\">type</span>: docker\n\n<span style=\"color: #66d9ef;\">trigger</span>:\n  <span style=\"color: #66d9ef;\">branch</span>:\n    - main\n\n<span style=\"color: #66d9ef;\">steps</span>:\n  - <span style=\"color: #66d9ef;\">name</span>: Terraform FMT PR\n    <span style=\"color: #66d9ef;\">image</span>: jmccann/drone-terraform:latest\n    <span style=\"color: #66d9ef;\">settings</span>:\n      <span style=\"color: #66d9ef;\">actions</span>:\n        - fmt\n      <span style=\"color: #66d9ef;\">fmt_options</span>:\n        <span style=\"color: #66d9ef;\">write</span>: <span style=\"color: #66d9ef;\">false</span>\n        <span style=\"color: #66d9ef;\">diff</span>: <span style=\"color: #66d9ef;\">true</span>\n        <span style=\"color: #66d9ef;\">check</span>: <span style=\"color: #66d9ef;\">true</span>\n    <span style=\"color: #66d9ef;\">when</span>:\n      <span style=\"color: #66d9ef;\">event</span>:\n      - pull_request\n\n  - <span style=\"color: #66d9ef;\">name</span>: Terraform Plan\n    <span style=\"color: #66d9ef;\">image</span>: jmccann/drone-terraform:latest\n    <span style=\"color: #66d9ef;\">settings</span>:\n      <span style=\"color: #66d9ef;\">actions</span>:\n        - validate\n        - plan\n    <span style=\"color: #66d9ef;\">environment</span>:\n      <span style=\"color: #66d9ef;\">DIGITALOCEAN_TOKEN</span>:\n        <span style=\"color: #66d9ef;\">from_secret</span>: digitalocean_token \n      <span style=\"color: #66d9ef;\">HCLOUD_TOKEN</span>:\n        <span style=\"color: #66d9ef;\">from_secret</span>: hcloud_token\n      <span style=\"color: #66d9ef;\">CLOUDFLARE_API_TOKEN</span>:\n        <span style=\"color: #66d9ef;\">from_secret</span>: cloudflare_api_token\n    <span style=\"color: #66d9ef;\">when</span>:\n      <span style=\"color: #66d9ef;\">event</span>:\n      - pull_request\n\n  - <span style=\"color: #66d9ef;\">name</span>: slack-pr\n    <span style=\"color: #66d9ef;\">image</span>: plugins/slack\n    <span style=\"color: #66d9ef;\">settings</span>:\n      <span style=\"color: #66d9ef;\">webhook</span>:\n        <span style=\"color: #66d9ef;\">from_secret</span>: drone_builds_slack_webhook \n      <span style=\"color: #66d9ef;\">channel</span>: builds\n      <span style=\"color: #66d9ef;\">template</span>: <span style=\"color: #e6db74;\">&gt;\n</span><span style=\"color: #e6db74;\">        {{#success build.status}}</span>\n          {{repo.name}} PR build passed. \n          Merge in to apply.\n          <span style=\"color: #66d9ef;\">PR</span>: https://git.noisepalace.co.uk/YetiOps/{{repo.name}}/pulls/{{build.pull}}\n          <span style=\"color: #66d9ef;\">Build</span>: https://drone.noisepalace.co.uk/YetiOps/{{repo.name}}/{{build.number}}\n        {{else}}\n          {{repo.name}} PR build failed. \n          Please investigate. \n          <span style=\"color: #66d9ef;\">PR</span>: https://git.noisepalace.co.uk/YetiOps/{{repo.name}}/pulls/{{build.pull}}\n          <span style=\"color: #66d9ef;\">Build</span>: https://drone.noisepalace.co.uk/YetiOps/{{repo.name}}/{{build.number}}\n        {{/success}}            \n    <span style=\"color: #66d9ef;\">when</span>:\n      <span style=\"color: #66d9ef;\">status</span>:\n      - failure\n      - success\n      <span style=\"color: #66d9ef;\">event</span>:\n        - pull_request\n\n  - <span style=\"color: #66d9ef;\">name</span>: slack-push-start\n    <span style=\"color: #66d9ef;\">image</span>: plugins/slack\n    <span style=\"color: #66d9ef;\">settings</span>:\n      <span style=\"color: #66d9ef;\">webhook</span>:\n        <span style=\"color: #66d9ef;\">from_secret</span>: drone_builds_slack_webhook \n      <span style=\"color: #66d9ef;\">channel</span>: builds\n      <span style=\"color: #66d9ef;\">template</span>: <span style=\"color: #e6db74;\">&gt;\n</span><span style=\"color: #e6db74;\">        {{repo.name}} build is starting.</span>\n        <span style=\"color: #66d9ef;\">Build</span>: https://drone.noisepalace.co.uk/YetiOps/{{repo.name}}/{{build.number}}      \n    <span style=\"color: #66d9ef;\">when</span>:\n      <span style=\"color: #66d9ef;\">branch</span>:\n      - main\n      <span style=\"color: #66d9ef;\">event</span>:\n      - push\n      - tag\n  \n  - <span style=\"color: #66d9ef;\">name</span>: Terraform FMT\n    <span style=\"color: #66d9ef;\">image</span>: jmccann/drone-terraform:latest\n    <span style=\"color: #66d9ef;\">settings</span>:\n      <span style=\"color: #66d9ef;\">actions</span>:\n        - fmt\n      <span style=\"color: #66d9ef;\">fmt_options</span>:\n        <span style=\"color: #66d9ef;\">write</span>: <span style=\"color: #66d9ef;\">false</span>\n        <span style=\"color: #66d9ef;\">diff</span>: <span style=\"color: #66d9ef;\">true</span>\n        <span style=\"color: #66d9ef;\">check</span>: <span style=\"color: #66d9ef;\">true</span>\n    <span style=\"color: #66d9ef;\">when</span>:\n      <span style=\"color: #66d9ef;\">branch</span>:\n      - main\n      <span style=\"color: #66d9ef;\">event</span>:\n      - push\n      - tag\n\n\n  - <span style=\"color: #66d9ef;\">name</span>: Terraform Apply\n    <span style=\"color: #66d9ef;\">image</span>: jmccann/drone-terraform:latest\n    <span style=\"color: #66d9ef;\">settings</span>:\n      <span style=\"color: #66d9ef;\">actions</span>:\n        - validate\n        - plan\n        - apply\n    <span style=\"color: #66d9ef;\">environment</span>:\n      <span style=\"color: #66d9ef;\">DIGITALOCEAN_TOKEN</span>:\n        <span style=\"color: #66d9ef;\">from_secret</span>: digitalocean_token \n      <span style=\"color: #66d9ef;\">HCLOUD_TOKEN</span>:\n        <span style=\"color: #66d9ef;\">from_secret</span>: hcloud_token\n      <span style=\"color: #66d9ef;\">CLOUDFLARE_API_TOKEN</span>:\n        <span style=\"color: #66d9ef;\">from_secret</span>: cloudflare_api_token\n    <span style=\"color: #66d9ef;\">when</span>:\n      <span style=\"color: #66d9ef;\">branch</span>:\n      - main\n      <span style=\"color: #66d9ef;\">event</span>:\n      - push\n      - tag\n\n  - <span style=\"color: #66d9ef;\">name</span>: slack-push\n    <span style=\"color: #66d9ef;\">image</span>: plugins/slack\n    <span style=\"color: #66d9ef;\">settings</span>:\n      <span style=\"color: #66d9ef;\">webhook</span>:\n        <span style=\"color: #66d9ef;\">from_secret</span>: drone_builds_slack_webhook \n      <span style=\"color: #66d9ef;\">channel</span>: builds\n      <span style=\"color: #66d9ef;\">template</span>: <span style=\"color: #e6db74;\">&gt;\n</span><span style=\"color: #e6db74;\">        {{#success build.status}}</span>\n          {{repo.name}} build passed.\n          <span style=\"color: #66d9ef;\">Build</span>: https://drone.noisepalace.co.uk/YetiOps/{{repo.name}}/{{build.number}}\n        {{else}}\n          {{repo.name}} build {{build.number}} failed. Please investigate. \n          <span style=\"color: #66d9ef;\">Build</span>: https://drone.noisepalace.co.uk/YetiOps/{{repo.name}}/{{build.number}}\n        {{/success}}            \n    <span style=\"color: #66d9ef;\">when</span>:\n      <span style=\"color: #66d9ef;\">status</span>:\n      - failure\n      - success\n      <span style=\"color: #66d9ef;\">branch</span>:\n      - main\n      <span style=\"color: #66d9ef;\">event</span>:\n      - push\n      - tag\n</code></pre></div><p>This pipeline is very similar to the one used for <a href=\"https://yetiops.net/posts/home-infra-overhaul-part5-drone-ansible/#full-drone-pipeline\">Ansible</a>. This uses the same Slack notification steps, the same kind of triggers/conditionals for running steps, and runs as a single Docker-based pipeline (rather than the multiple pipelines required for <a href=\"https://yetiops.net/posts/home-infra-overhaul-part6-drone-salt/#full-drone-pipeline\">Salt</a>).</p>\n<p>The bulk of the Terraform-specific steps in the pipelines use the <a href=\"https://plugins.drone.io/plugins/terraform\">Terraform Drone plugin</a>. It is possible to use the official Hashicorp Terraform Docker image, but the Drone plugin is a little more convenient. If you use the official Hashicorp Terraform Docker image, you need to define each command you want to run, whereas the plugin reduces most commands to fields.</p>\n<h3 id=\"steps---terraform-fmt\">Steps - Terraform FMT</h3>\n<div class=\"highlight\"><pre><code class=\"language-yaml\">- <span style=\"color: #66d9ef;\">name</span>: Terraform FMT PR\n  <span style=\"color: #66d9ef;\">image</span>: jmccann/drone-terraform:latest\n  <span style=\"color: #66d9ef;\">settings</span>:\n    <span style=\"color: #66d9ef;\">actions</span>:\n      - fmt\n    <span style=\"color: #66d9ef;\">fmt_options</span>:\n      <span style=\"color: #66d9ef;\">write</span>: <span style=\"color: #66d9ef;\">false</span>\n      <span style=\"color: #66d9ef;\">diff</span>: <span style=\"color: #66d9ef;\">true</span>\n      <span style=\"color: #66d9ef;\">check</span>: <span style=\"color: #66d9ef;\">true</span>\n  <span style=\"color: #66d9ef;\">when</span>:\n    <span style=\"color: #66d9ef;\">event</span>:\n    - pull_request\n</code></pre></div><p>This step is the same as running the <code>terraform fmt</code> command with the flags <code>-diff</code> and <code>-check</code>. While this isn&rsquo;t a necessary step, it does apply some consistent formatting rules to Terraform files.</p>\n<p>In the <code>diff</code> and <code>check</code> mode, it doesn&rsquo;t make any changes, but will fail if <code>terraform fmt</code> mentions any required changes (as it will exit with a <strong>non-zero</strong> exit code).</p>\n<p><img alt=\"Terraform Drone FMT step\" src=\"https://yetiops.net/img/homeinfra/drone-terraform-fmt.png\" /></p>\n<h3 id=\"steps---terraform-plan\">Steps - Terraform Plan</h3>\n<div class=\"highlight\"><pre><code class=\"language-yaml\">  - <span style=\"color: #66d9ef;\">name</span>: Terraform Plan\n    <span style=\"color: #66d9ef;\">image</span>: jmccann/drone-terraform:latest\n    <span style=\"color: #66d9ef;\">settings</span>:\n      <span style=\"color: #66d9ef;\">actions</span>:\n        - validate\n        - plan\n    <span style=\"color: #66d9ef;\">environment</span>:\n      <span style=\"color: #66d9ef;\">DIGITALOCEAN_TOKEN</span>:\n        <span style=\"color: #66d9ef;\">from_secret</span>: digitalocean_token \n      <span style=\"color: #66d9ef;\">HCLOUD_TOKEN</span>:\n        <span style=\"color: #66d9ef;\">from_secret</span>: hcloud_token\n      <span style=\"color: #66d9ef;\">CLOUDFLARE_API_TOKEN</span>:\n        <span style=\"color: #66d9ef;\">from_secret</span>: cloudflare_api_token\n    <span style=\"color: #66d9ef;\">when</span>:\n      <span style=\"color: #66d9ef;\">event</span>:\n      - pull_request\n</code></pre></div><p>This step runs <code>terraform validate</code> and <code>terraform plan</code>. Validate ensures that the Terraform configuration is correct (i.e. brackets in the correct place, variables defined correctly etc), and the Plan stage shows the changes Terraform wants to make.</p>\n<p>In this Drone expose a set of environment variables, namely my Digital Ocean API token, Hetzner HCloud API token and the Cloudflare API token. It uses the Digital Ocean and Hetzner tokens to create DNS records for the public IPs of my VPSs within Hetzner and Digital Ocean, and the Cloudflare API token is used to read/write updates to the Cloudflare API. An example of the relevant Terraform code is shown below: -</p>\n<p><strong>data.tf</strong></p>\n<div class=\"highlight\"><pre><code class=\"language-hcl\"><span style=\"color: #66d9ef;\">data</span> <span style=\"color: #e6db74;\">\"hcloud_server\" \"hcloud-vps-a\"</span> {\n  name <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"vps-shme-hcloud-a\"</span>\n}\n\n<span style=\"color: #66d9ef;\">data</span> <span style=\"color: #e6db74;\">\"hcloud_server\" \"hcloud-vps-b\"</span> {\n  name <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"vps-shme-hcloud-b\"</span>\n}\n\n<span style=\"color: #66d9ef;\">data</span> <span style=\"color: #e6db74;\">\"digitalocean_droplet\" \"vps-shme\"</span> {\n  name <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"vps-shme\"</span>\n}\n</code></pre></div><p><strong>main.tf</strong></p>\n<div class=\"highlight\"><pre><code class=\"language-hcl\"><span style=\"color: #75715e;\"># VPS Records - IPv4\n</span><span style=\"color: #75715e;\"></span>\n<span style=\"color: #66d9ef;\">resource</span> <span style=\"color: #e6db74;\">\"cloudflare_record\" \"vps-a\"</span> {\n  zone_id <span style=\"color: #f92672;\">=</span> <span style=\"color: #66d9ef;\">local</span>.<span style=\"color: #66d9ef;\">this_zone_id</span>\n  name    <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"vps-a\"</span>\n  type    <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"A\"</span>\n  proxied <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"false\"</span>\n  value   <span style=\"color: #f92672;\">=</span> <span style=\"color: #66d9ef;\">data</span>.<span style=\"color: #66d9ef;\">hcloud_server</span>.<span style=\"color: #66d9ef;\">hcloud</span><span style=\"color: #960050; background-color: #1e0010;\">-</span><span style=\"color: #66d9ef;\">vps</span><span style=\"color: #960050; background-color: #1e0010;\">-</span><span style=\"color: #66d9ef;\">a</span>.<span style=\"color: #66d9ef;\">ipv4_address</span>\n}\n\n<span style=\"color: #66d9ef;\">resource</span> <span style=\"color: #e6db74;\">\"cloudflare_record\" \"vps-b\"</span> {\n  zone_id <span style=\"color: #f92672;\">=</span> <span style=\"color: #66d9ef;\">local</span>.<span style=\"color: #66d9ef;\">this_zone_id</span>\n  name    <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"vps-b\"</span>\n  type    <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"A\"</span>\n  proxied <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"false\"</span>\n  value   <span style=\"color: #f92672;\">=</span> <span style=\"color: #66d9ef;\">data</span>.<span style=\"color: #66d9ef;\">hcloud_server</span>.<span style=\"color: #66d9ef;\">hcloud</span><span style=\"color: #960050; background-color: #1e0010;\">-</span><span style=\"color: #66d9ef;\">vps</span><span style=\"color: #960050; background-color: #1e0010;\">-</span><span style=\"color: #66d9ef;\">b</span>.<span style=\"color: #66d9ef;\">ipv4_address</span>\n}\n\n<span style=\"color: #66d9ef;\">resource</span> <span style=\"color: #e6db74;\">\"cloudflare_record\" \"vps-shme\"</span> {\n  zone_id <span style=\"color: #f92672;\">=</span> <span style=\"color: #66d9ef;\">local</span>.<span style=\"color: #66d9ef;\">this_zone_id</span>\n  name    <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"vps\"</span>\n  type    <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"A\"</span>\n  proxied <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"false\"</span>\n  value   <span style=\"color: #f92672;\">=</span> <span style=\"color: #66d9ef;\">data</span>.<span style=\"color: #66d9ef;\">digitalocean_droplet</span>.<span style=\"color: #66d9ef;\">vps</span><span style=\"color: #960050; background-color: #1e0010;\">-</span><span style=\"color: #66d9ef;\">shme</span>.<span style=\"color: #66d9ef;\">ipv4_address</span>\n}<span style=\"color: #75715e;\">\n</span><span style=\"color: #75715e;\">\n</span><span style=\"color: #75715e;\"># VPS Records - IPv6\n</span><span style=\"color: #75715e;\"></span>\n<span style=\"color: #66d9ef;\">resource</span> <span style=\"color: #e6db74;\">\"cloudflare_record\" \"vps-a-v6\"</span> {\n  zone_id <span style=\"color: #f92672;\">=</span> <span style=\"color: #66d9ef;\">local</span>.<span style=\"color: #66d9ef;\">this_zone_id</span>\n  name    <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"vps-a\"</span>\n  type    <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"AAAA\"</span>\n  proxied <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"false\"</span>\n  value   <span style=\"color: #f92672;\">=</span> <span style=\"color: #66d9ef;\">data</span>.<span style=\"color: #66d9ef;\">hcloud_server</span>.<span style=\"color: #66d9ef;\">hcloud</span><span style=\"color: #960050; background-color: #1e0010;\">-</span><span style=\"color: #66d9ef;\">vps</span><span style=\"color: #960050; background-color: #1e0010;\">-</span><span style=\"color: #66d9ef;\">a</span>.<span style=\"color: #66d9ef;\">ipv6_address</span>\n}\n\n<span style=\"color: #66d9ef;\">resource</span> <span style=\"color: #e6db74;\">\"cloudflare_record\" \"vps-b-v6\"</span> {\n  zone_id <span style=\"color: #f92672;\">=</span> <span style=\"color: #66d9ef;\">local</span>.<span style=\"color: #66d9ef;\">this_zone_id</span>\n  name    <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"vps-b\"</span>\n  type    <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"AAAA\"</span>\n  proxied <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"false\"</span>\n  value   <span style=\"color: #f92672;\">=</span> <span style=\"color: #66d9ef;\">data</span>.<span style=\"color: #66d9ef;\">hcloud_server</span>.<span style=\"color: #66d9ef;\">hcloud</span><span style=\"color: #960050; background-color: #1e0010;\">-</span><span style=\"color: #66d9ef;\">vps</span><span style=\"color: #960050; background-color: #1e0010;\">-</span><span style=\"color: #66d9ef;\">b</span>.<span style=\"color: #66d9ef;\">ipv6_address</span>\n}\n\n<span style=\"color: #66d9ef;\">resource</span> <span style=\"color: #e6db74;\">\"cloudflare_record\" \"vps-shme-v6\"</span> {\n  zone_id <span style=\"color: #f92672;\">=</span> <span style=\"color: #66d9ef;\">local</span>.<span style=\"color: #66d9ef;\">this_zone_id</span>\n  name    <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"vps\"</span>\n  type    <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"AAAA\"</span>\n  proxied <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"false\"</span>\n  value   <span style=\"color: #f92672;\">=</span> <span style=\"color: #66d9ef;\">data</span>.<span style=\"color: #66d9ef;\">digitalocean_droplet</span>.<span style=\"color: #66d9ef;\">vps</span><span style=\"color: #960050; background-color: #1e0010;\">-</span><span style=\"color: #66d9ef;\">shme</span>.<span style=\"color: #66d9ef;\">ipv6_address</span>\n}\n</code></pre></div><p>As you can see, this uses data sources to get information from Digital Ocean and Hetzner, and then applies the IPv4/IPv6 addresses as values in <code>cloudflare_record</code> resources.</p>\n<p>I also create DNS records for instances within Google Cloud Platform and Oracle Cloud Infrastructure, but with these I use <a href=\"https://www.terraform.io/language/state/remote\">Terraform Remote State</a>. The reason for this is that both of these require extra configuration and files (GPG keys for OCI, a JSON document for GCP) that add extra steps and complication to the pipeline. While this does mean that I am reliant on the Terraform Remote State being up to date (rather than a direct data source like for Digital Ocean or Hetzner), I accept this trade off to avoid the additional complexity.</p>\n<p>The relevant Terraform for the GCP and OCI records are shown below: -</p>\n<p><strong>data.tf</strong></p>\n<div class=\"highlight\"><pre><code class=\"language-hcl\"><span style=\"color: #66d9ef;\">data</span> <span style=\"color: #e6db74;\">\"terraform_remote_state\" \"oracle-ork\"</span> {\n  backend <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"consul\"</span>\n  config <span style=\"color: #f92672;\">=</span> {\n    address <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"consul.noisepalace.co.uk\"</span>\n    scheme  <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"https\"</span>\n    path    <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"terraform/oraclecloud/oci\"</span>\n  }\n}\n\n<span style=\"color: #66d9ef;\">data</span> <span style=\"color: #e6db74;\">\"terraform_remote_state\" \"yetiops-goggle\"</span> {\n  backend <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"consul\"</span>\n  config <span style=\"color: #f92672;\">=</span> {\n    address <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"consul.noisepalace.co.uk\"</span>\n    scheme  <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"https\"</span>\n    path    <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"terraform/gcp/yetiops-goggle\"</span>\n  }\n}\n</code></pre></div><p><strong>main.tf</strong></p>\n<div class=\"highlight\"><pre><code class=\"language-hcl\"><span style=\"color: #66d9ef;\">resource</span> <span style=\"color: #e6db74;\">\"cloudflare_record\" \"vps-ork-01\"</span> {\n  zone_id <span style=\"color: #f92672;\">=</span> <span style=\"color: #66d9ef;\">local</span>.<span style=\"color: #66d9ef;\">this_zone_id</span>\n  name    <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"ork-01\"</span>\n  type    <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"A\"</span>\n  proxied <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"false\"</span>\n  value   <span style=\"color: #f92672;\">=</span> <span style=\"color: #66d9ef;\">data</span>.<span style=\"color: #66d9ef;\">terraform_remote_state</span>.<span style=\"color: #66d9ef;\">oracle</span><span style=\"color: #960050; background-color: #1e0010;\">-</span><span style=\"color: #66d9ef;\">ork</span>.<span style=\"color: #66d9ef;\">outputs</span>.<span style=\"color: #66d9ef;\">instance_public_ip</span>\n}\n\n<span style=\"color: #66d9ef;\">resource</span> <span style=\"color: #e6db74;\">\"cloudflare_record\" \"vps-gog-01\"</span> {\n  zone_id <span style=\"color: #f92672;\">=</span> <span style=\"color: #66d9ef;\">local</span>.<span style=\"color: #66d9ef;\">this_zone_id</span>\n  name    <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"gog-01\"</span>\n  type    <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"A\"</span>\n  proxied <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"false\"</span>\n  value   <span style=\"color: #f92672;\">=</span> <span style=\"color: #66d9ef;\">data</span>.<span style=\"color: #66d9ef;\">terraform_remote_state</span>.<span style=\"color: #66d9ef;\">yetiops</span><span style=\"color: #960050; background-color: #1e0010;\">-</span><span style=\"color: #66d9ef;\">goggle</span>.<span style=\"color: #66d9ef;\">outputs</span>.<span style=\"color: #66d9ef;\">gog</span><span style=\"color: #960050; background-color: #1e0010;\">-</span><span style=\"color: #ae81ff;\">01</span><span style=\"color: #960050; background-color: #1e0010;\">-</span><span style=\"color: #66d9ef;\">ipv4</span>\n}\n</code></pre></div><p>These use Consul as the source for Remote State. More details on this are in <a href=\"https://yetiops.net/posts/index.xml#remote-state-backend-with-consul\">this section</a>.</p>\n<p>The Drone step will run a plan against these resources (and all other defined resources), and show what changes need to be made (if any).</p>\n<p><img alt=\"Terraform Drone Plan\" src=\"https://yetiops.net/img/homeinfra/drone-terraform-plan.png\" /></p>\n<h3 id=\"steps---terraform-apply\">Steps - Terraform Apply</h3>\n<div class=\"highlight\"><pre><code class=\"language-yaml\">  - <span style=\"color: #66d9ef;\">name</span>: Terraform Apply\n    <span style=\"color: #66d9ef;\">image</span>: jmccann/drone-terraform:latest\n    <span style=\"color: #66d9ef;\">settings</span>:\n      <span style=\"color: #66d9ef;\">actions</span>:\n        - validate\n        - plan\n        - apply\n    <span style=\"color: #66d9ef;\">environment</span>:\n      <span style=\"color: #66d9ef;\">DIGITALOCEAN_TOKEN</span>:\n        <span style=\"color: #66d9ef;\">from_secret</span>: digitalocean_token \n      <span style=\"color: #66d9ef;\">HCLOUD_TOKEN</span>:\n        <span style=\"color: #66d9ef;\">from_secret</span>: hcloud_token\n      <span style=\"color: #66d9ef;\">CLOUDFLARE_API_TOKEN</span>:\n        <span style=\"color: #66d9ef;\">from_secret</span>: cloudflare_api_token\n    <span style=\"color: #66d9ef;\">when</span>:\n      <span style=\"color: #66d9ef;\">branch</span>:\n      - main\n      <span style=\"color: #66d9ef;\">event</span>:\n      - push\n      - tag\n</code></pre></div><p>This step is almost identical to the Plan stage. The only difference is that it uses the <code>apply</code> action as well. This runs a <code>validate</code> and a <code>plan</code> action (to ensure that the code is still valid when merged with the main branch) and then applies the changes.</p>\n<p>This is all controlled via Gitea pull requests, meaning that any PRs raised will go through all the validation and planning steps. Changes are then applied without any human interaction with the Terraform CLI itself.</p>\n<p><img alt=\"Drone Terraform Apply\" src=\"https://yetiops.net/img/homeinfra/drone-terraform-apply.png\" /></p>\n<p>For most Terraform code, these are all the steps you will need.</p>\n<h2 id=\"additional-steps\">Additional steps</h2>\n<p>As noted above, most of my Terraform code doesn&rsquo;t need anything more than the steps covered already. The secrets to expose may differ (based upon the infrastructure used), otherwise everything else is the same.</p>\n<p>However for some Terraform code, I need to make files available (e.g. SSH keys, GPG keys, configuration objects). The following step covers how to do this: -</p>\n<div class=\"highlight\"><pre><code class=\"language-yaml\"><span style=\"color: #66d9ef;\">steps</span>:\n  - <span style=\"color: #66d9ef;\">name</span>: Place SSH keys - PR\n    <span style=\"color: #66d9ef;\">image</span>: alpine\n    <span style=\"color: #66d9ef;\">environment</span>: \n      <span style=\"color: #66d9ef;\">SSH_PRIV</span>:\n        <span style=\"color: #66d9ef;\">from_secret</span>: drone_ssh_priv\n      <span style=\"color: #66d9ef;\">SSH_PUB</span>:\n        <span style=\"color: #66d9ef;\">from_secret</span>: drone_ssh_pub\n      <span style=\"color: #66d9ef;\">OCI_PRIVATE_KEY</span>:\n        <span style=\"color: #66d9ef;\">from_secret</span>: oci_private_key\n    <span style=\"color: #66d9ef;\">volumes</span>:\n      - <span style=\"color: #66d9ef;\">name</span>: cache\n        <span style=\"color: #66d9ef;\">path</span>: /ssh\n    <span style=\"color: #66d9ef;\">commands</span>:\n      - echo -e <span style=\"color: #e6db74;\">\"$SSH_PRIV\"</span> | tee /ssh/id_rsa\n      - echo -e <span style=\"color: #e6db74;\">\"$SSH_PUB\"</span> | tee /ssh/id_rsa.pub\n      - echo -e <span style=\"color: #e6db74;\">\"$OCI_PRIVATE_KEY\"</span> | tee /ssh/oci_private_key.pem\n      - chmod <span style=\"color: #ae81ff;\">644</span> /ssh/*\n    <span style=\"color: #66d9ef;\">when</span>:\n      <span style=\"color: #66d9ef;\">event</span>:\n      - pull_request\n\n[...]\n\n<span style=\"color: #66d9ef;\">volumes</span>:\n  - <span style=\"color: #66d9ef;\">name</span>: cache\n    <span style=\"color: #66d9ef;\">temp</span>: {}\n</code></pre></div><p>This step takes the contents of some secrets, and then places them into files. In the above, these are my Drone SSH keys, and also the OCI GPG private key. These are placed in a <a href=\"https://docs.drone.io/pipeline/docker/syntax/volumes/\">volume</a>. A volume is a shared directory/path that can be made available to other steps within a pipeline.</p>\n<p>For Oracle Cloud Infrastructure, the GPG key is required to authenticate against the API, whereas the SSH keys (specifically the public key) are used in the <code>cloud-init</code>/user data to bootstrap the instances. By default they do not allow password-based authentication to login via SSH, so they need some form of SSH key to allow you to login.</p>\n<p>An example of using this is below: -</p>\n<div class=\"highlight\"><pre><code class=\"language-yaml\">- <span style=\"color: #66d9ef;\">name</span>: Terraform Plan\n  <span style=\"color: #66d9ef;\">image</span>: jmccann/drone-terraform:latest\n  <span style=\"color: #66d9ef;\">settings</span>:\n    <span style=\"color: #66d9ef;\">actions</span>:\n      - validate\n      - plan\n    <span style=\"color: #66d9ef;\">vars</span>:\n      <span style=\"color: #66d9ef;\">ssh_public_key</span>: <span style=\"color: #e6db74;\">\"/ssh/id_rsa.pub\"</span>\n  <span style=\"color: #66d9ef;\">environment</span>:\n      <span style=\"color: #66d9ef;\">TF_VAR_tenancy_ocid</span>: \n        <span style=\"color: #66d9ef;\">from_secret</span>: oci_tenancy_ocid\n      <span style=\"color: #66d9ef;\">TF_VAR_user_ocid</span>: \n        <span style=\"color: #66d9ef;\">from_secret</span>: oci_user_ocid\n      <span style=\"color: #66d9ef;\">TF_VAR_compartment_ocid</span>: \n        <span style=\"color: #66d9ef;\">from_secret</span>: oci_compartment_ocid\n      <span style=\"color: #66d9ef;\">TF_VAR_fingerprint</span>: \n        <span style=\"color: #66d9ef;\">from_secret</span>: oci_fingerprint\n      <span style=\"color: #66d9ef;\">TF_VAR_private_key_path</span>: <span style=\"color: #e6db74;\">\"/ssh/oci_private_key.pem\"</span>\n  <span style=\"color: #66d9ef;\">volumes</span>:\n    - <span style=\"color: #66d9ef;\">name</span>: cache\n      <span style=\"color: #66d9ef;\">path</span>: /ssh\n  <span style=\"color: #66d9ef;\">when</span>:\n    <span style=\"color: #66d9ef;\">event</span>:\n    - pull_request\n</code></pre></div><p>As you can see, the SSH key path is supplied as a variable. We also supply the OCI private key path as a <code>TF_VAR</code> environment variable. The most important part here is the <code>volumes</code> section, as without this the keys created in the previous step would not be available.</p>\n<p>Volumes could be used in many different ways (e.g. cached dependencies, creating build artifacts and pushing them). In this case it make files available between steps, allowing authentication to certain providers.</p>\n<p>The same step is used in my Lab Terraform when creating Proxmox virtual machines. This is because <a href=\"https://cloudinit.readthedocs.io/en/latest/\">cloud-init</a> in Proxmox requires adding files directly to the Proxmox host&rsquo;s file system (rather than being stored in an API). In my case, I use SSH/SCP within Terraform to transfer the files to the Proxmox host(s), using the Drone SSH keys for authentication.</p>\n<h2 id=\"remote-state-backend-with-consul\">Remote State Backend with Consul</h2>\n<p>While not specific to Drone, using some form of Remote State Backend within Terraform allows the following: -</p>\n<ul>\n<li>A central place to source state between Drone jobs and local Terraform testing</li>\n<li>Using Remote State as a data source in Terraform code</li>\n<li>State Locking - avoids multiple jobs/people applying changes at the same time (and potentially breaking each others changes)\n<ul>\n<li>Not all backends support this, and some require a separate backend for locking (e.g. AWS S3 for state storage, and DynamoDB for state locking)</li>\n</ul>\n</li>\n<li>Most importantly, it means Drone does not need to write to a <code>terraform.tfstate</code> file in the repository and push it back to the repository after changes are made</li>\n</ul>\n<p>The last point is especially pertinent, as without this the following steps would be required: -</p>\n<ul>\n<li>Create a cache/state volume in the pipeline</li>\n<li>Make the Terraform Drone plugin place state files in the volume</li>\n<li>Run a step after each Terraform Apply stage to add, commit and push changes back to the code repository\n<ul>\n<li>This also means giving Drone access to push (and not just pull/clone rights) access to the repository</li>\n</ul>\n</li>\n</ul>\n<p>Instead, using a Remote State Backend means none of these extra steps are required. Many different options for Backends are available (e.g. AWS S3, Azure Blob Storage, etcd, Postgres), but I chose Consul as I already run Consul for <a href=\"https://yetiops.net/posts/prometheus-consul-node_exporter/\">Prometheus Service Discovery</a>.</p>\n<p>Setting up this backend looks like the below: -</p>\n<div class=\"highlight\"><pre><code class=\"language-hcl\"><span style=\"color: #66d9ef;\">terraform</span> {\n  <span style=\"color: #66d9ef;\">backend</span> <span style=\"color: #e6db74;\">\"consul\"</span> {\n    address <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"consul.noisepalace.co.uk\"</span>\n    scheme  <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"https\"</span>\n    path    <span style=\"color: #f92672;\">=</span> <span style=\"color: #e6db74;\">\"terraform/oraclecloud/oci\"</span>\n  }\n}\n</code></pre></div><p>The path structure is arbitrary. I decided to use a <code>$APPLICATION/$PROVIDER/$PURPOSE</code> structure, but you could name each one after characters in Star Wars or Transformers if you wished! This stores state in the Consul KV store, as shown below: -</p>\n<p><img alt=\"Drone Terraform Consul KV store\" src=\"https://yetiops.net/img/homeinfra/drone-terraform-consul.png\" /></p>\n<h2 id=\"demonstration\">Demonstration</h2>\n<p>The below video is a demonstration of making a change to the Terraform repository and committing it. In this step I am going to create a DNS record in Cloudflare: -</p>\n\n<div style=\"padding-bottom: 56.25%; height: 0; overflow: hidden;\">\n  \n</div>\n\n<h2 id=\"summary\">Summary</h2>\n<p>In this, we have seen how to can make use of Drone to apply Terraform configuration.</p>\n<p>This has also shown how we can make use of Consul to provide a consistent Backend for Terraform, reducing the need for additional steps to manage Terraform state files with Drone.</p>\n<p>In the next post, I&rsquo;m going to cover using Drone to build Go releases.</p>"
        }
      ]
    }
  },
  {
    "blog": {
      "title": "Adventurist Blog",
      "by": "Tom Jones",
      "url": "https://adventurist.me/page/1",
      "feed": "https://adventurist.me/feed.xml",
      "description": "FreeBSD, electronics engineering, hacker camps and fests. Using serial\nconsole for out-of-band server management (whitebox builds)",
      "section": "Homelab"
    },
    "entry": {
      "title": "Some ideas I picked from the electromagnetic fields",
      "title_detail": {
        "type": "text/plain",
        "language": null,
        "base": "https://adventurist.me/feed.xml",
        "value": "Some ideas I picked from the electromagnetic fields"
      },
      "links": [
        {
          "rel": "alternate",
          "type": "text/html",
          "href": "https://adventurist.me/posts/00314"
        }
      ],
      "link": "https://adventurist.me/posts/00314",
      "summary": "<p>\n I made it to and from the\n <a href=\"https://www.emfcamp.org/\">\n  Electromagnetic Field\n </a>\n . It was quite an\nexperience to return to a hacker large event after so many years.\n</p>\n<p>\n A real review of the event will appear in the FreeBSD Journal this summer and I\nrambled a little at the end of BSDNow 459.\n</p>\n<p>\n I don't think I could have articulated before hand exactly how much I missed\nthe massive influx of energy being around people doing things gives you. To be\nhonest, it probably explains why I spent so many years running things myself.\nThe sheer magic of other people doing things seems to relax my brain and lets\nit fill up to the brim with new ideas.\n</p>\n<p>\n In the vein of \"“Make 50 of Something\" (\n <a href=\"http://vihart.com/fifty-fizzbuzzes/\">\n  which I learned about from Vi Hart\nmaking 50 fizzbuzzers\n </a>\n ), I thought it was finally time to write\ndown the ideas in the aftermath of the event and have a record of them.\n</p>\n<p>\n 50 is a lot of things, but I don't think this list actually captures everything\nthat popped into my head. Much of this list is ideas I have been having over\nthe last decade of going to hacker events, but unexecuted ideas can still be\ngood.\n</p>\n<p>\n <a href=\"https://adventurist.me/images/emfcamp2022-notebook.jpg\">\n  <img src=\"https://adventurist.me/imagessmall/emfcamp2022-notebook.jpg\" />\n </a>\n</p>\n<ol>\n <li>\n  ID Badge\n </li>\n <li>\n  Buckfast FM\n </li>\n <li>\n  Buckfast FM badge\n </li>\n <li>\n  BBS serial network\n </li>\n <li>\n  Government style news distribution network with backdoor leading to a bbs\n </li>\n <li>\n  TIC-80 simulator for the badge\n </li>\n <li>\n  shit camera ID printer\n </li>\n <li>\n  badge tamogotchi thing\n </li>\n <li>\n  \"Cyberman\" led outfit\n </li>\n <li>\n  kit dome of trees\n </li>\n <li>\n  web bbs\n </li>\n <li>\n  retro bbs\n </li>\n <li>\n  web bbs serial links to esp consoles\n </li>\n <li>\n  demo display on a dome\n </li>\n <li>\n  longest serial transmission competition\n </li>\n <li>\n  internet of buckets\n </li>\n <li>\n  network of floaty led things in lake\n </li>\n <li>\n  posters!\n </li>\n <li>\n  stickers!\n </li>\n <li>\n  sticker: The Internet is Bullshit\n </li>\n <li>\n  sticker: Computers are a fuck\n </li>\n <li>\n  sticker: \"I'll drive if you feed me cheese\"\n </li>\n <li>\n  sticker: a big pile of tofu\n </li>\n <li>\n  talk: 10 years of Scotland as performance art\n </li>\n <li>\n  Old Unix BBS\n </li>\n <li>\n  something targetting the badge\n </li>\n <li>\n  \"set\" mainframe backdrop\n </li>\n <li>\n  weather reports\n </li>\n <li>\n  Scotcon TV\n </li>\n <li>\n  An actual good computer book shop\n </li>\n <li>\n  BSD meet up\n </li>\n <li>\n  hacker breakfast\n </li>\n <li>\n  'drugwars' with real location integration\n </li>\n <li>\n  CTF coffee puzzle\n </li>\n <li>\n  folding bikes!\n </li>\n <li>\n  portraits with a camera\n </li>\n <li>\n  portraits with a paint brush\n </li>\n <li>\n  computer church\n </li>\n <li>\n  beacon hunt\n </li>\n <li>\n  demo party\n </li>\n <li>\n  paiting party\n </li>\n <li>\n  talk: Learning a place by drawing its buildings\n </li>\n <li>\n  SBC colo\n </li>\n <li>\n  deerocracy\n </li>\n <li>\n  tshirts\n </li>\n <li>\n  sticker: No one hsa found a good use for a networked computer\n </li>\n <li>\n  sketching workshop\n </li>\n <li>\n  thicknet, network\n </li>\n <li>\n  industrial quantities of mauve\n </li>\n <li>\n  $5 electronics macro photo workshop\n </li>\n <li>\n  silent journalling with [tj]\n </li>\n</ol>\n<p>\n Yes, It is super vague. There are thousands of words of explanation behind some\nof these. That you will have to invent for yourself.\n</p>\n<p>\n Steal what you want, I won't remember publishing this and will love seeing your\nimplementation.\n</p>",
      "summary_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://adventurist.me/feed.xml",
        "value": "<p>\n I made it to and from the\n <a href=\"https://www.emfcamp.org/\">\n  Electromagnetic Field\n </a>\n . It was quite an\nexperience to return to a hacker large event after so many years.\n</p>\n<p>\n A real review of the event will appear in the FreeBSD Journal this summer and I\nrambled a little at the end of BSDNow 459.\n</p>\n<p>\n I don't think I could have articulated before hand exactly how much I missed\nthe massive influx of energy being around people doing things gives you. To be\nhonest, it probably explains why I spent so many years running things myself.\nThe sheer magic of other people doing things seems to relax my brain and lets\nit fill up to the brim with new ideas.\n</p>\n<p>\n In the vein of \"“Make 50 of Something\" (\n <a href=\"http://vihart.com/fifty-fizzbuzzes/\">\n  which I learned about from Vi Hart\nmaking 50 fizzbuzzers\n </a>\n ), I thought it was finally time to write\ndown the ideas in the aftermath of the event and have a record of them.\n</p>\n<p>\n 50 is a lot of things, but I don't think this list actually captures everything\nthat popped into my head. Much of this list is ideas I have been having over\nthe last decade of going to hacker events, but unexecuted ideas can still be\ngood.\n</p>\n<p>\n <a href=\"https://adventurist.me/images/emfcamp2022-notebook.jpg\">\n  <img src=\"https://adventurist.me/imagessmall/emfcamp2022-notebook.jpg\" />\n </a>\n</p>\n<ol>\n <li>\n  ID Badge\n </li>\n <li>\n  Buckfast FM\n </li>\n <li>\n  Buckfast FM badge\n </li>\n <li>\n  BBS serial network\n </li>\n <li>\n  Government style news distribution network with backdoor leading to a bbs\n </li>\n <li>\n  TIC-80 simulator for the badge\n </li>\n <li>\n  shit camera ID printer\n </li>\n <li>\n  badge tamogotchi thing\n </li>\n <li>\n  \"Cyberman\" led outfit\n </li>\n <li>\n  kit dome of trees\n </li>\n <li>\n  web bbs\n </li>\n <li>\n  retro bbs\n </li>\n <li>\n  web bbs serial links to esp consoles\n </li>\n <li>\n  demo display on a dome\n </li>\n <li>\n  longest serial transmission competition\n </li>\n <li>\n  internet of buckets\n </li>\n <li>\n  network of floaty led things in lake\n </li>\n <li>\n  posters!\n </li>\n <li>\n  stickers!\n </li>\n <li>\n  sticker: The Internet is Bullshit\n </li>\n <li>\n  sticker: Computers are a fuck\n </li>\n <li>\n  sticker: \"I'll drive if you feed me cheese\"\n </li>\n <li>\n  sticker: a big pile of tofu\n </li>\n <li>\n  talk: 10 years of Scotland as performance art\n </li>\n <li>\n  Old Unix BBS\n </li>\n <li>\n  something targetting the badge\n </li>\n <li>\n  \"set\" mainframe backdrop\n </li>\n <li>\n  weather reports\n </li>\n <li>\n  Scotcon TV\n </li>\n <li>\n  An actual good computer book shop\n </li>\n <li>\n  BSD meet up\n </li>\n <li>\n  hacker breakfast\n </li>\n <li>\n  'drugwars' with real location integration\n </li>\n <li>\n  CTF coffee puzzle\n </li>\n <li>\n  folding bikes!\n </li>\n <li>\n  portraits with a camera\n </li>\n <li>\n  portraits with a paint brush\n </li>\n <li>\n  computer church\n </li>\n <li>\n  beacon hunt\n </li>\n <li>\n  demo party\n </li>\n <li>\n  paiting party\n </li>\n <li>\n  talk: Learning a place by drawing its buildings\n </li>\n <li>\n  SBC colo\n </li>\n <li>\n  deerocracy\n </li>\n <li>\n  tshirts\n </li>\n <li>\n  sticker: No one hsa found a good use for a networked computer\n </li>\n <li>\n  sketching workshop\n </li>\n <li>\n  thicknet, network\n </li>\n <li>\n  industrial quantities of mauve\n </li>\n <li>\n  $5 electronics macro photo workshop\n </li>\n <li>\n  silent journalling with [tj]\n </li>\n</ol>\n<p>\n Yes, It is super vague. There are thousands of words of explanation behind some\nof these. That you will have to invent for yourself.\n</p>\n<p>\n Steal what you want, I won't remember publishing this and will love seeing your\nimplementation.\n</p>"
      },
      "id": "https://adventurist.me/posts/00314",
      "guidislink": false,
      "published": "Thu, 09 Jun 2022 00:00:00 +0000",
      "published_parsed": [
        2022,
        6,
        9,
        0,
        0,
        0,
        3,
        160,
        0
      ]
    }
  },
  {
    "blog": {
      "title": "Solène Rapenne",
      "url": "https://dataswamp.org/~solene/",
      "feed": "https://dataswamp.org/~solene/rss.xml",
      "description": "OpenBSD developer solene@. Also some posts on NixOS, reproducible builds,\ngame engines...",
      "section": "OpenBSD"
    },
    "entry": {
      "title": "How I would sell OpenBSD as a salesperson",
      "title_detail": {
        "type": "text/plain",
        "language": null,
        "base": "https://dataswamp.org/~solene/rss.xml",
        "value": "How I would sell OpenBSD as a salesperson"
      },
      "summary": "<pre># Introduction\n\nLet's have fun today. I always wondered how I would sell OpenBSD licences to customers if I was a salesperson.\n\nThis text is pure fiction and fun.  The OpenBSD project is free of charge and under a libre software licence.\n\n=> https://www.openbsd.org/ Website of The OpenBSD Project\n\n# Killer features\n\nWhen selling a product, it's always important to talk about the killer features, what makes a product a good one and why it would solve the customer problems.\n\n## Learn once\n\nIf you were to use OpenBSD, you certainly would have a slight learning curve, but then the system is so stable over time that the acquired knowledge would be reused from release to release.  Most base tools in OpenBSD are evolving while keeping compatibility with regard to how you administrate them.\n\nCan we say so for the Linux ecosystem which changes its sound and init system every 5 years?  Can we say so for Windows which revisites most of its interface at every new release?\n\nLearning OpenBSD is a good investment that will save you time later, so you can use your computer without frustration.\n\n# Secure by default\n\nOpenBSD comes with strong security defaults, you don't have to tweak anything, the development did it for you!  You can confidently use your OpenBSD computer, and you will be safe from all the bad actors targetting mainstream systems.\n\nEven more, OpenBSD takes care of your privacy and doesn't run any telemetry, doesn't record what you type, doesn't upload any data.  The team took care of disabling microphone and webcam by faking their input stream with empty data until you explicitely allow one or the other to record audio/video.\n\n## Community driven\n\nBecause you certainly don't want to suffer from big IT actors decisions affecting your favorite OS, OpenBSD is community driven and take care of not being infecting by big tech agendas.  The system is made for the developers, by the developers, and you can use it as a customer!  Doesn't this feel great to know the authors use their own software?\n\n## No obsolescence / eco-friendly\n\nRest assured that your brand-new computer will still be able to run OpenBSD in 20 years.  The team is taking a special care of keeping compatibility for older hardware until it's too hard to find spare components.  It's almost a lifetime of system upgrades for your hardware!  Are the competitors still supporting Sparc64 and 32-bit PowerPC for a modern computer experience? I don't think so!  The installer is still available for floppy disk, I think this says it all!\n\n## Very low maintenance\n\nAs OpenBSD is designed to be highly resilient and so simple that it can't break, be sure you won't waste time fixing problems on your system.  With a FREE major update every six months and regular security updates, your system keeps being bulletproof with no more maintenance from you than running the update; more experienced users can even automate this using the built-in and free of charge task scheduler.\n\n## Licencing\n\nOpenBSD is perfect for people who want to become rich!  Think about this, you love your OpenBSD system, and you want to make a product out of it? Perfect!  The licencing allows you to make changes to OpenBSD, redistribute it, charge people for it, and you don't even have to show a single line of your product source code to your customers.  This is a perfect licencing for people who would like to build proprietary devices based on OpenBSD, a rock solid system.\n\nAgainst all industry standards, in case you would improve your OpenBSD, you are allowed to make changes to it without losing the warrantly coming with the licensing.\n\n## Technical support\n\nIf you ever need help, you will have direct access for free to the mailing lists of the project, allowing you to exchange directly with the people developping OpenBSD.\n\n## Documentation\n\nDon't be afraid to jump into OpenBSD from another operating system, we took care of documenting everything you will need.  We are very proud of our documentation, and you can even use your OpenBSD system without Internet connectivity and still being able to read the top-notch documentation to configure your system to your needs.  No more need to use a search engine to find old blog posts with outdated and inaccurate advice.\n\n## Fast to install\n\nYou can install OpenBSD very fast by just answering to a few questions about the setup.  However, you should never need to install OpenBSD more than once so most people will never notice about it.  Experimented users can even automate installation to spread OpenBSD to their family without effort.\n\n# Behind the scenes\n\nOf course, as a good salesperson, I would have to avoid some topics because this would make the customer lose interest into OpenBSD.  However, they could be turned as a positive fact:\n\n* OpenBSD doesn't support Bluetooth, but you can see this as a security feature.  The code was entirely removed from the kernel because Bluetooth is full of traps and could easily leak data over the air.  You certainly don't want that?\n* You may think OpenBSD slow performance could hit your productivity, but on the contrary it's a feature that will prevent you from losing focus on what you are currently working on.  Think about the Tortoise and the Hare!\n* Maybe your favorite software is proprietary and will not be provided for OpenBSD, then your provider is entirely at fault because they don't want to make their software compliant with OpenBSD strong quality requirements to provide a working binary\n* You may have heard some hardware won't run on OpenBSD, this can happen for very niche hardware.  The OpenBSD team is working hard to give you the best experience on a selection of affordable hardware with premium support.\n\n# Conclusion\n\nI hope you understood this was a fiction; OpenBSD is free and anyone can use it.  It has strength and weaknesses, as always it's important to use the right tool for the right job.  The team would be happy to receive contributions from you if you want to improve OpenBSD, by doing so you could help me improve my speech as a saleperson.\n\n=> static/take-my-money.png \"Take my money\" meme\n</pre>",
      "summary_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://dataswamp.org/~solene/rss.xml",
        "value": "<pre># Introduction\n\nLet's have fun today. I always wondered how I would sell OpenBSD licences to customers if I was a salesperson.\n\nThis text is pure fiction and fun.  The OpenBSD project is free of charge and under a libre software licence.\n\n=> https://www.openbsd.org/ Website of The OpenBSD Project\n\n# Killer features\n\nWhen selling a product, it's always important to talk about the killer features, what makes a product a good one and why it would solve the customer problems.\n\n## Learn once\n\nIf you were to use OpenBSD, you certainly would have a slight learning curve, but then the system is so stable over time that the acquired knowledge would be reused from release to release.  Most base tools in OpenBSD are evolving while keeping compatibility with regard to how you administrate them.\n\nCan we say so for the Linux ecosystem which changes its sound and init system every 5 years?  Can we say so for Windows which revisites most of its interface at every new release?\n\nLearning OpenBSD is a good investment that will save you time later, so you can use your computer without frustration.\n\n# Secure by default\n\nOpenBSD comes with strong security defaults, you don't have to tweak anything, the development did it for you!  You can confidently use your OpenBSD computer, and you will be safe from all the bad actors targetting mainstream systems.\n\nEven more, OpenBSD takes care of your privacy and doesn't run any telemetry, doesn't record what you type, doesn't upload any data.  The team took care of disabling microphone and webcam by faking their input stream with empty data until you explicitely allow one or the other to record audio/video.\n\n## Community driven\n\nBecause you certainly don't want to suffer from big IT actors decisions affecting your favorite OS, OpenBSD is community driven and take care of not being infecting by big tech agendas.  The system is made for the developers, by the developers, and you can use it as a customer!  Doesn't this feel great to know the authors use their own software?\n\n## No obsolescence / eco-friendly\n\nRest assured that your brand-new computer will still be able to run OpenBSD in 20 years.  The team is taking a special care of keeping compatibility for older hardware until it's too hard to find spare components.  It's almost a lifetime of system upgrades for your hardware!  Are the competitors still supporting Sparc64 and 32-bit PowerPC for a modern computer experience? I don't think so!  The installer is still available for floppy disk, I think this says it all!\n\n## Very low maintenance\n\nAs OpenBSD is designed to be highly resilient and so simple that it can't break, be sure you won't waste time fixing problems on your system.  With a FREE major update every six months and regular security updates, your system keeps being bulletproof with no more maintenance from you than running the update; more experienced users can even automate this using the built-in and free of charge task scheduler.\n\n## Licencing\n\nOpenBSD is perfect for people who want to become rich!  Think about this, you love your OpenBSD system, and you want to make a product out of it? Perfect!  The licencing allows you to make changes to OpenBSD, redistribute it, charge people for it, and you don't even have to show a single line of your product source code to your customers.  This is a perfect licencing for people who would like to build proprietary devices based on OpenBSD, a rock solid system.\n\nAgainst all industry standards, in case you would improve your OpenBSD, you are allowed to make changes to it without losing the warrantly coming with the licensing.\n\n## Technical support\n\nIf you ever need help, you will have direct access for free to the mailing lists of the project, allowing you to exchange directly with the people developping OpenBSD.\n\n## Documentation\n\nDon't be afraid to jump into OpenBSD from another operating system, we took care of documenting everything you will need.  We are very proud of our documentation, and you can even use your OpenBSD system without Internet connectivity and still being able to read the top-notch documentation to configure your system to your needs.  No more need to use a search engine to find old blog posts with outdated and inaccurate advice.\n\n## Fast to install\n\nYou can install OpenBSD very fast by just answering to a few questions about the setup.  However, you should never need to install OpenBSD more than once so most people will never notice about it.  Experimented users can even automate installation to spread OpenBSD to their family without effort.\n\n# Behind the scenes\n\nOf course, as a good salesperson, I would have to avoid some topics because this would make the customer lose interest into OpenBSD.  However, they could be turned as a positive fact:\n\n* OpenBSD doesn't support Bluetooth, but you can see this as a security feature.  The code was entirely removed from the kernel because Bluetooth is full of traps and could easily leak data over the air.  You certainly don't want that?\n* You may think OpenBSD slow performance could hit your productivity, but on the contrary it's a feature that will prevent you from losing focus on what you are currently working on.  Think about the Tortoise and the Hare!\n* Maybe your favorite software is proprietary and will not be provided for OpenBSD, then your provider is entirely at fault because they don't want to make their software compliant with OpenBSD strong quality requirements to provide a working binary\n* You may have heard some hardware won't run on OpenBSD, this can happen for very niche hardware.  The OpenBSD team is working hard to give you the best experience on a selection of affordable hardware with premium support.\n\n# Conclusion\n\nI hope you understood this was a fiction; OpenBSD is free and anyone can use it.  It has strength and weaknesses, as always it's important to use the right tool for the right job.  The team would be happy to receive contributions from you if you want to improve OpenBSD, by doing so you could help me improve my speech as a saleperson.\n\n=> static/take-my-money.png \"Take my money\" meme\n</pre>"
      },
      "id": "https://dataswamp.org/~solene/2022-06-22-openbsd-selling-arguments.html",
      "guidislink": true,
      "link": "https://dataswamp.org/~solene/2022-06-22-openbsd-selling-arguments.html",
      "links": [
        {
          "rel": "alternate",
          "type": "text/html",
          "href": "https://dataswamp.org/~solene/2022-06-22-openbsd-selling-arguments.html"
        }
      ],
      "published": "Wed, 22 Jun 2022 00:00:00 GMT",
      "published_parsed": [
        2022,
        6,
        22,
        0,
        0,
        0,
        2,
        173,
        0
      ]
    }
  },
  {
    "blog": {
      "title": "Doing stupid things (with packets and OpenBSD)",
      "url": "https://doing-stupid-things.as59645.net/",
      "feed": "https://doing-stupid-things.as59645.net/feed.xml",
      "description": "Sometimes, it is fun to do stupid things. This blog documents things done on\nAS59645 to run a (mostly) OpenBSD only, self-hosted AS \"the old way\". Most\ncertainly NSFP (Not Safe for Production) and never reasonable.",
      "section": "OpenBSD"
    },
    "entry": {
      "title": "13 Propositions on an Internet for a Burning World (Part 4)",
      "title_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://doing-stupid-things.as59645.net/feed.xml",
        "value": "13 Propositions on an Internet for a Burning World (Part 4)"
      },
      "links": [
        {
          "href": "https://doing-stupid-things.as59645.net/burning/world/resillience/2022/06/30/propositions-part-4.html",
          "rel": "alternate",
          "type": "text/html",
          "title": "13 Propositions on an Internet for a Burning World (Part 4)"
        }
      ],
      "link": "https://doing-stupid-things.as59645.net/burning/world/resillience/2022/06/30/propositions-part-4.html",
      "published": "2022-06-30T11:33:12+02:00",
      "published_parsed": [
        2022,
        6,
        30,
        9,
        33,
        12,
        3,
        181,
        0
      ],
      "updated": "2022-06-30T11:33:12+02:00",
      "updated_parsed": [
        2022,
        6,
        30,
        9,
        33,
        12,
        3,
        181,
        0
      ],
      "id": "https://doing-stupid-things.as59645.net/burning/world/resillience/2022/06/30/propositions-part-4",
      "guidislink": false,
      "content": [
        {
          "type": "text/html",
          "language": null,
          "base": "https://doing-stupid-things.as59645.net/burning/world/resillience/2022/06/30/propositions-part-4.html",
          "value": "<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>OpenBSD version: Not relevant here...\nArch:            ?\nNSFP:            Well...\n</code></pre></div></div>\n\n<p>The idea of (eternal) <em>growth</em> and profitability are a cornerstone of our society (despite <a href=\"http://web.archive.org/web/20220603214700/https://www.clubofrome.org/ltg50/\">not being a thing</a>).\nEspecially in the IT world, the idea of ‘do start-up, be rich’ is the <em>ultimate</em> dream and fullfilment of an overcome deus-ex machina lifting one into the ranks of our new world’s aristocracy.\nSo, at least the fairy tale we tend to tell ourselves.</p>\n\n<p>There is another whole argument to be had how having rich ancestors is <em>really</em> beneficial in this process;\nHowever, this article is about another aspect of creating a <em>large</em> and <em>profitable</em> system that <em>scales</em>.</p>\n\n<p>We claim, that:</p>\n\n<h1 id=\"proposition-4\">Proposition 4</h1>\n<p><em>“Centralization and profit are inherently incompatible with care for infrastructures.”</em></p>\n\n<p>In our globalized economy, the idea is that people and especially corporations, naturally have the goal of maximizing their profits and gains.\nWe do not want to judge this perspective here.\nFor our proposition it is irrelevant whether this is a good or a bad thing. (spoiler: <em>We</em> think it is a bad thing… )</p>\n\n<p>But why are centralization and profit incompatible with care?<br />\nWell, it starts with centralization.<br />\nCentralizing infrastructure also means centralizing control.<br />\nCentralizing control means <a href=\"https://en.wikipedia.org/wiki/Platform_capitalism\">centralizing power</a>.<br />\nCentralizing power means that, all of a sudden, entities gain <em>the ability</em> to go through with decissions simply for their own benefit, disregarding needs of others.<br />\nThis, quiet obviously, can be come ‘suboptimal’ if we are talking about infrastructure others <em>depend</em> upon.</p>\n\n<p>Next, we have the profit component.\nThe thing with <a href=\"https://arxiv.org/abs/2104.09462\">the cloud</a> and digital systems in general is that <em>scaling</em> needs that <a href=\"https://everythingsysadmin.com/books.html\">cattle-style approach</a>.\nYou reduce cost with automation and consistency.\nIn running your system and in supporting your users, in deciding which services to run (or discontinue), in deciding which integrations with external services you allow, and what freedoms your users enjoy in <em>how</em> they can use and interact with your platform.</p>\n\n<p>Caring, however, does not only mean caring for the needs of the majority.\nStill, caring for everyone in their uniqueness means that a lot of beautiful leaves in the end make a heap whose weigth can make you collapse.\nCaring for users’ needs is simply costly.</p>\n\n<p>Similarly, caring for infrastructures entails you doing things that have <em>no</em> measurable impact on users.\nDoing maintenance and ensuring thing <em>keep running</em> does not constitute the holy grail of <em>‘innovation’</em> or the mantra of <em>‘moving fast and breaking things’</em>.\nIt simply ensures things stay the (working) same.<br />\nReducing that care will, ultimately, degrade your service.<br />\nSlowly.<br />\nUsers may not notice it at first.<br />\nUsers may never notice it at all.<br />\nAnd ultimately the infrastructure falling apart is a slow progress, much like a frog finding themselves in a pot of slowly boiling water.\nSo, if you want to (quickly, i.e., within a 5-10y timespan) increase profits… why should you care about the infrastructure, instead of banking resources on moving fast, doing (for engineers certainly also) more fun things, <em>‘innovating’</em>, and breaking things?</p>\n\n<p>Hence, in a profit-oriented world, it can become fiscally untenable to maintain sufficient care for a service/infrastructure and its users.\nTo conserve their bottom line, corporations will discontinue services users rely on, or apply support mechanics that can not provide the care <em>some</em> users may need, or neglect maintenance of existing systems.\nWhile for a <em>profit driven</em> corporation, this is a rational decision, it will mean a significant loss for users, no matter how mundane (<a href=\"https://www.androidcentral.com/nest-secure-being-discontinued-and-people-are-rightfully-losing-their-minds\">your fancy home automation no longer working</a>), unusual (<a href=\"https://www.dailymail.co.uk/sciencetech/article-10774519/Fictosexual-man-married-HOLOGRAM-no-longer-speak-wife-software-glitch.html\">you having found love with a digital entity</a>), or obviously essential (<a href=\"https://spectrum.ieee.org/bionic-eye-obsolete\">visual implants becoming obsolete</a>) a service is.\nFor you, profit does not matter, if your world—whatever that is for you—suddenly goes dark again.\nAnd (depending on the service) if the service ultimately breaks, it will not only be a loss for some, but for society at large.</p>\n\n<p>So, in summary:</p>\n\n<p>Centralization means power.<br />\nCare reduces profits in digital infrastructure.<br />\nPower allows you to ignore care to increase profits.<br />\nA rational actor will do so.<br />\nA caring one will not.<br />\nCorporations are rational.</p>"
        }
      ],
      "summary": "OpenBSD version: Not relevant here... Arch: ? NSFP: Well...",
      "authors": [
        {
          "name": ""
        }
      ],
      "author_detail": {
        "name": ""
      },
      "author": "",
      "tags": [
        {
          "term": "burning",
          "scheme": null,
          "label": null
        },
        {
          "term": "world",
          "scheme": null,
          "label": null
        },
        {
          "term": "resillience",
          "scheme": null,
          "label": null
        }
      ],
      "summary_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://doing-stupid-things.as59645.net/feed.xml",
        "value": "OpenBSD version: Not relevant here... Arch: ? NSFP: Well..."
      }
    }
  },
  {
    "blog": {
      "title": "Data, tech, and sometimes Nutella",
      "by": "Vicky Boykis",
      "url": "https://vickiboykis.com",
      "feed": "https://vickiboykis.com/index.xml",
      "description": "Some social insights into IT industry, articles about privacy in modern\nworld. Lots of links to Hacker News, Reddit trends, some posts about\nFacebook, some posts about Python.",
      "section": "Other IT related topics"
    },
    "entry": {
      "title": "On owning a software problem",
      "title_detail": {
        "type": "text/plain",
        "language": null,
        "base": "https://vickiboykis.com/index.xml",
        "value": "On owning a software problem"
      },
      "links": [
        {
          "rel": "alternate",
          "type": "text/html",
          "href": "https://veekaybee.github.io/2022/02/21/on-owning-a-software-problem/"
        }
      ],
      "link": "https://veekaybee.github.io/2022/02/21/on-owning-a-software-problem/",
      "published": "Mon, 21 Feb 2022 00:00:00 +0000",
      "published_parsed": [
        2022,
        2,
        21,
        0,
        0,
        0,
        0,
        52,
        0
      ],
      "id": "https://veekaybee.github.io/2022/02/21/on-owning-a-software-problem/",
      "guidislink": false,
      "summary": "This weekend, I saw a tweet that really resonated with me, and judging by the comments, resonated with a lot of others, too.\nIt reads,\n&ldquo;My buddy is an electrician and told me a few months ago that he always leaves the screws in a vertical position on jobs as a sign of craftsmanship. Been thinking ever since what my “vertical screws” equivalent is for product design.&rdquo;\nThis is so great.",
      "summary_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://vickiboykis.com/index.xml",
        "value": "This weekend, I saw a tweet that really resonated with me, and judging by the comments, resonated with a lot of others, too.\nIt reads,\n&ldquo;My buddy is an electrician and told me a few months ago that he always leaves the screws in a vertical position on jobs as a sign of craftsmanship. Been thinking ever since what my “vertical screws” equivalent is for product design.&rdquo;\nThis is so great."
      }
    }
  },
  {
    "blog": {
      "title": "/dev/lawyer",
      "by": "Kyle E. Mitchell",
      "url": "https://writing.kemitchell.com/",
      "feed": "https://writing.kemitchell.com/atom.xml",
      "description": "A blog by a lawyer very knowledgeable of open source licenses. Kyle has\nwritten several niche licenses that try to be better than the existing FOSS\nones. The blog is frequently updated with articles on open source\nsustainability, free work and profiteering by industry from FOSS\ncontributors. There are also links to other blogs in the same field.",
      "section": "Other IT related topics"
    },
    "entry": {
      "title": "New Microsoft Word Comments Weirdness",
      "title_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://writing.kemitchell.com/atom.xml",
        "value": "New Microsoft Word Comments Weirdness"
      },
      "links": [
        {
          "href": "https://writing.kemitchell.com/2022/06/29/New-Microsoft-Word-Comments-Weirdness",
          "rel": "alternate",
          "type": "text/html",
          "title": "New Microsoft Word Comments Weirdness"
        }
      ],
      "link": "https://writing.kemitchell.com/2022/06/29/New-Microsoft-Word-Comments-Weirdness",
      "published": "2022-06-29T23:33:00+00:00",
      "published_parsed": [
        2022,
        6,
        29,
        23,
        33,
        0,
        2,
        180,
        0
      ],
      "updated": "2022-06-29T23:33:00+00:00",
      "updated_parsed": [
        2022,
        6,
        29,
        23,
        33,
        0,
        2,
        180,
        0
      ],
      "id": "https://writing.kemitchell.com/2022/06/29/New-Microsoft-Word-Comments-Weirdness",
      "guidislink": false,
      "content": [
        {
          "type": "text/html",
          "language": null,
          "base": "https://writing.kemitchell.com/2022/06/29/New-Microsoft-Word-Comments-Weirdness",
          "value": "<p>Beware!  Microsoft Word users who bind keyboard shortcuts for the <code class=\"language-plaintext highlighter-rouge\">NextChangeOrComment</code> and <code class=\"language-plaintext highlighter-rouge\">PreviousChangeOrComment</code> commands may overlook new-style comments by relying on them.</p>\n\n<p>On my Windows machine, those commands correctly cycle through tracked changes and old-style comments, but <em>not</em> new-style comments.  The “Next Comment” and “Previous Comment” buttons on the “Review” tab cycle <em>both</em> old- and new-style comments, as well as do their corresponding <code class=\"language-plaintext highlighter-rouge\">NextComment</code> and <code class=\"language-plaintext highlighter-rouge\">PreviousComment</code> commands.</p>\n\n<p>I have bound additional shortcuts to <code class=\"language-plaintext highlighter-rouge\">NextComment</code> and <code class=\"language-plaintext highlighter-rouge\">PreviousComment</code> for now.  Hopefully Microsoft notices this was overlooked and fixes <code class=\"language-plaintext highlighter-rouge\">NextChangeOrComment</code> and <code class=\"language-plaintext highlighter-rouge\">PreviousChangeOrComment</code>.</p>"
        }
      ],
      "summary": "a gotcha for legal power users",
      "authors": [
        {
          "name": "Kyle E. Mitchell"
        }
      ],
      "author_detail": {
        "name": "Kyle E. Mitchell"
      },
      "author": "Kyle E. Mitchell",
      "tags": [
        {
          "term": "Legal Drafting",
          "scheme": null,
          "label": null
        },
        {
          "term": "Software",
          "scheme": null,
          "label": null
        }
      ],
      "summary_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://writing.kemitchell.com/atom.xml",
        "value": "a gotcha for legal power users"
      }
    }
  },
  {
    "blog": {
      "title": "The Webb Blog",
      "by": "Paul Anthony Webb",
      "url": "https://blog.webb.page/",
      "feed": "https://blog.webb.page/feed/atom",
      "description": "This author has an opinion on how the currently broken Internet can be\nfixed. Let's see what happens...",
      "section": "Other IT related topics"
    },
    "entry": {
      "title": "Things I learned from my parents",
      "title_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://blog.webb.page/feed/atom",
        "value": "Things I learned from my parents"
      },
      "id": "https://blog.webb.page/2022-04-24-things-i-learned.txt",
      "guidislink": true,
      "link": "https://blog.webb.page/2022-04-24-things-i-learned.txt",
      "links": [
        {
          "href": "https://blog.webb.page/2022-04-24-things-i-learned.txt",
          "rel": "alternate",
          "type": "text/html"
        }
      ],
      "updated": "2022-04-24T00:00:00.000Z",
      "updated_parsed": [
        2022,
        4,
        24,
        0,
        0,
        0,
        6,
        114,
        0
      ],
      "summary": "It's not all bad",
      "summary_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://blog.webb.page/feed/atom",
        "value": "It's not all bad"
      },
      "content": [
        {
          "type": "text/html",
          "language": null,
          "base": "https://blog.webb.page/feed/atom",
          "value": "<p>When you're a kid, the people you look up to tend to be your own parent(s)/\nlegal guardian(s). The older you get, the more you realize your parents and\nother adults are very much floundering, trying to figure things out. As your\nown life experiences grow, you may look back on your childhood with resentment\nand wonder if your parents were intentional in their harm, or oblivious. I've\nspent far too much time dwelling on the past and keeping grudges. An\nunfortunate truth that's gotten me past that is realizing my parents most\nlikely do not remember how their actions and/or words affected me. While I'm\nsimmering over events that transpired a decade or more prior, they're living\ntheir lives — watching TV, doing laundry, figuring out what to eat, &amp;c.</p>\n<p>I know now I was willingly engaging in mental self-harm.</p>\n<p>Yesterday, I had a bit of back-and-forth with my father about COVID-19 in the\nfamily group chat. Mask mandates, vaccine effectiveness, &quot;narratives,&quot; &quot;COVID\nfear messaging and marketing,&quot; the works. Needless to say, the conversation\ndevolved into petty remarks so I stopped responding (ironically, my father\nstated he wanted respect for his views while gaslighting me for mine, but\nI digress).</p>\n<p>I won't lie, the conversation bothered me. It feels like I lost my father to\nFox News and conspiracy websites with dubious sources, one of which he\npresented as wholly factual and apparent proof of my idiocy.</p>\n<p>My relationship with my parents have not been the best but in recent years I've\nbeen trying to work through my issues with being close to them for the reasons\nmentioned at the top of this post. But uh, wow…it was relatively easy to slide\nback into those negative thoughts I used to have. Too easy.</p>\n<p>I awoke today, refreshed and, thinking about how I used to see my parents when\nI was a young kid. After all, I <strong>am</strong> a product of their teachings,\nintentional and otherwise.</p>\n<p>What I learned from my father:</p>\n<ul>\n<li>It takes two people to argue (the irony is not lost on me).</li>\n<li>Ensure doors and windows are closed and locked before heading to bed.</li>\n<li>There are no new problems in the world. If you have a problem, someone's\nwritten a book about it.</li>\n<li>Look someone in the eye when shaking their hand.</li>\n<li>If you have something to say, be clear. Say it with your chest.</li>\n<li>Hard work and dedication is how you get things done.</li>\n<li>Being responsible is the single best trait you can have.</li>\n<li>Games are good.</li>\n</ul>\n<p>What I learned from my mother:</p>\n<ul>\n<li>Don't ever let someone tell you you can't do something.</li>\n<li>To say &quot;I'm sorry&quot; is to say, &quot;I'm a sorry person.&quot; &quot;I apologize,&quot; is better.</li>\n<li>Art is good.</li>\n<li>Techno is good.</li>\n<li>Be yourself.</li>\n</ul>\n<p>What I learned from both my parents:</p>\n<ul>\n<li>Parenting doesn't end just because a marriage does.</li>\n<li>No one escapes consequences.</li>\n<li>Every person in the world is trying their best with the cards they're dealt.</li>\n<li>Racism sucks, is stupid, and definitely doesn't make sense. Especially since\nBlack people built this country (America).</li>\n<li>I can do anything I put my mind to.</li>\n<li>The truth shall set you free.</li>\n</ul>\n<p>We are all shaped by the experiences life either politely sends or violently\nthrows our way. Much of the sadness we feel when thinking of the past is the\nfact that the people we miss from back then are not the same people we know\nnow. Sure, they may respond to the same name, and may even have the same phone\nnumber, but we are all changing, all the time.</p>\n<p>For better or worse. 🕸</p>"
        }
      ],
      "authors": [
        {
          "name": "Paul Anthony Webb",
          "email": "paul+blog@webb.page",
          "href": "https://webb.page"
        }
      ],
      "author_detail": {
        "name": "Paul Anthony Webb",
        "email": "paul+blog@webb.page",
        "href": "https://webb.page"
      },
      "author": "Paul Anthony Webb (paul+blog@webb.page)",
      "href": "https://webb.page",
      "published_parsed": [
        2022,
        4,
        24,
        0,
        0,
        0,
        6,
        114,
        0
      ],
      "published": "2022-04-24T00:00:00.000Z"
    }
  },
  {
    "blog": {
      "title": "Bryan Cantrill and other blogs at DTrace.org",
      "url": "http://dtrace.org/blogs/",
      "feed": "http://dtrace.org/blogs/feed/",
      "description": "A brilliant technologist and a good conference speaker who worked at Sun and\nJoyent (SmartOS), and now have founded a new startup (Oxide). Other blogs at\nDTrace.org are updated less frequently but usually are also interesting.",
      "section": "Other IT related topics"
    },
    "entry": {
      "title": "Twitter Spaces, a few weeks in",
      "title_detail": {
        "type": "text/plain",
        "language": null,
        "base": "http://dtrace.org/blogs/feed/",
        "value": "Twitter Spaces, a few weeks in"
      },
      "links": [
        {
          "rel": "alternate",
          "type": "text/html",
          "href": "http://dtrace.org/blogs/bmc/2021/05/02/twitter-spaces-a-few-weeks-in/"
        }
      ],
      "link": "http://dtrace.org/blogs/bmc/2021/05/02/twitter-spaces-a-few-weeks-in/",
      "comments": "http://dtrace.org/blogs/bmc/2021/05/02/twitter-spaces-a-few-weeks-in/#comments",
      "published": "Mon, 03 May 2021 02:15:31 +0000",
      "published_parsed": [
        2021,
        5,
        3,
        2,
        15,
        31,
        0,
        123,
        0
      ],
      "authors": [
        {
          "name": "bmc"
        }
      ],
      "author": "bmc",
      "author_detail": {
        "name": "bmc"
      },
      "id": "http://dtrace.org/blogs/bmc/?p=1149",
      "guidislink": false,
      "summary": "As a kid, I listened to a lot of talk radio. This was in the 80s, before the internet &#8212; and before the AM dial became fringe. I have fond memories of falling asleep to the likes of Bruce Williams who just gave damned good, level-headed advice. It was, at essence, both optimistic and temperate: [...]",
      "summary_detail": {
        "type": "text/html",
        "language": null,
        "base": "http://dtrace.org/blogs/feed/",
        "value": "As a kid, I listened to a lot of talk radio. This was in the 80s, before the internet &#8212; and before the AM dial became fringe. I have fond memories of falling asleep to the likes of Bruce Williams who just gave damned good, level-headed advice. It was, at essence, both optimistic and temperate: [...]"
      },
      "content": [
        {
          "type": "text/html",
          "language": null,
          "base": "http://dtrace.org/blogs/feed/",
          "value": "<p>As a kid, I listened to a lot of talk radio.  This was in the 80s, before the internet &#8212; and before the AM dial became fringe.  I have fond memories of falling asleep to the likes of <a href=\"https://en.wikipedia.org/wiki/Bruce_Williams_(talk_radio_host)\">Bruce Williams</a> who just gave damned good, level-headed advice.  It was, at essence, both optimistic and temperate:  a cool head to help people work through a tough spot.</p>\n<p>Nothing really replaced the call-in show:  talk radio devolved into poisonous echo chambers, while social networking gave people other outlets (too many!) to have conversations.  But these online conversations &#8212; the written word &#8212; lack something: Twitter&#8217;s tight form gives us the hot take, blogs (ahem!) give us the longer form, but it both cases, the conversations that result seem to either lose their sizzle or go thermonuclear.  Video is really great for some stuff (I have spoken about the rise of video and the <a href=\"https://www.youtube.com/watch?v=4PaWFYm0kEw\">preservation of oral tradition in software engineering</a>) &#8212; but the discussion quality there is even worse.  (When did YouTube comments become such a hellhole?!) And of course, TikTok has given us social, short-form video, which can be very entertaining, but isn&#8217;t really designed to induce any meaningful discussion.</p>\n<p>And of course, I love podcasts, and one of the reasons I was excited to <a href=\"http://dtrace.org/blogs/bmc/2019/12/02/the-soul-of-a-new-computer-company/\">start a company</a> was to get an excuse to make <a href=\"https://oxide.computer/podcast/\">the podcast that we ourselves always wanted</a>.  Podcasts are particularly great because you can <strong>do something else</strong> while listening to them:  they fill in that time when you&#8217;re doing the dishes or picking up the kids or whatever.  But podcasts obviously miss the interactivity entirely.  (Or mostly: let us not so quickly forget <a href=\"https://twitter.com/bcantrill/status/1261207048340951041\">TWiV reading my letter on-air</a>!)</p>\n<p>Into all of this, enter Clubhouse and the rise of social audio.  I had immediate Bruce Williams flashbacks, and was excited to participate.  But my choice of device makes me unwelcome in Clubhouse&#8217;s eyes:  their lack of an Android app is clearly not a mere temporary gap, but rather a deliberate deprioritization.  (I certainly honor a young company&#8217;s need to focus, but how else can one describe an exceedingly well-capitalized company adding in-app payments before addressing 75% of the market?!)  To me, the deprioritization of Android reflects Clubhouse&#8217;s deeper problem:  it is fundamentally elitist and exclusionary.  Avid Clubhouse users may claim that this was not always so, but <strong>it says it right there on the tin</strong>:  it is, at the end of the day, a <em>clubhouse</em> &#8212; not a cafe or a town square.  I personally have no interest in participating in venues that deliberately limit the participants:  I want to engage with the broadest possible cross-section, not some subset that has been manicured by circumstance or technology choice.  (For this same reason, I do not give talks unless the talk will be recorded and made freely available.)</p>\n<p>Given all of this, you can imagine my enthusiasm for Twitter Spaces: it captures the promise that I see in the medium &#8212; but addresses many of the problems with Clubhouse&#8217;s implementation.  I have been participating in them for the past few weeks and (excitingly!) found last week that I have the ability to create Spaces.  Here are my takeaways so far:</p>\n<ul>\n<li>\n<p><strong>This is an even bigger deal than I thought it was.</strong>  All of the strengths that I perceived in the medium seem to be even stronger than I thought they would be, and in particular &#8212; as with podcasts &#8212; I can have a conversation while I do something else.  It is really nice to have social networking time after which one looks back at a clean kitchen or a prepared meal!</p>\n</li>\n<li>\n<p><strong>Spaces have broadened the people I follow.</strong>  In every Space I have been in, I have come away following someone new.  I find one of the most interesting aspects of Twitter to be able to be a part of conversations and social circles that broaden our perspectives (socially, technically, or otherwise) &#8212; and Spaces takes this to a new level:  I find that I&#8217;m following people based on a comment that they make that I wouldn&#8217;t otherwise see in the din of my feed.</p>\n</li>\n<li>\n<p><strong>Spaces have felt very playful.</strong>  In so many ways, this reminds me of early social networking circa 2003 &#8212; or of first getting online a decade prior.  It just feels new, and fresh, and&#8230; fun!  For example, I was in one space where a security researcher that I revere was with their crew, all trying to find ways to hack the captioning.  (They made some interesting discoveries: because the captioning is done locally, they can actually reveal more about you than what you actually say!)  I was more or less laughing the whole time; it was delightful.</p>\n</li>\n<li>\n<p><strong>The content is golden.</strong>  If I have one complaint about Spaces, it&#8217;s that they aren&#8217;t publicly recorded &#8212; because there&#8217;s some great content here!  I am hoping that this gets added over time (obviously, opt-in and clear to all participants!), because speaking personally, I want to go back and listen to an awesome Space that I might have missed &#8212; and I want others to be able to do the same with any Space that I host.</p>\n</li>\n<li>\n<p><strong>People have been really nice!</strong>  Okay, this is a little one, but I think an essential one:  in every Space I&#8217;ve been in, the people have just been incredibly friendly and welcoming.  One of the challenges of the written word is that it&#8217;s too easy to be nasty:  our mirror neurons don&#8217;t fire when our damage is inflicted at a distance.  (Take it from the guy still trying to apologize for a Usenet comment from several decades ago!)  While it&#8217;s still obviously very early for Twitter Spaces, being in a spoken conversation makes us much more predisposed to empathy &#8212; and I&#8217;m optimistic that the medium will retain the decency that we have lost elsewhere, allowing us a venue to listen to and learn from other perspectives.   I also really like Twitter&#8217;s emphasis on safety &#8212; and I&#8217;m hopeful that the inevitable bad behavior that does crop up is taken care of pretty quickly.</p>\n</li>\n<li>\n<p><strong>Clubhouse is in trouble.</strong>  I have been in a couple of Spaces where Clubhouse comes up (indeed, one of the Spaces I was in was a security researcher reporting how poorly Clubhouse handled a pretty serious safety issue that she had found), and in all of those conversations, the tenor is more or less the same:  there was a brief moment last summer (especially, post George Floyd) when Clubhouse felt really important &#8212; profound, even &#8212; but their poor execution since has driven people away.  In this regard, my early social networking metaphor may be apt in more ways than one: Clubhouse feels like <a href=\"https://en.wikipedia.org/wiki/Friendster\">Friendster</a>.  And just as Friendster hit on something huge (social networking!) for the wrong reasons (the founder&#8217;s desire to find dates!), Clubhouse&#8217;s focus on listening to famous people feels misplaced.  (Speaking for myself, I am looking for conversations, not outtakes of <a href=\"https://en.wikipedia.org/wiki/Behind_the_Music\">Behind the Music</a>.)</p>\n</li>\n<li>\n<p><strong>Hosting has been rewarding.</strong>  So far, <a href=\"https://twitter.com/bcantrill/status/1386765936405872641\">I have hosted one Space</a>, convincing <a href=\"https://twitter.com/ahl\">Adam</a> to join me so I wouldn&#8217;t die alone.  I think it&#8217;s fair to say that Adam was somewhat skeptical going in, but came out seeing promise in the medium.  For example, one participant was dialing in from central Asia (where it was 4a!), and we ended up in a discussion on how insulated kids can become from the underlying mechanics of how computers actually work.  He decribed that growing up needing to rely on second-hand computers was an essential part of his own technical education &#8212; that having less made him need to understand more.  It was a moment that had everyone reflecting, and I&#8217;m honestly not sure how else that little interaction would have happened.</p>\n</li>\n</ul>\n<p>All in all, very positive and promising!  Of course, there are still lots of things to stub your toe on; this is still new, after all, and lots of stuff doesn&#8217;t work quite right.  And there&#8217;s also a lot to be figured out by those of us who will use the medium (reminder: retweets were invented by users, not by Twitter!).  For my part from a hosting perspective, I am going to take some inspiration from talk radio and experiment with both regularity and time-bounds:  Adam and I are going to host a Space again tomorrow (Monday) at 5p Pacific, keeping it again to about an hour.  (We appear to be aided in our time bounds last week by a memory leak that caused my app to abort after about an hour!)  So if you&#8217;re interested, drop on by &#8212; we&#8217;d love to hear what you have to say, which indeed is very much the whole point!</p>"
        }
      ],
      "wfw_commentrss": "http://dtrace.org/blogs/bmc/2021/05/02/twitter-spaces-a-few-weeks-in/feed/",
      "slash_comments": "0"
    }
  },
  {
    "blog": {
      "title": "Scholar's Stage",
      "by": "Tanner Greer",
      "url": "https://scholars-stage.org/",
      "feed": "https://scholars-stage.org/feed/",
      "description": "Essays of a westerner living in China. Unexpected sides of Chinese and\ngenerally non-Western politics and economics. A lot of book reviews\n(non-fiction).",
      "section": "Politics"
    },
    "entry": {
      "title": "A Guide Map for Reading the East Asian Canon",
      "title_detail": {
        "type": "text/plain",
        "language": null,
        "base": "https://scholars-stage.org/feed/",
        "value": "A Guide Map for Reading the East Asian Canon"
      },
      "links": [
        {
          "rel": "alternate",
          "type": "text/html",
          "href": "https://scholars-stage.org/a-guide-map-for-reading-the-east-asian-canon/"
        }
      ],
      "link": "https://scholars-stage.org/a-guide-map-for-reading-the-east-asian-canon/",
      "comments": "https://scholars-stage.org/a-guide-map-for-reading-the-east-asian-canon/#respond",
      "authors": [
        {
          "name": "T. Greer"
        }
      ],
      "author": "T. Greer",
      "author_detail": {
        "name": "T. Greer"
      },
      "published": "Fri, 01 Jul 2022 02:05:39 +0000",
      "published_parsed": [
        2022,
        7,
        1,
        2,
        5,
        39,
        4,
        182,
        0
      ],
      "tags": [
        {
          "term": "Books and Literature",
          "scheme": null,
          "label": null
        },
        {
          "term": "Culture",
          "scheme": null,
          "label": null
        },
        {
          "term": "History",
          "scheme": null,
          "label": null
        },
        {
          "term": "Japan",
          "scheme": null,
          "label": null
        },
        {
          "term": "The Middle Kingdom",
          "scheme": null,
          "label": null
        }
      ],
      "id": "https://scholars-stage.org/?p=3486",
      "guidislink": false,
      "summary": "<!-- wp:paragraph -->\n<p><strong>Readers may remember</strong> <a href=\"https://scholars-stage.org/a-non-western-canon-what-would-a-list-of-humanitys-100-greatest-writers-look-like/\">my stab at a global Great Books list</a>. Recently a reader contacted me asking for guidance: they wanted to read through the books on the \"East Asian\" section of that list, but did not believe he had the proper historical knowledge to understand or contextualize what they were reading. What do I recommend they read to make sense of the list?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>What follows will not make sense if you have not looked at that original post. Here is what I told him:</p>\n<!-- /wp:paragraph -->",
      "summary_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://scholars-stage.org/feed/",
        "value": "<!-- wp:paragraph -->\n<p><strong>Readers may remember</strong> <a href=\"https://scholars-stage.org/a-non-western-canon-what-would-a-list-of-humanitys-100-greatest-writers-look-like/\">my stab at a global Great Books list</a>. Recently a reader contacted me asking for guidance: they wanted to read through the books on the \"East Asian\" section of that list, but did not believe he had the proper historical knowledge to understand or contextualize what they were reading. What do I recommend they read to make sense of the list?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>What follows will not make sense if you have not looked at that original post. Here is what I told him:</p>\n<!-- /wp:paragraph -->"
      },
      "wfw_commentrss": "https://scholars-stage.org/a-guide-map-for-reading-the-east-asian-canon/feed/",
      "slash_comments": "0",
      "post-id": "3486"
    }
  },
  {
    "blog": {
      "title": "maya.land",
      "url": "https://maya.land/posts/",
      "feed": "https://maya.land/feed.xml",
      "description": "Carefully curated personal web space. Some posts were interesting\nto me, let's see how it goes",
      "section": "Uncategorized new blogs"
    },
    "entry": {
      "title": "three pages of linguistics paper that you’ve got to read",
      "title_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://maya.land/feed.xml",
        "value": "three pages of linguistics paper that you’ve got to read"
      },
      "links": [
        {
          "href": "https://maya.land/responses/2022/06/13/anne-cutler-linguistics.html",
          "rel": "alternate",
          "type": "text/html",
          "title": "three pages of linguistics paper that you’ve got to read"
        }
      ],
      "link": "https://maya.land/responses/2022/06/13/anne-cutler-linguistics.html",
      "published": "2022-06-13T00:00:00-07:00",
      "published_parsed": [
        2022,
        6,
        13,
        7,
        0,
        0,
        0,
        164,
        0
      ],
      "updated": "2022-06-13T00:00:00-07:00",
      "updated_parsed": [
        2022,
        6,
        13,
        7,
        0,
        0,
        0,
        164,
        0
      ],
      "id": "https://maya.land/responses/2022/06/13/anne-cutler-linguistics",
      "guidislink": false,
      "content": [
        {
          "type": "text/html",
          "language": null,
          "base": "https://maya.land/responses/2022/06/13/anne-cutler-linguistics.html",
          "value": "<p>Really–even if you doubt me on it, it’s not want but <em>need</em>.</p>\n\n<p>Found on <a href=\"https://www.metafilter.com/195588/The-premise-of-the-paper-proves-itself\">Metafilter</a>, where a commenter replied that the author was <a href=\"https://en.wikipedia.org/wiki/Anne_Cutler\">Anne Cutler</a>, and that just this month she’d died. <em>Sentence stress and sentence comprehension</em> was the name of her freaking dissertation, so she really knew the game…</p>"
        }
      ],
      "summary": "Really–even if you doubt me on it, it’s not want but need.",
      "authors": [
        {
          "name": ""
        }
      ],
      "author_detail": {
        "name": ""
      },
      "author": "",
      "tags": [
        {
          "term": "responses",
          "scheme": null,
          "label": null
        },
        {
          "term": "bookmark",
          "scheme": null,
          "label": null
        },
        {
          "term": "linguistics",
          "scheme": null,
          "label": null
        }
      ],
      "summary_detail": {
        "type": "text/html",
        "language": null,
        "base": "https://maya.land/feed.xml",
        "value": "Really–even if you doubt me on it, it’s not want but need."
      }
    }
  }
]
